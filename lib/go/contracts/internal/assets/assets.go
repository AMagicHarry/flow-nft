// Code generated by go-bindata. DO NOT EDIT.
// sources:
// ../../../contracts/ExampleNFT.cdc (8.546kB)
// ../../../contracts/MetadataViews.cdc (12.091kB)
// ../../../contracts/NonFungibleToken.cdc (4.832kB)

package assets

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	clErr := gz.Close()
	if clErr != nil {
		return nil, clErr
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _examplenftCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x59\x5f\x6f\xe3\xb8\x11\x7f\xf7\xa7\x98\xcb\xc3\x56\x46\x13\xab\x05\x8a\x3e\x18\xf1\x66\x17\x9b\x35\x1a\xa0\x67\x2c\x12\xb7\x7d\x58\x04\x3d\x5a\x1c\xc7\x44\x64\x52\x20\x69\xbb\xba\x9c\xbf\x7b\xc1\x3f\x92\x28\x89\xb2\xbd\xb7\x0b\xb4\xc2\xe1\xd6\x11\x67\x86\x33\xbf\xe1\xfc\xa3\xd2\x14\x96\x1b\xa6\x80\x29\x20\x1c\xf0\x3f\x64\x5b\xe4\x08\xcc\xfc\x7f\x8b\x5c\x13\xcd\x04\x07\xb1\x06\x02\xf3\x5c\x1c\x60\x21\xf8\xcd\x7c\xc7\x5f\xd8\x2a\x47\x58\x8a\x57\xe4\xa3\x34\x85\x07\x6d\xf8\xb9\xd0\x50\x10\xa9\x0d\xb9\xde\x20\x88\xf5\x9a\x65\x8c\xe4\xa0\x34\xe1\x94\x48\x0a\xab\x9d\x06\xa6\x81\x28\xb5\xdb\x22\x05\x2d\x60\x85\x86\x7f\x8f\xb2\x04\xc5\xb6\x2c\x27\xd2\xbc\xdd\x88\x03\x6c\x09\x2f\x61\x31\x5f\x2a\x38\x88\x5d\x4e\x1b\x95\xac\xec\x4c\x48\x84\xf5\x8e\x67\x46\x3f\x92\x33\x5d\x4e\x46\x23\xb6\x2d\x84\xd4\x46\xc7\x4a\x45\xab\x21\xac\xa5\xd8\xc2\xd5\x24\xed\x2e\x4c\x32\x9a\x5d\x55\x5c\x3f\xa3\x26\x94\x68\xf2\x4f\x86\x07\x55\xb3\xb4\xde\x3a\xfa\x51\xb1\x5b\x41\x26\xb8\x96\x24\xd3\xf0\xd9\x21\xb6\x98\x2f\xa7\xfd\x8d\xdf\x46\x23\x00\x00\xc3\xb0\xb7\x96\x69\x92\x3f\xed\x8a\x22\x2f\xa7\xf0\x8f\x07\xae\xff\xfa\x97\x86\x00\xf7\xc6\xb6\x4f\x5e\xee\x03\x67\x9a\x91\x9c\xfd\x8a\x34\x19\x77\x68\xfe\xc5\xf4\x86\x4a\x72\x48\x18\xad\xc4\x5c\x5b\x85\xa7\xf0\x91\x52\x89\x4a\xdd\x75\x59\xee\xb1\x10\x8a\xe9\x16\x87\x16\x21\x7d\xcd\x90\xa3\xd1\x22\xcf\xd1\x42\xfb\xa4\x85\x24\x2f\xf8\x85\xe8\xcd\x14\x82\x3f\x06\xc8\xbf\xec\x56\x39\xcb\x1c\x75\xf3\xbb\x45\xfc\x33\xe3\x1a\xe5\xa0\xdc\x9a\x56\xa2\x12\x3b\x99\x21\x44\xa1\x9d\x3c\x2c\xe6\xcb\xeb\xb6\xd3\x26\x8f\xa8\x44\xbe\x47\x09\x6f\x56\x4a\xb8\x6b\x63\xf8\xa8\xb7\xc6\xc9\x16\x8d\x12\x92\xf1\x97\xde\x22\x45\x95\x49\x56\x18\xe3\x06\x69\xf4\x66\xb7\x5d\x71\xc2\xf2\x1e\x05\xc9\x32\x54\x2a\x51\x98\xaf\xc7\x96\x54\x8a\x92\xe4\x9a\xa1\x9a\xc2\xd7\x8e\xf2\x76\xa5\x7c\x6e\xf4\x63\x9c\xe9\xa4\xfe\xcb\xbe\x69\xdc\xd7\x7a\x1f\x5a\xd0\x5e\x89\xa8\xdf\x26\xe8\xe9\xde\x5e\xbe\x40\xdf\x8a\x74\x1c\xc0\x6e\x1e\x63\xf4\x84\x51\x98\x01\xa3\xfd\x05\xa3\x32\xcc\xac\xe6\xfd\xc5\x40\x6b\x98\x85\x36\xf4\x49\x6b\xfd\x61\xd6\xd8\xd2\x27\xab\xed\x80\x59\x63\x53\x4d\x76\xb4\xbf\x5a\x7e\x5d\xef\x38\xbc\xa0\xb6\xb6\x26\xe3\x29\x7c\x5d\x96\x05\x3e\x77\x4c\x94\xa8\x77\x92\xc3\xd7\xd6\x4b\xf3\x18\xe2\xdb\x36\x5e\xf7\x4c\x15\x39\x29\xdf\x27\xe3\xeb\x4b\xc8\x1f\x2b\x25\x2f\x65\x58\xcc\x97\x4d\x1c\xde\x13\x4d\x2e\x65\x7c\x42\xc9\x48\xfe\xde\xa7\x99\xea\x79\x0e\xc0\xe9\x01\x23\x5d\xa0\x19\xfe\xe4\xdf\xb0\x67\x78\x98\x5a\xc9\xe3\x29\x7c\xe4\xe5\x93\x96\xbb\x4c\xdf\x75\x8f\xc3\x81\xe9\x6c\x63\x89\x3b\x2b\xe6\xc9\x88\xc2\xd3\xa8\x4d\x7b\x3c\x81\x07\xa2\x4c\x49\x94\x03\xea\x78\xa9\xcf\x61\x1f\xa6\xea\x69\x85\x4f\xf7\x68\x0e\xb3\x05\x41\xd5\xd6\xec\x6f\xcb\xe5\x97\x39\xcb\x71\x58\x35\xf3\xec\x64\x3e\xed\x9c\xee\x41\xfa\x71\x74\xa5\xff\x76\x08\xe0\xda\xfb\xdf\x80\xaf\xe3\x19\xb6\xc1\x47\xfe\x77\x6a\x16\x46\xc0\x37\x28\x57\xb3\x9d\xd1\xaf\x9f\x05\x7e\x9f\x9a\xb1\xb8\xfb\x06\x75\x7b\xec\x27\xd4\x0e\x6b\x66\xd3\x77\x4c\xa2\xd5\x7a\xf8\x70\x16\x41\x8d\x8e\x4a\x69\x0a\xf7\x09\x21\x52\xec\x19\x45\xe9\xc4\xa4\x85\x64\x7b\xa2\x31\xc5\x5a\x5e\x23\xee\x9c\x26\x0d\xa5\x4b\x22\xb7\xef\xa2\x5a\xbd\x05\x6f\x3f\x47\xb6\x71\x5a\x1f\xa3\x59\xaf\xbd\xe1\xdf\x19\x7f\x45\x6a\xb6\xfa\x01\x1b\x5e\xf7\x3a\x93\xf3\x14\x8f\x98\x21\xdb\xa3\xbc\x8e\xb7\x2f\x8d\x80\x33\xd6\x78\x1f\xfc\xcf\xed\xf9\xe2\x15\xf9\x4e\x7b\x32\x89\x44\xe3\xe7\x6d\xa1\xcb\x86\x65\xee\x7b\xfc\x29\x24\xa6\xf2\x98\x52\xfc\xe1\x84\x8a\x91\xd2\x12\x3e\x3e\x04\x6f\x6f\x02\x2c\xa2\xdb\x26\xf1\xbc\x6a\x9e\xe3\x25\x29\xf7\x18\xeb\x13\x78\x90\xc7\x1d\xc1\x31\xd2\xef\xda\xfe\x78\x4d\x32\x84\x61\x2f\x75\x3a\x5c\x83\x0c\xf5\x2d\xbe\x36\x88\xc4\x40\x5a\xcc\x97\xe3\x58\x8b\xf3\x70\xef\x1a\x1c\xd7\x58\x3e\xf7\x48\x56\x42\x4a\x71\x58\xcc\x97\xc1\xf4\x30\x9e\xc2\xbb\xd8\x06\x03\xcc\x8d\x21\x1d\x19\x81\x1b\x16\xf3\x65\xb7\x65\x28\x84\xd2\x11\x87\x26\x12\xd5\x2e\xd7\x30\x9b\x19\x44\xc7\xf0\xdb\x6f\xd5\xab\x3b\xdb\x6f\x9a\x86\x73\x20\x05\x5f\x7d\x22\xdc\x8c\xa9\x4e\xad\x00\x60\x90\xb8\x46\x89\x3c\xc3\xa9\x9d\x2f\x1f\xee\xab\x29\xd6\xf9\x0e\x69\x43\x61\x66\x5d\xc6\x33\x21\x25\x66\xfa\x6a\xc0\xed\xc3\xfe\x0d\xf3\xdd\x89\x38\xec\x8f\x3c\x75\x98\xf5\x97\xea\x8c\xd2\x5f\xea\x0b\x3e\x17\xa5\x01\xe4\x69\x0a\x94\xb9\x19\x5b\x96\x06\x11\x03\x55\x26\xf8\x5a\xc8\x2d\xe3\x2f\x60\x0f\x9b\x0a\xc9\x0d\x01\x53\x40\x1a\x7b\x75\x59\x20\x1c\x98\xde\x00\xe1\xf0\x8b\xf3\xfd\x2f\x06\xe0\x35\xc3\x9c\xb6\x4e\x8c\x19\x92\xc5\x81\x23\x35\x73\xff\x14\x3e\xbc\x39\xea\xc8\xf8\xb7\x98\x2f\x8f\xed\x49\x09\x92\xe8\x00\x52\x8b\x83\xdb\x1b\x78\x3b\xc6\xba\xda\x34\xb5\xea\x99\x91\x1a\x24\x6e\xc5\x1e\xed\x5d\x88\xb1\xc4\x5e\x03\xb8\xfb\x86\x1a\x1d\xc2\x29\x38\x22\xa6\x41\x0b\xb7\x4c\xf2\x1c\x65\xef\xf4\x57\x62\x93\xea\xc7\xc3\x7d\x70\xfa\xa3\x21\xda\xb1\xc1\x8e\x97\xf6\x2e\xe1\xf6\xa6\x63\xd0\xc4\xe9\x9a\xbc\x62\x39\x85\x66\x83\x31\xdc\xdd\x41\x41\x38\xcb\x92\xab\x2d\x53\xca\xb8\x69\x31\x5f\x5e\x8d\x47\x2d\xc1\xb8\x65\x9d\x9b\x04\xbb\xcd\x84\xd1\xea\x2e\xa1\xde\x4d\xde\x4d\x88\xbb\x27\xe8\xc8\xa8\xb3\xa9\x65\x1d\x80\xd6\xe7\x25\xd0\xe4\xd5\xe0\x6a\x61\x35\x10\x12\x4a\x5b\x08\xd6\x00\xab\xe0\xc8\x85\x82\x6a\x26\x1f\x9f\x9e\x91\x51\x20\x52\x92\xf2\xf7\x25\xc4\x53\x70\xbb\x1f\x44\xfd\x04\x1f\xda\x79\x6a\xd4\xe3\x69\xb2\x9a\x19\x43\x3d\x90\x6d\x32\x63\x01\xa5\x56\x65\x8e\x07\x2f\xdc\xdb\x10\xc4\xd8\x61\xc3\xb2\x4d\x7d\x0c\xed\x35\x5a\x4e\x41\x70\xec\xed\x29\x72\xba\x8c\x9f\x8c\xaf\x8c\x3e\xd7\x06\x44\xdc\x1e\xde\x06\x19\x7f\x6b\x71\x89\xb7\x29\x2a\x2d\x45\x59\xef\x3b\xe0\x6f\x57\x51\xfc\xd9\xb0\x81\x64\xdd\x53\xa5\x53\xb3\xa6\x37\x44\x03\x91\xa6\xd4\x75\x7c\x7f\x41\x7d\x8a\x8f\xe0\x9d\xd0\x78\xc5\x52\x0d\xe8\x57\x97\x33\x23\xdb\x25\xaa\x2a\xaf\x6b\x51\xc5\xfd\xb0\x62\x69\x0a\x4a\x38\x0b\x9a\xc0\x87\x8c\x98\xa1\x98\x50\x60\x5a\xc1\xd6\xe7\x57\x7b\x62\x0d\x41\xf5\x76\x23\xa8\xfa\xae\xf2\x1a\xb7\x3d\x79\x17\x71\x3f\x51\x71\x11\x77\xe3\x9f\xc2\x1a\xf5\x63\x0b\x36\x5b\xc7\x4e\xe2\x4f\xb6\x4e\x47\x0a\x79\x9a\xc2\x27\xdb\x7c\xd9\x53\xb2\xd3\x1b\x21\xd9\xaf\xad\x4a\x6b\x3c\x92\xe7\xe2\x00\x54\x1c\x78\x46\x94\x0e\x2f\xd7\xc2\x60\x90\xb8\x86\xd9\x20\x12\x46\xf6\x79\x38\x3a\xb0\x1a\x91\x26\xf8\x3b\x36\x77\xea\xfd\xf9\x3e\x6f\x00\x62\x53\x7d\xab\xda\xdb\x01\xf9\x23\x2f\x1f\x7d\xf5\x7c\x8b\x17\xeb\x63\x24\x6f\xf1\xb5\xfe\x21\x10\x18\x59\xcd\x1c\x07\x33\x2b\xf8\x1c\x10\xde\xf2\x80\xcf\x1c\xc0\x0b\x0c\x89\x01\xe5\x33\x4d\xaf\xa0\x57\x19\xa8\x6d\x61\xbc\xe5\x4a\x53\x3f\xed\xd5\x5f\x09\x7c\xda\xe1\xa5\xe0\x68\x03\xd6\x86\xa6\x16\x7e\xee\x00\x62\xf3\x32\x9a\x39\xa0\x1b\xf8\x95\xe7\x06\x46\x85\x8b\x47\x92\xba\x60\x56\x7b\xf6\x06\x8e\x46\xfb\xc7\xba\x7f\x72\x6a\x03\xa1\x5b\xc6\x41\x48\x50\xc2\xe4\x12\x53\xd7\xab\x4f\x26\xee\x0b\x89\x38\x70\xff\x49\xc5\x8b\x20\xab\xdc\x86\xd0\x96\x71\x6d\x8d\xab\xe1\x4a\xd3\x7e\x5f\xba\x98\x2f\xdd\xdd\x7c\xf5\xd9\xc2\x4b\x31\xdc\xc6\xa1\xe6\x5f\xe5\x51\x32\x7f\xbb\x96\xce\xfe\xf9\x70\xdf\x2d\xd4\x55\xd5\x37\xff\x71\xdf\x47\x67\xac\x60\x68\x64\x04\xcd\xd4\xce\xf6\x27\x7a\x83\x4c\x86\xaf\xeb\x0c\xd0\x0b\x1e\xaf\x4d\xd2\x39\x7d\x5e\xf6\x14\xde\xbd\x9d\xed\x80\x8f\xff\xa7\x97\xe7\xdd\x76\xa1\x75\x2e\xbb\x01\x67\x5a\x65\x8e\xb6\x8e\x35\xc7\xa9\x07\x0c\xf8\x8f\x06\x41\xe4\x06\x1f\xa1\xfa\xa3\xb8\xc3\x22\x7e\x27\xda\x42\xe3\xe4\x35\x68\x00\x4b\xfd\xb3\x4f\x15\xa0\x13\xbf\x8b\x1b\xf7\x10\x39\x71\xaa\xfe\xa0\x80\x64\x99\xd8\x71\xdd\x3a\x53\xfd\x83\x04\xe1\x79\x99\x74\x9a\xc4\xdb\x1b\x87\x69\x67\xeb\x38\x7c\x30\x1b\x5a\xf8\xa3\x4f\xe6\xc9\x9f\xc7\xf1\xec\x64\x3f\xed\x8c\xdb\x83\x56\xf3\xc9\xcf\x5a\x66\xe5\x81\xb2\x02\x6b\x32\x77\x29\xdc\x52\xe1\x4f\xad\x60\x7d\x42\xd7\x97\x18\x17\x52\x28\x88\xde\xa8\x36\x73\xf4\xb2\x10\x66\x90\xfa\xdb\xc5\xe8\x15\xde\x90\x88\xe6\xa6\xd0\x48\x70\xf9\xf6\x02\x01\xbd\x4f\x80\xf1\xfd\x1d\x59\xcb\xbc\xaa\x5d\x08\x12\x67\x93\xc0\x4c\xde\x51\x64\x8f\x7e\xaa\xf0\x02\x6b\x76\x53\xd7\x82\x14\x73\x22\x09\xd7\x8a\xfa\x13\x35\x31\x52\x93\xdb\x9b\x86\x3b\xe8\x99\xa3\x80\x8e\x5b\x5a\xd7\x81\xec\x2b\x52\x46\x0a\xb2\x62\x39\xd3\x25\xac\x85\x1c\xea\x34\x5b\x1a\xe4\x8c\xbf\x0e\xdd\xeb\x5d\x30\xf2\x5f\x76\xf5\x77\xf6\x66\xe0\xf8\x3e\xe9\x4f\xd8\xe7\x2f\x8e\x35\x91\x2f\xa8\x4f\xe1\x35\x8a\xc4\x7c\xe8\x6e\x5f\x98\xbe\xc5\xd5\x5b\xc7\xd2\x4a\x8e\x4e\xcc\x19\x2f\x3b\xc6\xc0\xc3\xbd\xe3\x1a\x28\x69\xe7\xa9\xe1\x8f\xf6\xc7\xd1\x71\xf4\xdf\x00\x00\x00\xff\xff\xcb\x33\x20\x8c\x62\x21\x00\x00"

func examplenftCdcBytes() ([]byte, error) {
	return bindataRead(
		_examplenftCdc,
		"ExampleNFT.cdc",
	)
}

func examplenftCdc() (*asset, error) {
	bytes, err := examplenftCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ExampleNFT.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x55, 0xbe, 0xb7, 0x5c, 0xf0, 0x2e, 0x6d, 0xb4, 0xdb, 0x25, 0xf1, 0x99, 0x5e, 0x87, 0x2c, 0xa5, 0x4e, 0xcb, 0x46, 0xe2, 0x7f, 0x1e, 0x10, 0x8c, 0x6c, 0x2f, 0x7c, 0x1, 0xc0, 0xc3, 0xca, 0x3c}}
	return a, nil
}

var _metadataviewsCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x5a\xdd\x6f\x1b\x39\x92\x7f\xd7\x5f\x51\xf0\x01\x81\x95\x91\xa5\x64\x6f\x2f\xb8\x33\x46\xb3\x97\x4d\xe2\x59\x1f\x92\x9c\xe1\x38\x7b\x0f\x83\x41\x4c\x75\x57\x4b\xbc\xb0\xc9\x1e\x92\x6d\x45\x17\xe4\x7f\x3f\x54\x91\xec\x6f\x29\xce\x62\xf3\xe0\xa8\xbb\xc9\x62\x7d\xfe\xea\xa3\x7b\xf5\xf4\xe9\x6c\x76\xb7\x93\x0e\x32\xa3\xbd\x15\x99\x07\x59\x56\x0a\x4b\xd4\xde\x81\xdf\x21\x94\xe8\x45\x2e\xbc\x00\xe7\x85\xce\x85\xcd\xa1\xb2\xa6\x32\x0e\xf3\x99\xd4\x70\xf5\xf6\xfa\xe6\xe2\xd9\x8b\x7f\x7d\xb1\x9c\xcd\x6e\xb1\xb8\x84\x9d\xf7\x95\xbb\x5c\xad\xb6\xd2\xef\xea\xcd\x32\x33\xe5\xca\xe8\x42\x99\xfd\x8a\xff\x6c\x94\xd9\xac\x4a\xe1\x3c\xda\x55\xa1\x64\xe5\x56\x7f\x7a\xf6\xa7\xe7\xcf\xfe\xe3\xf9\x8b\x0b\x5d\xf8\x8b\x74\xd8\xb2\xcc\x67\xb3\x0f\xde\xd6\x99\x77\x20\x74\x0e\x16\x9d\xa9\x6d\x86\x0e\x32\xa1\x5b\x16\xc1\x68\x04\x63\xa1\x34\x16\x67\x0d\xa7\xfe\x50\xa1\x5b\x40\x26\x94\xc2\x1c\x1e\x24\xee\xdd\x12\xde\x88\x6c\xc7\xbf\xf9\x31\x58\xac\x2c\x3a\x92\x72\x26\x20\x97\x45\x81\x96\xe8\x7d\x96\x3a\x07\x53\x34\x52\x2f\xc0\xd5\xd9\x0e\x84\x03\x01\x99\x45\xe1\x8d\x85\x8d\x34\x5b\x2b\xaa\xdd\x61\x66\x2c\x08\xf8\xaf\x9b\x37\xbf\x82\x2c\xc5\x16\xa1\x90\x0a\x97\xb3\xa7\xab\xd9\x4c\x96\x95\xb1\x1e\xae\x6a\xbd\x95\x1b\x85\x77\xe6\x33\x6a\x28\xac\x29\xe1\x6c\xb9\xaa\xbd\x54\xd2\x1f\x56\xbd\xa7\xcb\x2c\xcf\xce\xd2\xbe\xf7\x46\x4f\x6f\x1d\x3e\x08\xbb\x66\x55\xbd\x69\x0d\xf8\x2e\xf2\xfe\x77\x12\x1c\xbe\xce\x66\x00\x00\xab\xd5\x0a\x5e\xc2\x2d\x3a\xa3\x1e\xd0\x92\x0d\x1f\x64\x8e\x0e\x44\x96\xa1\x73\xe0\x0d\x08\x70\xe8\xbb\xb2\x47\xcd\xa5\xed\x1d\x32\x8e\x2d\x43\x8a\x4f\x76\x81\x73\x5c\x6e\x97\x20\x34\xbc\xbf\xba\x9b\x0f\x8c\xe4\xc9\xbf\xa4\xf6\x68\x0b\x91\x61\x43\xc7\x9b\xc4\x46\x87\x0b\x72\x39\x3e\x17\xfc\x4e\x78\x90\x1e\x5c\x5d\x91\x4e\x06\x8c\x90\xc4\xcd\xe1\x0d\xed\x56\xc0\xaf\xbc\x2a\xad\x2c\x6a\x0d\x5b\xf4\xac\x91\xf3\xf9\x25\xfc\x76\x77\xa8\xf0\xf7\xd1\x12\x1b\x76\xd3\xb2\xf3\x4f\xcc\xc6\x25\xd0\xca\xf9\x25\xbc\xd4\x87\xe0\x8f\x7f\xe1\x5d\xdf\xa6\xb4\xfa\xca\x28\x85\x99\x97\x46\x83\x24\x87\xd9\x5a\x53\x57\xa4\x51\x76\xbb\x48\xdc\x92\x2a\x72\xfc\x02\x9b\x03\x5c\xbf\xfe\x21\xa1\x3a\xf4\xc7\xe2\x6d\x8c\xb5\x66\x4f\xac\xa7\xe5\xe7\x32\xbf\x84\x8f\xd7\xda\xbf\xf8\xf3\xfc\x12\x9e\x7c\x4d\xf7\xbf\x4d\xa9\xe6\xfa\x75\x50\x4c\x58\xff\xfb\x50\xc8\xd7\xd2\x55\x4a\x1c\x82\x5c\x1b\xe1\x64\x16\x63\x89\x8d\xa4\x33\x55\x93\x33\x91\xf1\xb4\x28\x71\x01\x39\xba\xcc\xca\x8a\x79\x15\x3a\x6f\x6d\xbe\xab\xcb\x8d\x16\x52\x41\x41\xc1\xa3\xc1\x6c\xfe\x17\x33\xbf\x84\x77\xc6\xf9\x78\xe1\xc0\xed\x4c\xad\xf2\xa1\x07\xd1\x81\x63\x7d\x45\x5f\x4c\x0c\x46\x77\x4f\xe7\xdd\x45\x8e\xc8\x0a\xc4\x5d\x3a\xae\xbb\x68\xb0\x41\x3a\x28\x24\xaa\x1c\xf6\x52\x29\xd8\x20\xe4\x81\x34\xe6\x20\x35\x28\xe9\x22\x24\xf9\x1d\x5a\x2c\x8c\xc5\xc8\x6e\x8f\xcc\x86\xef\x5a\x4f\x22\x66\x46\x67\xd2\xe1\x72\xf2\x4c\x12\x41\xa1\x67\x26\x2f\xe1\x83\xb7\x52\x6f\xfb\x22\xbc\x84\xbd\x95\xde\xa3\xee\x29\xf5\x9f\x25\x8f\x80\x1c\xbd\x90\x09\x28\xfb\x74\x17\x3d\x52\xce\x70\x5c\x6f\x90\xe1\x16\x1e\xd0\x6e\x8c\x6b\x22\x1f\x2a\x61\x05\xe3\x22\x48\xed\x3c\x0a\xc6\x51\x01\x4e\xea\xad\x42\x50\x52\xe3\xfc\xb4\x0a\x3a\xe2\x1d\xd3\x84\x2b\x85\x52\x1d\x27\x6a\x50\x5c\x4c\x28\xe5\x31\x3a\x89\x9e\xb6\x41\x10\xb0\xc7\xcd\x45\x61\x25\xea\x5c\x1d\x18\xca\xe1\x5c\x2e\x91\xf1\x7d\x01\x37\xef\x7f\x9d\xf7\x88\xb0\xe7\x47\x7d\x8c\x3d\x64\x41\x02\x7f\x86\xca\x22\x83\xd9\x02\xd0\x67\xa7\xa5\x6f\x84\xea\x60\xcd\xd7\x2b\xa9\xf0\x5b\xab\x04\xa9\xa5\x3f\x6f\xae\xe8\x5f\xd7\x6d\x16\xbd\x27\x13\xda\xec\x2f\x38\x71\x60\x5a\x32\xef\xe0\x0c\xfd\x73\xa8\x8a\x25\x87\xd3\x9a\x4f\x1e\x3f\xec\xba\xe8\xba\xcb\xc3\x78\x69\x6b\xc5\x75\xcb\x4b\xb3\xec\xdb\x10\x81\x88\xb3\x08\xab\xa8\xd1\xca\xac\x03\x90\x6c\x8b\x36\xa3\x83\x08\xe6\x73\xde\x58\xcc\x81\x1c\xc3\x82\x29\x0a\xc8\x76\x42\xea\x71\x42\x23\xd2\x2e\xd9\xb2\x76\x98\x53\x22\xb2\xc8\x25\x01\x95\x1c\x9c\xdc\xdd\x02\x28\x55\x99\x10\xfc\x86\xa2\x1f\x4a\xcc\xa5\x38\x0a\x49\x2d\x7f\xcc\xfb\x18\xb2\x6b\x2b\x09\x73\xa3\xab\x0f\xe4\xfd\xdb\xdd\xdd\x4d\x2b\x33\xcb\x13\xc0\x36\xe5\x6c\xaa\x01\x40\x30\xc2\xd0\x5a\x38\x37\x96\x7f\x7c\x98\xc3\xc7\xdb\xb7\x11\x12\x26\xd8\x4a\x84\x2f\xa7\xd8\x22\x4f\xac\xad\x1a\xc7\x1f\xbb\x5e\xe7\xc9\xa4\x6b\xd4\x96\x8c\x59\xdb\xae\x19\x4f\x4b\x3d\xa0\x62\xd1\xd7\x56\x37\xc4\x8e\x7b\xc3\xf5\xcd\xd5\x07\x66\x3f\xec\x20\x15\xb5\xfe\x14\x8b\xb1\x6e\x82\x69\x36\x46\x9f\xa0\x82\x4e\x77\xaa\x36\x0a\x5c\xa2\x39\x76\x0e\xba\x1b\x3d\x00\x84\xc5\xd6\x2f\x72\xca\xe0\x7e\x87\xd2\x72\xe9\x45\x69\x4a\xe6\xa8\xbd\x2c\x24\x5a\x38\x7f\x75\xfd\x7a\xde\x10\xb1\x82\xfd\xc5\xef\x04\x23\xae\xb4\x98\x79\xf8\x78\x7b\xbd\x84\x97\x90\x29\x49\x7b\x45\x55\x29\x99\x05\x1c\x23\x57\xac\x1d\x86\xb4\xf7\xea\xfa\x75\xb7\x64\x2a\xa8\x42\x25\x17\x54\x46\x70\x12\x8a\x52\x3c\x48\x41\x22\x31\xbb\x5b\xe1\x71\x2f\x0e\x47\x3d\x33\x69\xaf\x71\x81\x1e\xb2\xbd\xba\x7e\x4d\x5e\x46\xa4\x27\x04\x23\xb5\x32\x5f\x7c\x52\xa8\x78\x3b\xbb\x7b\x94\x7a\x1d\x41\x6e\x32\xb7\x94\x55\xe1\x96\xd2\xac\x28\x27\x62\xe5\xdd\x2a\x9e\x70\x21\xf2\xdc\x92\x53\xeb\xed\xea\x24\x4c\x66\x54\xd4\x4c\x25\x87\x1b\xe1\x77\x1c\x1c\x1a\x0c\x23\x8e\x50\x50\xd1\xbd\x58\x54\x16\xc1\x5b\x9a\xe2\xaa\x51\x56\xb0\x86\xb1\x87\x47\x25\x0c\xe9\xc0\x68\x75\x00\x8d\x98\x13\xde\x17\x2d\x71\x2e\x72\x1d\x97\xb3\x8f\x21\xfa\x08\xe5\x10\xd9\x0b\x77\x70\x1e\x4b\x77\x5a\x2d\x24\x69\xd2\xcb\x5f\x06\x51\xdb\x51\xd9\xa2\xbf\x70\x32\x88\x33\x99\xc3\x9a\xf4\x3c\x7e\xc4\xfa\x5c\x33\x8d\xa9\x08\x6f\x55\x55\xeb\x50\xa6\xa6\xe8\x24\x1d\xb1\xb2\xb5\xf0\xf2\x01\x09\xa0\x5a\x47\xfa\x47\x7d\x68\x67\xf6\x17\xde\xac\xa2\xe7\x5c\xd0\xed\x0b\xa3\x2f\xf6\xb8\x59\xfd\x4b\x38\xe7\xa2\xb6\xca\x1d\xd5\xdb\xf7\xc0\x48\x16\x8d\x6a\x61\xdd\x51\x40\x7f\x15\xb4\xb0\x75\x46\x2c\x5c\xae\x56\x67\x4b\xb2\xa0\xf0\xe7\x49\x9f\xf3\x74\xe3\x6c\x75\xd6\xfc\x26\x5a\xf3\x1e\xa9\x8e\x2a\x1f\x45\xf5\x38\x3c\xbe\x4c\x2d\x47\x4c\x89\x24\x9c\xa0\x6e\x8b\xb0\xf0\x22\xc7\x42\x6a\xcc\xc1\xa1\x95\x42\x81\xae\xcb\x4d\x0c\x6c\x01\xae\xc2\x4c\x16\x32\xa3\x3e\xae\x21\x77\x13\x36\x3a\xd8\x89\x07\xec\x74\xcb\x4c\x48\x92\xa5\x1d\x6f\xdf\x53\x82\x12\x03\xba\x4d\x89\xd5\x90\xfb\x60\x4a\x84\x52\x1c\x22\xc6\x21\x9d\xe5\xc0\xe2\xb6\x56\xc2\xc2\xf5\x6b\x86\x37\xd7\x5d\xd4\x6d\xd1\x33\x25\x9c\x23\x16\x03\x56\x86\xf0\x98\x41\xa7\xe0\xef\x9f\x2f\x1d\xe0\x97\x0a\x33\x1f\xf2\x3a\xa5\x78\x2d\xff\xa8\x11\x44\x69\xf4\x36\x66\x72\xe6\x60\x2f\xfd\x4e\xea\x90\x66\xa3\xae\x8e\x21\xe8\x87\x70\xc4\x38\x79\x86\x43\x53\xdf\x35\x88\xc4\x4f\x83\xc7\xd3\xf5\x55\x60\x7b\x1d\xd7\x1e\x31\xf2\x53\xfe\xef\x29\xc0\xad\x39\x08\xe5\x0f\xc0\xbd\x6d\xba\xf9\x9a\x2d\x9c\x30\xbc\xac\x8c\x13\x54\x2d\xd8\xb8\xb6\x19\xe5\xb0\xa8\x5b\xf9\x80\x0e\x4a\x61\x3f\xa3\xaf\x94\xa0\x8a\x47\x90\x8e\x0a\xc9\x05\x6d\xb7\x6d\x7f\x0a\xa4\xc2\xd8\x91\x93\xd2\x22\x49\x89\xb1\x3d\x6f\xd8\x7a\xd7\x25\x47\xf9\xec\x8f\x1a\xed\x21\x04\xfc\xfd\x6d\xda\x74\x9f\xf4\xc9\xf3\x0d\x36\x42\x22\x40\x3e\x40\xf9\xb6\x6b\xbb\x4a\x1c\xda\x03\xa9\x0d\x0d\xd5\x9d\xdf\xa1\xc3\xc6\x73\xd9\x2d\xfa\xec\x8c\xcc\xd7\x30\x30\xcc\x7d\x2f\xad\x15\x87\xa0\x16\x6f\x45\xf6\x39\xa8\x50\xea\x5c\x3e\xc8\xbc\x16\xaa\x3d\xbe\xd9\x16\xaa\x31\x8e\xca\x79\x48\x51\xb5\xbf\xd6\x85\x71\x97\xf0\x5b\x34\xce\xef\xfd\x2a\x28\xfa\xc2\xc4\xba\xa1\x43\xac\x56\xf0\x77\xa1\x64\x2e\x7c\xac\xfe\x5c\x5d\x72\x5b\xa5\x14\x6d\x87\xb2\x56\x5e\x56\x4a\xa2\x6d\x9a\x66\x6d\x3c\xf9\xf8\xd6\xa2\xf0\xa9\xe4\x78\xbe\x7c\xd6\x23\xfb\x20\x2c\x78\xe3\x85\x7a\x55\x7b\x58\xc3\xb3\xc1\x63\x0a\xe5\xe4\x2a\x52\x37\x7c\x4e\x00\x5f\x87\x48\xf3\xf3\xa7\xb4\x77\x99\xd5\x7e\x80\x6f\xdd\x2b\xe1\x1c\x5a\x7f\xde\xec\xfb\x79\x4d\x7c\x2e\xa0\x44\xe7\xc4\x16\x2f\xe1\xec\x43\x10\xb6\x39\xff\xf1\xd2\x9e\xcd\x87\x6a\x7c\xe9\x9c\xdc\xea\x10\x10\x91\xde\x44\xea\x4b\x27\xad\xc7\x8b\x06\x79\xee\x36\x80\x73\x97\x1e\x77\x7e\x53\xb3\x95\xc6\xdb\x78\xc2\x92\x6c\x7d\xa2\xf4\x9d\x38\x1c\xfa\x00\x1f\xda\x35\x0e\x46\x2a\x68\x63\x13\xef\x7a\x2d\x77\x32\x21\x39\x4a\x00\x77\x8a\x74\xdd\x20\xfb\x28\x1e\x46\xd3\x93\x5f\x63\xa7\xd5\x9f\x45\xde\x62\x86\xf2\xa1\x29\x05\x11\x36\xa8\xb1\x90\x99\x14\xf6\x90\x5a\xf0\x78\x76\xbf\xae\x14\xac\x8d\x54\x58\x66\x16\xc9\xab\x0f\x55\x33\x9c\xb1\x89\x30\x01\x71\x73\xb5\xdc\xa2\xbf\x3b\x54\x78\x3e\x1f\x18\x20\x33\x65\x89\x3a\x0f\x69\xe0\x02\x3e\xba\x8e\x5f\xf0\xac\x96\xf2\x86\xc6\x7d\x68\xc5\x83\x06\xae\x94\xd9\x07\x29\x6c\x5f\x0a\xe9\xa0\x26\xbd\xc1\x7d\x63\xb0\x43\x12\xf4\xa6\xde\x28\x99\x51\x81\x79\x3e\xbf\xef\xcf\x44\x08\xa5\xc8\x07\x53\x26\xcb\xb1\x10\xb5\xf2\x13\xe7\x2c\xc7\x65\x12\x0f\x64\x84\x52\x66\x4f\xfb\x2d\xcf\x3f\xeb\x2a\x06\x3b\x42\x26\x2a\xb1\xe1\x49\x31\xc8\xe0\x69\x45\xed\x6b\x8b\xbc\x8c\x93\x22\xcf\x61\x52\x3b\xdc\x2e\x1f\x25\xa5\xc4\xc3\x25\xbc\x6a\x16\xfd\xfc\xe4\xa5\x3e\xdc\xc6\x7a\xf8\x6b\x7f\xa8\x9c\x04\xff\xf6\x4b\xdf\x1f\xde\x35\x01\xd8\xb4\xc9\x99\x50\x59\xad\x12\xcb\xa2\x34\xb5\xe6\x21\xb2\x13\x0a\xe1\x41\xa8\x1a\x09\x48\xb5\x2b\xd0\xda\xd8\x58\x47\x5f\x9b\x56\xcc\x7b\xe3\x11\x2e\xe0\xda\x77\x46\x33\x1b\xf4\x7b\x44\x4d\x38\xc5\x0a\x7f\xbe\x7c\xd6\x1b\x78\xc1\x9b\x2f\xb4\x25\x38\x51\xe7\x60\xe9\xe0\x0b\x6f\x68\x81\x83\xee\x3d\x5b\xfe\xdb\x0b\x5a\xaa\xbb\x9e\x1a\xb7\xec\xd3\x99\xbc\xe8\x29\x7c\x39\x5e\x98\x72\x70\x08\xa5\x0e\x50\xa1\xcd\x50\x7b\xea\xc2\xb6\xd8\x19\x44\x84\x79\x90\x47\x5b\x72\x60\x6e\x84\x93\x0e\x2a\x23\xb5\xef\x15\xa5\xb4\xc8\x19\x25\x73\xb2\x74\x48\x6a\xae\x14\xd6\x37\x13\x7d\x07\xfb\x1d\x35\x18\x99\xc8\xa9\xf1\x04\x43\xa5\x90\x83\xfb\x8f\x57\xf2\xcb\x8b\x3f\xdf\x87\xcc\x20\x94\x45\x91\x1f\x9a\x71\xf9\x60\x58\x85\xbd\xe3\xd9\x7f\x32\xe1\x48\xb7\x99\xa0\x0b\xe9\x1d\x98\x0a\x6d\xc8\x9e\x7d\x1f\xa7\x2c\xac\xbd\xb4\xa8\x0e\x04\x34\x68\x4b\xa9\xa5\xf3\x71\x04\xb3\x45\xdb\xd9\x19\x6a\xb7\x58\x20\xd4\x15\x19\xfc\xdf\xd3\xa1\xa6\x80\xca\x62\x26\x9d\x34\x7a\x39\xee\xec\x6a\x7f\x09\x41\xa4\xbe\xd7\xfd\x77\x6a\xe7\x7a\x23\xad\xf0\xd2\x2a\xcc\x6c\x42\xb4\x90\x18\x74\x84\x38\x50\x1c\x77\x6c\xbb\x18\xe9\xc2\xa2\x0a\xec\xee\x64\xd5\xb8\x17\x3d\xb8\xdf\x0b\xa5\xd0\xdf\xa7\x09\x2f\x81\xe5\x02\x78\x92\x70\xa0\xe2\x70\x0b\xa8\x5c\xcc\xc5\x3c\x6a\xdc\x6b\xb4\x50\xca\xed\xce\xc3\x5e\xe8\x80\xc8\x5c\x88\x8c\xa3\xf0\xe4\x7c\x93\x6b\x02\x0a\x89\x4a\xa2\xf6\x3f\x1e\xa8\x8b\xae\xfe\x16\x53\x67\x0d\x6b\x8b\xca\xe2\x44\x46\xa7\x64\xf1\x0b\x97\x04\xf0\xe4\x09\x5f\x85\xbc\x0c\x97\x70\x46\x59\x3a\x84\x49\x1b\x9b\x52\xd3\x2d\x99\x83\x15\x7a\x8b\x20\x97\x08\xbf\x3d\x5b\x3c\xff\xfd\xec\x44\xe6\xe7\x1c\xd7\xe0\xef\x1a\x1a\xb1\x27\x33\x72\x48\xc6\xff\xc8\xa8\x71\x94\x35\x7f\x8d\xd9\x27\xcc\x05\xb8\x9e\x6a\x04\x61\x40\xe3\xca\x87\x19\x23\x53\xf7\x6b\xbd\x06\xb6\x79\x20\xd7\x92\x60\x14\xc7\x07\xd4\xbe\x66\x34\xe8\xd2\x6a\x87\x95\x6e\x2f\x7d\xb6\xdb\x18\xaa\xba\x93\xe8\x8b\x86\xee\x8e\xe3\x3a\xbd\x3e\x81\x4d\x1d\xc9\xf2\xa8\xa1\xc7\x5c\x53\xb8\xd2\x95\x36\xf1\x85\xc8\xa8\xd8\x98\xcc\x5d\x97\xd0\x5e\x75\x4c\x1f\x2b\x8f\x55\xc5\x0f\x57\x31\xe9\x5f\xdd\x25\x12\x47\x9a\x4b\x9e\x91\x46\xa4\x83\x77\x98\x4b\xb1\x48\x83\x4a\xce\xdf\xfc\xe6\xc3\x5a\x74\x95\x91\x39\xa9\x93\xa7\xa5\x94\xc9\x97\xc3\xf2\x83\x77\x77\x38\xea\xc5\x2b\x8f\xa8\x52\xa9\xc1\x34\x46\x91\x55\xf0\x2c\xeb\xe8\xd8\x9c\xa8\xf0\xc6\x0b\xae\x36\x32\x53\xa2\x8b\x7d\x03\x11\xe6\x22\x93\x9e\xac\x5c\xbd\xe1\x15\xc2\x45\x7f\xda\x60\x0e\x3b\xb4\xd8\x0e\x20\xf0\x01\x15\xa1\xdd\xb2\x34\xff\x27\x95\x12\x4b\x63\xb7\x2b\xd4\x17\x1f\x3f\xf0\x70\x62\xf5\x3f\xb8\x59\xfd\xed\xee\xee\x66\xf5\x57\xe1\x64\xe6\x3e\x99\xe2\x13\x5f\xbe\xbb\x7e\xf7\xe6\x13\xbf\x98\x1e\x71\xdf\xe8\xe5\x08\x2a\x4c\x4a\xb7\x18\x6f\xeb\x07\x38\xc7\x08\x6d\x5d\xd3\x9f\xe1\x83\x66\xf3\xba\xf9\x75\x6a\x9a\xa0\x64\x86\xda\xf1\x7b\x5a\x63\xd9\x98\xde\x34\x3a\x71\x55\xfe\x85\xd5\x10\x57\xb9\xd5\x68\x88\x7a\x97\xde\xdf\xf5\xa6\xec\x71\x78\x96\x86\x8c\x54\xbb\x72\x75\x4a\x11\x16\x69\xe5\x71\x8e\xdd\x71\x96\xb7\x91\x97\x71\xef\x4d\x8c\x5c\x37\x93\xca\x23\xda\xfc\xd4\x19\x66\x9e\x1c\x66\xf7\xa9\xc1\xba\xb3\xef\xbb\x83\x17\x6f\xa8\x6f\x35\x5c\xa4\x7d\xbc\x7d\x1b\x66\x90\x04\x1d\x1e\x4b\xe0\x57\xa2\x80\x5f\x3c\x5a\xca\x6a\x4e\x7a\x1c\x8f\x9d\xbb\xe9\x8d\x95\xb5\x39\x74\x47\xc4\xa4\xa0\xcf\x08\xcb\x66\x1a\xfc\x57\x65\x32\x3a\xc5\xa4\xe9\x72\x53\x51\x72\x9a\xb2\x72\x2b\xe9\xb0\xb6\x14\x66\x4d\x8f\x22\xf1\x4d\xe4\x8a\x98\xfe\x91\x37\x03\x9f\xe0\x11\xef\x06\xd6\x93\x23\xfd\xe3\xba\x0b\xad\x37\x45\x68\xa8\xf1\xe3\xcc\x35\x74\x3c\xe1\xab\x10\x6f\x25\x3e\x60\x94\xe6\xc7\x95\x48\xd9\x1a\x7d\x5d\x81\x60\xbf\xcb\xda\x17\xec\x0c\x61\x95\xa5\x50\xe7\x03\xa9\xb8\xa3\x23\x03\x48\xb6\xc5\x76\x33\xf9\xe8\x28\xf1\xfd\xd5\x5d\xfb\xaa\xfe\xb5\xf0\x5d\x68\x6b\x47\xd5\xba\xa1\xbb\x67\x88\x61\x07\x89\xde\x6f\x53\x73\xd3\xcc\xac\xc2\x7b\x8b\x71\xd5\x14\x69\xdc\xc4\xb1\x6e\x73\x31\x18\x8e\x07\xae\x39\x69\xed\x77\x32\xdb\x41\x59\x3b\xee\x9c\xc9\x21\xc2\x21\x51\xe9\x13\x02\x86\xfe\x2c\x70\x37\x28\x5c\x33\x55\x33\x1c\x34\x13\x25\x16\x20\xcd\x8c\x42\x35\x98\xbe\x27\x09\x9f\x75\xb4\x0f\xc7\x43\xec\x26\x3b\x75\x33\xd5\x40\x12\x2b\x1f\xa8\xdb\xe8\x88\xd2\xe6\xf0\x91\x30\x9c\xec\xc3\x37\x26\xb6\x47\xa6\xd3\x5b\x79\xc3\xc6\xce\xad\xd8\x87\x09\x14\xcf\xa2\x02\x30\x35\xee\xb0\x33\x8a\xe5\xa4\x05\x63\xbe\xe3\x09\x91\xf3\xc0\xe1\x51\x23\x74\xa8\x72\xb2\x49\x6f\xf5\x7a\x83\xae\xf8\x5d\x8c\xab\x0b\x6a\xac\x09\x1d\xa9\xba\xbf\xe0\x7a\xa0\xfd\x58\x26\x69\xbd\x77\x4c\x1a\xbe\x3b\x38\xcf\xb1\x32\x4e\x7a\xf8\x29\x7e\xe1\x01\x3f\xc5\xcf\x44\xde\x5f\xdd\xcd\x27\xc6\xf6\xe9\x0d\x07\x01\xc4\x46\x64\x9f\xf7\xc2\xe6\x8e\x07\x88\xc2\xcb\xa8\x2e\x0e\x8c\x56\x86\xf8\x9d\x0e\x0f\x86\x63\x23\x1c\x0a\xe7\x49\xde\x46\x9f\x2f\xb5\x71\x12\xb5\xd3\xbe\x34\xdd\x53\x87\xe6\xd0\xf3\xf0\xba\xae\xba\x67\x2e\xe1\x8a\xaa\x1f\xdc\xf7\x6d\xda\x2e\x58\x04\x7f\x2d\x05\x57\x4f\x0e\x7d\x8c\x22\xfc\xa3\x16\x2a\x81\x22\x6b\x3f\x4e\x0d\x43\xab\x76\x1f\x3c\xf0\x2d\xbb\x11\xe5\xc4\xfb\x71\xc0\x85\x25\x2d\xdf\xe1\x0b\xa1\xc1\x4b\x90\xc6\xae\x23\xdf\x8c\x7d\x83\x28\x8c\xe5\x4f\x5b\xa4\xd1\xd8\xa0\x0a\x39\xf5\xb2\x29\x32\x35\x01\x1f\x55\x94\xa2\x47\xdc\xa2\xf3\x56\x06\x4f\xa1\x73\xd8\x20\xa5\xd0\x87\x4e\x68\x2d\xa9\x8f\x16\x1b\x75\x08\x4d\x0d\x21\xfd\x50\xd3\x83\x41\x06\xaf\x49\x15\xdf\xfd\x82\x03\xf7\xbe\xf7\x25\xd9\x72\xfc\x19\xd2\x7d\x2f\xd4\xf9\xe5\xe8\x1f\xb5\x9c\xc4\xa9\xa1\x66\xff\x39\x6a\xeb\x80\xc1\x58\x6f\xfd\x26\x76\x5a\x6f\xfc\xbe\x82\xda\xd9\xb2\x2e\x5b\x5d\xdd\xc4\x80\xbe\x1f\x8c\xbf\xa7\x82\xfe\xb4\x48\x57\xe9\x4d\x58\xec\xd1\x95\xd9\xbb\x30\x9c\x8a\xdf\xab\x50\x25\x50\x56\xfe\x30\xcc\x3f\x09\x15\x88\x81\x94\x06\x38\x07\x0c\x7a\xd9\x80\xca\x13\xdd\x34\x0f\xc0\xde\x10\xe9\xae\xaf\x9e\x53\x17\xf0\x9f\x27\xc2\x70\x7e\xea\x6b\x93\x63\xc9\xa6\xff\x61\xc9\x34\x8c\x0f\xd6\x1c\x83\xcc\x29\x52\xc3\x60\x9b\x5a\x33\x34\xc3\xf4\x71\xa7\x57\x4d\xea\x2c\x59\xf0\x51\xba\x4b\x94\x1e\xd7\x6b\x0f\x39\x5f\x4a\xf7\x21\x74\x20\xe7\xa6\x08\x0c\xfe\xfc\xe4\xeb\x77\x31\x73\x31\x86\xd5\x14\xc8\x0b\xf8\x5e\x08\x7f\xfb\xe5\x7c\x3e\xbf\x84\xb3\x08\xbf\x1c\x19\x5c\x1b\xc4\x8f\xfa\xbe\x0f\xd9\x27\x8f\x27\x18\xf9\x1e\x0b\x5d\xdc\x3a\x1b\x2b\x69\x64\xba\x47\xaa\x29\x05\xf1\x04\x7f\x63\x11\x1e\xad\xa6\x48\xf4\x31\x8a\xfa\x21\x06\x7e\x4c\x51\xcb\xef\x8e\x57\x3a\xa1\xba\xee\xfc\x1e\x2f\x6c\xa3\x75\xdd\xfe\x9c\x58\xd6\x09\x58\x58\xf7\xe2\xf7\x18\xcd\x96\xf1\xf5\xf0\xc6\xb1\x2d\xad\x91\xd7\xc3\x1b\xc7\x59\x6a\xd7\x74\x18\x3b\xb5\x71\x32\xce\xd7\x27\xa3\x7f\xd4\xb6\x7c\x9b\xfd\x7f\x00\x00\x00\xff\xff\xa2\xa4\x3a\x17\x3b\x2f\x00\x00"

func metadataviewsCdcBytes() ([]byte, error) {
	return bindataRead(
		_metadataviewsCdc,
		"MetadataViews.cdc",
	)
}

func metadataviewsCdc() (*asset, error) {
	bytes, err := metadataviewsCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "MetadataViews.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xba, 0xee, 0x26, 0x86, 0x48, 0xe4, 0x44, 0xed, 0x4f, 0x25, 0x28, 0x2e, 0x1a, 0x61, 0xe9, 0x5c, 0xf7, 0xc0, 0xf6, 0x9f, 0xcc, 0x2d, 0xc, 0xfc, 0xc1, 0xf2, 0x39, 0x33, 0x77, 0xf9, 0x61, 0xab}}
	return a, nil
}

var _nonfungibletokenCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x57\x41\x8f\xdb\xba\x11\xbe\xeb\x57\xcc\xcb\x03\x9a\xdd\xc0\x6b\xf7\x50\xf4\x60\x20\x68\xda\xb7\x6f\x01\x5f\xb6\x0f\x5b\x17\x3d\x04\x01\x4c\x8b\x23\x9b\x08\x45\x2a\x24\x65\xc7\x0d\xf6\xbf\x17\x33\x24\x25\xca\xf6\x26\x9b\x5b\x73\x89\x57\x22\xbf\x99\xf9\xe6\x9b\x8f\xd4\xe2\xdd\xbb\xaa\xfa\xf5\x57\x58\xef\x11\x1e\xb4\x3d\xc2\xa3\x35\x77\x0f\xbd\xd9\xa9\xad\x46\x58\xdb\xcf\x68\xc0\x07\x61\xa4\x70\x92\x17\x6e\x1e\xad\xc9\xef\xf9\xf5\x06\x6a\x6b\x82\x13\x75\x00\x65\x02\xba\x46\xd4\x58\x55\x84\x37\xfc\x09\x61\x2f\x02\x08\xad\xc1\x58\x73\xd7\x64\xf4\xc0\xe8\x79\xb7\x87\xda\xf6\x5a\xd2\xdf\x8d\x75\x2d\x04\x3b\xaf\x56\x0d\x08\xe8\x3d\x3a\x38\x0a\x13\x3c\x04\x0b\x12\x3b\x6d\x4f\x20\xc0\xe0\x11\x4c\x13\x86\xfd\x33\x08\x7b\x54\x6e\xcc\xe6\xc8\x70\x06\x51\x56\xc1\x82\x6a\x3b\x8d\x2d\x9a\x40\xcb\xe0\xbc\x88\x31\xd7\x39\xe7\x7e\x89\xb3\x17\x07\xca\x18\x1a\xab\x89\x26\x2a\x86\x80\x5c\xaf\xd1\x83\x30\x12\x8c\x68\x95\xd9\x55\x5c\x6a\x98\x54\xef\x3b\xac\x55\xa3\xd0\xcf\x13\x83\x0f\xeb\x0d\x38\xf4\xb6\x77\x99\xaa\xda\x3a\x1c\x1e\x41\x38\x75\x89\x33\x87\x9d\x43\x8f\x54\xbb\x30\xf0\xf8\xb0\x06\x65\x18\xdd\xb7\xc2\x8d\xb5\x27\xe0\xdf\xac\xd6\x58\x07\x65\xcd\x06\x9e\x26\xf8\x23\x34\xa1\xfa\x60\x1d\x65\xcd\xd4\xbe\xf5\x8c\x5b\x0f\x7b\xe7\xd5\x8a\x5a\x59\xeb\x5e\xf2\xa2\x06\x8f\xd0\xf4\x86\xdf\x71\x0b\x04\x33\x40\x59\xd8\xa3\x41\x47\x8f\x50\x78\xa5\x4f\x55\x6b\x0f\xa9\xad\x9e\x12\x25\x5a\x6c\x1f\xc0\x36\xbc\xba\x0c\xc1\xf9\xfe\xe1\xec\x41\x49\x74\x1b\x5e\xb9\x79\xc2\x1a\xd5\x81\xfe\x1c\xd2\x1d\x48\xf4\x5c\x87\x2f\x9f\x80\xc4\x5a\x0b\x87\x45\x72\x47\x15\xf6\xe0\x6d\x8b\xd0\x39\x64\xd0\xce\x7a\xa6\x49\x2a\x5e\x51\x25\x56\xbf\xf4\xca\x21\x27\x35\x72\x56\x74\xb7\x46\x17\x84\x32\xa9\xa7\x0c\xb4\xc5\xbd\x38\x28\xeb\x86\x69\xf0\x51\x29\x27\xa0\x14\x3c\x76\xc2\x89\x80\xb0\xc5\x5a\xf4\x94\x66\x80\x9d\x3a\xa0\xe7\x18\xac\x60\xfa\x21\xb6\x4a\xab\x70\xa2\x48\x7e\x4f\xfb\x04\x38\x6c\xd0\xa1\xa9\x91\x44\x1a\x15\x5c\xa6\x44\xe9\x5a\xa3\x4f\x80\x5f\x3b\xeb\x13\x5e\xa3\x50\xcb\xa8\xba\xb1\x76\x65\xc0\x1a\x04\xeb\xa0\xb5\x0e\xab\xc4\xf9\x48\xd7\x1c\x56\x34\x83\xde\xa6\xc4\x28\x29\x7f\x9e\x55\x2b\x3e\x23\xd4\xbd\x0f\xb6\x1d\x9a\x90\x48\x9b\x0c\xd0\xb4\x11\x34\x96\x16\x0e\xc2\x29\xdb\x13\xa4\x32\xbb\xd4\x0b\x82\x8f\x7a\x98\x57\xd5\x3f\x4e\xd0\x7b\xe2\x73\x40\xe6\x12\x46\xa0\x59\x4a\xca\x36\x2c\xc9\xa9\xc6\x3d\xd4\xc2\x80\x47\x23\x2b\xda\xe5\xa2\x58\xb2\xda\x3a\x44\x77\x17\xec\x1d\xfd\x3f\xe3\xd8\x24\x3c\x6a\x99\xd9\x51\x7e\x1c\x84\xa7\x99\xd2\x12\x50\x23\xa1\x6a\xd0\x28\x77\xe8\xaa\x8b\x71\x5a\x5b\x0e\x95\xa7\x8e\x54\x6f\x6c\xd8\xa3\xe3\x14\x67\x83\x2d\xb1\x37\x78\xe2\xe6\xc4\xd0\xd2\x89\x38\x1a\x8f\x0f\xeb\xaa\x71\xb6\xbd\xe8\x29\xfb\x94\x81\x3a\x3b\x88\xc4\xce\x7a\x15\x86\x4e\x82\x35\x93\x58\x6f\x7d\x35\xd5\x68\x6d\xa9\x13\x21\xca\x37\x38\x61\x7c\x83\x6e\x5e\x55\xef\x16\x55\xb5\x58\xb0\x93\xb7\x24\xde\x38\xd5\xe7\xd6\x3c\x87\x7f\x32\x74\xf9\x96\x9a\xa5\x35\x6d\x56\x6d\x67\x5d\x88\x6d\x29\xfa\xad\x7c\xe1\xed\x8b\x45\xd5\xf5\xdb\x2b\xd0\x97\xae\xfa\xad\xaa\x00\x00\x52\x56\xc1\x06\xa1\xc1\xf4\xed\x16\x1d\x7b\x42\x6c\x1d\x2b\x55\xf9\xe8\x7a\xca\x00\x7e\x55\x3e\xf0\x44\xd0\x5e\x0a\x75\x10\x2e\x6e\xfe\x57\xdf\x75\xfa\xb4\x84\x7f\xaf\x4c\xf8\xeb\x5f\x06\xf0\xdf\x0f\x31\x4d\x11\x00\x5b\x15\x02\x4a\x38\x12\xc7\xa9\x0f\x45\xaa\x54\x87\x0a\x4a\x68\xf5\x5f\x94\x69\xfb\x10\x06\x19\xe6\xb7\xb4\x78\x35\x2e\xbc\xb9\xbd\x16\x4a\xf9\x69\x34\x91\x0e\x34\xe5\x07\x25\x98\x59\xde\xa7\x8c\x54\xb5\x08\xac\xc6\xc1\x38\x2f\x7c\x31\x01\x07\x38\x8a\x02\x04\x48\x47\xf3\x32\xdb\xc5\x02\x56\x17\x7b\x95\x07\x63\x43\xf4\x5d\x10\x75\x6d\x7b\x13\xde\x7a\x36\x7b\xb1\xc3\x19\x6c\x08\x66\xc3\xad\x86\x2d\xc2\xc6\x28\xbd\x99\x5f\xe7\xe0\x3f\x29\xf4\x8d\x92\x99\xec\x19\x67\xb1\x84\xbf\x4b\xe9\xd0\xfb\xbf\x5d\xa5\xe4\x25\x3e\x92\xc6\x51\xf2\x20\x4d\x0e\x82\xb3\xaa\x42\x66\x2a\x59\xdd\x6b\x88\x2a\xd1\x5f\x28\xe8\x3e\x2e\x99\xd4\x13\xec\xb5\x6a\x56\xd3\x4b\x4b\x92\x90\x1f\xce\xff\xf1\x7a\x72\x1e\xe9\xf2\xd0\x82\x15\xa9\xef\x1b\xaf\x28\xe6\xa0\x37\xea\x4b\x8f\xb0\xba\x4f\xa4\x89\x7a\xcf\x32\xdd\x0b\x3f\x2c\x25\x40\x8d\x01\xc6\x84\xf9\xd5\xf3\x90\xe7\x53\x3c\xc3\xda\x81\x7b\xf2\x93\x94\x1c\xa9\xec\x9a\x81\x52\x0d\x79\x3f\x5f\xa5\x1a\x65\xe2\x19\x94\x32\x27\x53\x42\x19\x1d\x8f\x30\x13\x1e\x3b\x3c\xd5\x72\x59\xeb\xe3\xc3\x7a\x79\x5e\xe6\x0f\x73\x2f\x38\xb6\xd0\xa2\x54\x74\x72\x66\xb9\x7b\xc8\xb6\x59\x98\xe6\x2b\xb8\xce\x97\x89\x29\xdf\x83\x27\x3b\xa4\xcb\xc9\x70\x8d\x1a\x62\x14\x9a\x22\xd7\x8b\x8b\x54\x80\x78\x1a\x47\x46\xdc\xa4\xb4\xa6\x37\x03\xec\x4d\xfe\xb1\xba\xcf\xb5\xde\x2e\xe1\xc3\x94\x0f\xde\x48\xf7\x90\xe9\x23\xfa\xe7\xd0\xf7\x3a\xcc\x95\x84\xf7\xef\xa1\xc4\x7a\x43\x42\x59\xdd\x67\xe5\x8f\x5e\x10\x67\xaa\xed\x7d\xa0\x21\xe6\xab\xa0\x68\x11\x44\x1c\x17\xba\xd9\xa0\xa7\x51\x58\xdd\xbf\x99\x44\x7b\xae\xa6\xbf\x7e\xd0\x8d\x34\x53\x3e\xf3\xf0\x53\xad\xc8\x17\xb9\xec\xff\x29\x50\x3e\xe9\x82\xf8\x3c\x36\x42\xf0\x2f\xe1\x76\x3d\x4b\x99\x7a\x20\xa4\x2c\x5b\x70\x16\xba\x08\x5f\x76\x24\x81\xdf\x30\x3f\xb1\x05\xb7\x2f\x17\xca\x03\x33\xb8\x64\x3a\xc6\x6b\xdb\xb6\x7c\xd7\xca\x1b\xba\x7e\xab\x95\xdf\x43\x63\xdd\xf0\x71\x31\xc9\xe5\x85\xfa\xc7\x8c\xff\x20\x84\xfa\x6c\x36\xbe\x9b\x6e\xb9\x68\x87\x61\x75\xef\x6f\x6e\x97\xf0\x31\x6a\xeb\xd3\xc5\x92\xad\x75\xce\x1e\x1f\x1f\xd6\x85\xb5\xdd\x2e\xe1\x4f\x79\x58\xaf\x1b\x46\x2a\x28\x0d\x80\xa9\x1d\x5d\x27\x26\x9f\x1f\x85\x4d\x6c\x31\xdf\xb4\x65\xfe\xfa\x18\xee\x06\xe4\x34\xd9\x5f\x5e\x14\xc6\x48\xc7\x72\x98\xd2\xd9\x20\x92\xd9\x35\xba\x4a\xd9\xdc\x2b\x7e\x27\x1c\xdf\x50\xf7\x56\xcb\xd1\x95\x53\x3e\x57\x24\x92\xef\x0d\x74\x80\x48\x5a\xbb\x84\x0f\xdf\x22\x3f\x4b\xda\xfb\x5c\xfd\x5f\xd8\xc4\xf7\x06\x24\xce\xc7\xe5\x40\x8c\xb9\x78\x90\x03\x39\x25\xd0\xb0\x29\x44\x17\x49\x1b\x95\x04\xe1\x9c\x38\xbd\x4e\x8d\x25\x60\x54\x22\x38\x0c\xbd\x33\x69\x62\x9d\x38\x65\x7b\xa2\x77\x71\xa6\x1c\xe6\x9e\xd4\xd7\x7b\xf2\x82\xae\xcb\x60\x4f\x39\x4a\x52\x37\xca\xf1\x2b\x29\xde\xc4\xcb\x2f\xe1\x2b\x71\x16\x0b\xf0\x76\x3c\xbf\x63\x73\xf8\xf3\xc1\xa1\x90\x20\x45\x10\x4c\x11\xdf\xc1\x5b\x0c\x7b\x2b\xd3\xa9\xa3\xc2\xcf\x4c\xd8\xb9\xc7\x3b\xbc\x62\xf1\x1e\x75\x33\x1f\x54\xf8\x51\xc9\x4f\xf0\xcb\x7b\x30\x4a\x2f\xe1\x0d\x61\x48\x8b\xf1\xe2\xc6\xf7\xde\xcb\xaa\x7e\x79\xad\x8f\xd7\x0e\x45\xc0\xdf\xdb\x2e\x9c\x8a\x0f\x86\xf8\x94\x5b\x86\xf4\xea\xd2\xc9\x21\x7e\x4e\x45\xce\xcf\x25\x5d\x12\x79\x62\x0a\xed\x91\xe9\xf7\x55\x49\xd2\xd5\xd8\xd4\xe0\x0f\x45\x2a\x85\x0b\x5e\x9e\x86\xe9\x24\xcc\xd2\x98\x6b\x34\xbb\xb0\xa7\x63\xf1\xcf\xe9\x34\x8c\x31\x64\x39\x8a\xf9\x18\xe4\xca\x0a\xa2\x32\x35\xcf\xd5\xff\x02\x00\x00\xff\xff\x33\x4d\x81\x27\xe0\x12\x00\x00"

func nonfungibletokenCdcBytes() ([]byte, error) {
	return bindataRead(
		_nonfungibletokenCdc,
		"NonFungibleToken.cdc",
	)
}

func nonfungibletokenCdc() (*asset, error) {
	bytes, err := nonfungibletokenCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NonFungibleToken.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xdb, 0x61, 0xca, 0x9d, 0xaa, 0x66, 0x36, 0xdf, 0xbc, 0x51, 0xdb, 0x7b, 0x51, 0xd8, 0x3d, 0x6f, 0x4e, 0x9c, 0x8e, 0x50, 0x28, 0x7c, 0x18, 0x1d, 0x2, 0xb2, 0xc2, 0x2b, 0x26, 0xa1, 0xfe, 0x2d}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"ExampleNFT.cdc":       examplenftCdc,
	"MetadataViews.cdc":    metadataviewsCdc,
	"NonFungibleToken.cdc": nonfungibletokenCdc,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"ExampleNFT.cdc": {examplenftCdc, map[string]*bintree{}},
	"MetadataViews.cdc": {metadataviewsCdc, map[string]*bintree{}},
	"NonFungibleToken.cdc": {nonfungibletokenCdc, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
