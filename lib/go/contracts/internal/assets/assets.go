// Code generated by go-bindata. DO NOT EDIT.
// sources:
// ../../../contracts/ExampleNFT.cdc (9.846kB)
// ../../../contracts/MetadataViews.cdc (13.58kB)
// ../../../contracts/NonFungibleToken.cdc (4.832kB)

package assets

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	clErr := gz.Close()
	if clErr != nil {
		return nil, clErr
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _examplenftCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x1a\x5d\x8f\xdb\x36\xf2\xdd\xbf\x62\xea\x87\x9c\x8c\x66\xad\x7e\xe6\x5a\x63\x9d\x4d\x90\x8d\x71\x0b\x34\x46\xb0\x71\xaf\x0f\x41\x90\xd2\xe4\x78\x4d\xac\x44\xea\x48\xda\x8e\xbb\xf5\x7f\x3f\x90\xfa\xa2\x24\xca\xf6\x26\x01\xee\x84\xa2\x91\xc5\x99\xe1\x7c\xcf\x70\xb8\x71\x0c\x8b\x35\xd7\xc0\x35\x10\x01\xf8\x89\xa4\x59\x82\xc0\xed\xff\x53\x14\x86\x18\x2e\x05\xc8\x15\x10\x98\x25\x72\x07\x73\x29\x2e\x66\x1b\x71\xc7\x97\x09\xc2\x42\xde\xa3\x18\xc4\x31\xdc\x18\x8b\x2f\xa4\x81\x8c\x28\x63\xc1\xcd\x1a\x41\xae\x56\x9c\x72\x92\x80\x36\x44\x30\xa2\x18\x2c\x37\x06\xb8\x01\xa2\xf5\x26\x45\x06\x46\xc2\x12\x2d\xfe\x16\xd5\x1e\x34\x4f\x79\x42\x94\xfd\xba\x96\x3b\x48\x89\xd8\xc3\x7c\xb6\xd0\xb0\x93\x9b\x84\xd5\x2c\x39\xda\x54\x2a\x84\xd5\x46\x50\xcb\x1f\x49\xb8\xd9\x8f\x07\x03\x9e\x66\x52\x19\xcb\x63\xc9\xa2\xe3\x10\x56\x4a\xa6\x30\x1c\xc7\xed\x85\x31\x65\x74\x58\x62\xbd\x41\x43\x18\x31\xe4\xdf\x1c\x77\xba\x42\x69\x7c\xcd\xe1\x07\xd9\x66\x09\x54\x0a\xa3\x08\x35\xf0\x3a\xd7\xd8\x7c\xb6\x98\x74\x37\x7e\x18\x0c\x00\x00\x2c\xc2\xd6\x49\x66\x48\xf2\x6e\x93\x65\xc9\x7e\x02\xbf\xdf\x08\xf3\xec\xa7\x1a\x00\xb7\x56\xb6\x57\x05\xdd\x1b\xc1\x0d\x27\x09\xff\x0b\x59\x34\x6a\xc1\xfc\xc1\xcd\x9a\x29\xb2\x8b\x38\x2b\xc9\x3c\x75\x0c\x4f\xe0\x25\x63\x0a\xb5\xbe\x6a\xa3\x5c\x63\x26\x35\x37\x0d\x0c\x23\x7d\xf8\x0a\x21\x41\xcb\x45\x92\xa0\x53\xed\x3b\x23\x15\xb9\xc3\xb7\xc4\xac\x27\xe0\xfd\xe8\x01\x7f\xbb\x59\x26\x9c\xe6\xd0\xf5\x7b\x03\xf8\x0d\x17\x06\x55\x2f\xdd\x0a\x56\xa1\x96\x1b\x45\x11\x82\xaa\x1d\xdf\xcc\x67\x8b\xa7\x4d\xa3\x8d\x6f\x51\xcb\x64\x8b\x0a\x1e\x1c\x15\x7f\xd7\x5a\xf0\x41\x67\x4d\x90\x14\x2d\x13\x8a\x8b\xbb\xce\x22\x43\x4d\x15\xcf\xac\x70\xbd\x30\x66\xbd\x49\x97\x82\xf0\xa4\x03\x41\x28\x45\xad\x23\x8d\xc9\x6a\xe4\x40\x95\xdc\x93\xc4\x70\xd4\x13\x78\xdf\x62\xde\xad\xec\x3f\xd4\xfc\x71\xc1\x4d\x54\xfd\x72\x5f\x6a\xf3\x35\xbe\xfb\x12\x34\x57\x02\xec\x37\x01\x3a\xbc\x37\x97\xcf\xe0\xb7\x04\x1d\x79\x6a\xb7\x8f\x15\x7a\xcc\x19\x4c\x81\xb3\xee\x82\x65\x19\xa6\x8e\xf3\xee\xa2\xc7\x35\x4c\x7d\x19\xba\xa0\x15\xff\x30\xad\x65\xe9\x82\x55\x72\xc0\xb4\x96\xa9\x02\x3b\xb8\xb7\x86\x5d\x57\x1b\x01\x77\x68\x9c\xac\xd1\x68\x02\xef\x17\xfb\x0c\x3f\xb4\x44\x54\x68\x36\x4a\xc0\xfb\xc6\x47\xfb\x58\xe0\xcb\xa6\xbe\xae\xb9\xce\x12\xb2\x7f\x1e\x8d\x9e\x9e\x03\x7e\x5b\x32\x79\x2e\xc2\xeb\x4f\x06\x95\x20\xc9\xef\xb7\xbf\x9d\x8b\x32\x9f\x2d\xea\xd0\xbd\x26\x86\x7c\x1e\xe2\xe3\x04\x7b\x87\x8a\x93\xe4\x79\x91\xd5\xca\xe7\x83\x67\x8b\x8e\x1d\x54\x1e\xd7\x16\x3f\xfa\x08\x5b\x8e\xbb\x89\xa3\x3c\x9a\xc0\x4b\xb1\x7f\x67\xd4\x86\x9a\xab\xb6\xf7\xed\xb8\xa1\x6b\x07\xdc\x5a\xb1\x0f\x25\x1a\x8f\x1b\x69\xd2\xc1\x81\xda\xe0\x41\xa4\x28\x88\x01\x55\x78\x56\x6e\xdf\x55\x53\xf9\x34\xa2\xb5\x1d\x09\xfd\x68\x5e\x0c\x37\x39\xfb\xd7\x62\xf1\x76\xc6\x13\xec\x67\xcd\x3e\x1b\x95\x4c\x5a\xc1\xd4\x0b\x3f\x0a\xae\x74\xbf\xf6\x29\xb8\xb2\xfe\x23\xf4\x9b\xe3\xf4\xcb\x50\x24\x9a\x2f\xe4\xcc\x0f\xb8\x47\x30\x57\xa1\x9d\xe0\xaf\x9b\x74\x3e\x8f\xcd\x66\x98\x3f\x82\x51\x0f\x31\x1a\xae\x8d\xc9\xf4\x24\x8e\x8b\x7e\xef\x42\xac\xcc\x58\x8a\x55\x22\x77\x63\xa9\xee\xe2\xe1\x98\x4a\x41\x89\x89\x0a\xd5\x8e\x8d\xcc\x8b\x43\x34\x1a\x9d\xcf\x6a\x28\xbd\x3c\x82\xe1\x0e\xfa\x11\x0d\xfb\xdd\x44\xdd\x91\x8d\x83\x7d\x4c\x7f\x1c\x65\x5e\xf7\x12\xa4\x52\xb7\x34\x47\x88\x28\xb9\xe5\x0c\x55\x4e\x26\xce\x14\xdf\x12\x83\xa5\xa6\x1b\x42\x9d\xe2\xa4\x86\xcc\xf3\xdd\xe5\x93\x20\x57\x0f\xde\xd7\xd7\x81\x6d\x72\xae\x0f\xc1\x04\xdd\xdc\xf0\x37\x2e\xee\x91\xd9\xad\xbe\xc2\x86\x4f\x3b\x3d\xdb\x69\x88\x5b\xa4\xc8\xb7\xa8\x9e\x86\x1b\xbb\x9a\xc0\x09\x69\x0a\x1b\xfc\xcf\xe5\x79\x5b\x30\xf2\x85\xf2\x50\x85\xc4\xe0\xeb\x34\x33\xfb\x1a\x65\x56\x9c\x7e\x26\x10\xd9\x22\x69\x9b\x94\x17\x47\x58\x0c\x54\x41\xff\x29\x42\xf0\xf2\xc2\xd3\x45\x70\xdb\x28\x5c\x02\xec\x73\xf8\xd2\xea\xd0\xd3\x57\x84\x93\x86\x6d\xa7\x53\x64\x9c\xc0\xb4\x95\x39\xde\xd8\xaf\xfd\xd9\x62\xc5\x13\xfc\x82\x4a\x59\x25\x4f\xa2\x35\x1a\x3d\xde\xe1\x52\x73\x83\x17\x96\xac\x1e\x53\x99\xc6\x3f\xaf\x9e\xfd\xf0\xeb\x4f\xf4\x3b\xfa\x4f\xf2\x0b\x65\xec\xd9\x4f\x3f\x2e\xbf\xa7\xbf\xfc\xf0\x5d\x6b\x81\xfc\xfc\x33\x5d\x7e\x4f\x7f\xfd\xf1\xd9\x47\x7b\xb6\xfe\xf8\x87\x54\x2c\x25\xea\x7e\xac\xb7\x77\xc3\xfe\x0a\xdc\xef\x26\x4e\x1b\xb9\xb7\x0f\x79\x4a\xee\x30\xd6\xdb\xbb\x6f\x3f\xa5\x49\x98\x5a\xd8\x5a\x67\xe4\xe2\xf3\xfa\x9d\xe1\x62\x8d\x65\x1a\xf5\x8e\x88\xc3\x33\xdb\x9f\xa1\x1b\x4b\xd0\xda\x7f\xb9\x86\x8d\x46\x06\xa4\x31\xa9\x30\x12\xd6\x98\x64\xb0\x97\x1b\x60\xb8\xc5\x44\xba\x77\x05\x02\x3f\x99\x62\x66\x31\x5b\x8c\x8f\xec\x8a\x75\x61\x6c\x7b\xc5\x23\x6a\xe6\xf0\x88\x5d\xf4\x7f\x36\x44\xe1\x8d\xb5\xc8\x24\x37\x52\x3f\xec\x92\x08\x81\xea\x3c\x58\x2d\x29\x27\x89\x9e\x9c\x08\xed\xa1\xd9\x71\x63\x50\x0d\xcf\x12\xaf\x00\x76\x8e\x6c\x85\xfb\xb8\x4c\x24\xbd\xa7\x6b\xc2\xc5\xf0\x48\xe8\x9f\xe1\x61\x87\xd0\xd9\x49\x78\xcd\x66\x0e\x70\x08\xcc\x00\xdc\xcc\x60\x45\x28\x42\x7f\x7e\x6e\x9d\xfa\x6d\x4e\x64\xc5\xd8\xc3\xd8\x5c\x18\x4a\x8f\xf3\xd9\x62\x14\x3a\xf6\xdd\x5c\xe7\x87\xbe\xfc\xb0\xfd\xa1\x03\xb2\x94\x4a\xc9\xdd\x7c\xb6\xf0\x26\x2a\xa3\x09\x3c\x09\x6d\xd0\x83\x5c\x0b\xd2\xa2\xe1\x25\xe0\xf9\x6c\xd1\x3e\xd7\x64\x52\x9b\x80\xbd\x23\x85\x7a\x93\x18\x98\x4e\xad\x46\x47\xf0\xf7\xdf\xe5\xa7\x2b\x77\x06\xb7\x87\xf0\x9e\x3c\x3a\x7c\x45\x84\x90\xa6\x60\xcb\x53\x30\x28\x5c\xa1\x42\x41\x71\xe2\x66\x6e\x37\xd7\xe5\x64\x2f\xb7\x1d\xb2\x1a\xc2\x46\x27\x17\x54\x2a\x85\xd4\x0c\x7b\xcc\xde\x6f\x5f\xbf\xd3\x39\x52\x81\xbb\x63\xa0\xaa\xc0\x76\x97\xaa\x5e\xa2\xbb\xd4\x25\x7c\xaa\x3e\x7b\x2a\x8f\x63\x60\x3c\x9f\x3b\xaa\xbd\xd5\x88\x55\x15\x95\x62\x25\x55\xca\xc5\x1d\x38\x67\xd3\x3e\xb8\x05\xe0\x1a\x48\x2d\xaf\xd9\x67\x08\x3b\x6e\xd6\x36\x95\xfd\x99\xdb\xfe\x4f\xab\xe0\x15\xc7\x84\x35\x3c\x66\x4b\x14\xc8\x9d\x40\x36\x9f\x2d\xf4\x04\x5e\x3c\xe4\xd0\x81\x91\xd8\x7c\xb6\x38\x34\xa7\x47\x10\x05\x87\x32\x15\x39\xb8\xbc\x80\x87\x43\xe8\xe8\x1d\xc7\x8e\x3d\xa6\xc8\x0e\x14\xa6\x72\x8b\x2e\xeb\x5a\x49\xdc\x68\x34\x9f\xc1\x56\xda\x21\x82\x41\x0e\xc4\x8d\x4d\xc9\x6e\x99\x24\x09\xaa\x8e\xf7\x97\x64\xa3\xf2\xe5\xe6\xda\xf3\xfe\x60\x88\xb6\x64\x70\x23\x37\x37\x5f\xbd\xbc\x68\x09\x34\xce\x79\x8d\xee\x71\x3f\x81\x7a\x83\x11\x5c\x5d\x41\x46\x04\xa7\xd1\x30\xe5\x5a\x5b\x33\xcd\x67\x8b\xe1\x68\xd0\x20\x8c\x29\x6f\x4d\x57\xdd\x36\x63\xce\xca\xf9\x6a\xb5\x9b\xba\x1a\x93\x7c\x76\xda\xa2\x51\xf5\x51\x0e\xb5\x47\xb5\x45\x5e\x02\x43\xee\xad\x5e\x9d\x5a\xad\x0a\x09\x63\x0d\x0d\x56\x0a\xd6\x9e\xcb\xf9\x84\x2a\xa4\x22\x3e\x0b\x44\xce\x80\x28\x45\xf6\x9f\x97\x10\x8f\xa9\x3b\x7f\x21\xfa\x1b\x78\xd1\xcc\x53\x83\x0e\x4e\x9d\xd5\x60\x5a\x29\xb2\x09\x66\x25\x60\xcc\xb1\x2c\x70\x57\x10\x2f\x64\xf0\x62\x6c\xb7\xe6\x74\x5d\xb9\xa1\xbb\x5a\x48\x18\x48\x81\x9d\x3d\x65\xc2\x16\x61\xcf\x78\xcf\xd9\x87\x4a\x80\x80\xd9\xfd\x09\xb9\xb5\xb7\x91\xe7\x58\x9b\xa1\x36\x4a\xee\xab\x7d\x7b\xec\x9d\x57\x94\xc2\x37\x5c\x20\x39\xf3\x94\xe9\xd4\xae\x99\x35\x31\x40\x94\x2d\x75\x2d\xdb\x9f\x51\x9f\xc2\x63\xc9\x56\x68\xdc\xe3\x5e\xf7\xf0\x57\x95\x33\x4b\x3b\x4f\x54\x65\x5e\x37\xb2\x8c\xfb\x7e\xc6\xe2\x18\xb4\xcc\x25\xa8\x03\x1f\x28\x11\xa0\x90\x30\xe0\x46\x43\x5a\xe4\x57\xe7\xb1\x16\xa0\xfc\xba\x96\x4c\x7f\x51\x79\x0d\xcb\x1e\x3d\x09\x98\x9f\xe8\x30\x89\xab\xd1\x37\x7e\x8d\xfa\xba\x05\x9b\xaf\x42\x9e\xf8\x8d\xab\xd3\x81\x42\x1e\xc7\xf0\xca\x1d\xbb\x9c\x97\x6c\xcc\x5a\x2a\xfe\x57\xa3\xd2\x5a\x8b\x24\xb6\xaf\x65\x72\x27\x28\xd1\xc6\xbf\x70\xf0\x83\x41\xe1\x0a\xa6\xbd\x9a\xb0\xb4\x4f\xab\xa3\xa5\x56\x4b\xd2\x06\x7f\x4b\xe6\x56\xbd\x3f\xdd\xe7\xf5\xa8\xd8\x56\xdf\xb2\xf6\xb6\x94\xfc\x52\xec\x6f\x8b\xea\xf9\x10\x2e\xd6\x87\x40\xde\x12\x2b\xf3\x55\x54\x60\x69\xd5\x13\x1c\x98\x3a\xc2\xa7\x14\x51\x48\xee\xe1\x59\x07\x3c\x43\x90\x90\xa2\x8a\x4c\xd3\x29\xe8\x65\x06\x6a\x4a\x18\x6e\xb9\xe2\xb8\x98\xf3\x54\x37\xa7\x45\xda\x11\x7b\x29\xd0\x05\xac\x0b\x4d\x23\x8b\x89\x03\x10\x97\x97\x31\xcd\xcc\xbe\x1d\xf8\xa5\xe5\x7a\x86\x04\x67\x0f\x23\xaa\x82\x59\xee\xd9\x19\x35\xd4\xdc\xdf\x56\xfd\x53\xce\x36\x10\x96\x72\x01\x52\x81\x96\x36\x97\xd8\xba\x5e\x5e\x23\xe7\xb7\xc6\x72\x27\x8a\x6b\xe6\x82\x04\x59\xe6\x87\xc6\x94\x0b\xe3\x84\xab\xd4\x15\xc7\xdd\xbe\x74\x3e\x5b\xe4\xf7\x95\xe5\x55\x6e\x41\xc5\x62\x5b\x83\xda\x7f\x75\xa1\x25\xfb\x3b\x6f\xe9\xdc\xcf\x9b\xeb\x76\xa1\x2e\xab\xbe\xfd\x4f\x14\x7d\x34\xe5\x19\x47\x4b\xc3\x6b\xa6\x36\xae\x3f\x31\x6b\xe4\xca\xff\x5c\x65\x80\x4e\xf0\x14\xdc\x44\x2d\xef\x2b\x68\x4f\xe0\xc9\xc3\xc9\x0e\xf8\xf0\x7f\x7a\xa1\xd8\x6e\x17\x1a\x7e\xd9\x0e\x38\xdb\x2a\x0b\x74\x75\xac\x76\xa7\x8e\x62\xa0\xb8\x48\xf5\x22\xd7\xbb\x98\xef\x9e\xb6\x73\x5d\x84\x2f\x6e\x1a\xda\x38\x7a\x57\xe3\xa9\xa5\x7a\xed\x42\x79\xda\x09\x5f\x18\x8c\x3a\x1a\x39\xe2\x55\xff\xd0\x40\x28\x95\x1b\x61\x1a\x3e\xd5\x75\x24\xf0\xfd\x65\xdc\x6a\x12\x2f\x2f\x72\x9d\xb6\xb6\x0e\xab\x0f\xa6\x7d\x0b\xdf\x16\xc9\x3c\xfa\x7e\x14\xce\x4e\xee\xba\x7b\xd4\x3c\x68\xd5\x7f\x06\xe1\x24\x73\xf4\x40\x3b\x82\x15\x58\x7e\x73\xd5\x60\xe1\xbb\x46\xb0\xbe\xc3\xbc\x2f\xb1\x26\x64\x90\x11\xb3\xd6\x4d\xe4\xe0\x35\x01\x4c\x21\x2e\xee\x15\x82\xc3\xfb\x3e\x12\xf5\x1d\x81\xa5\x90\xe7\xdb\x33\x08\x74\xfe\x2c\x22\xbc\x7f\x0e\xd6\x10\xaf\x6c\x17\xbc\xc4\x59\x27\x30\x9b\x77\x34\xd9\x62\x71\xaa\x28\x08\x56\xe8\xb6\xae\x79\x29\xe6\x48\x12\xae\x18\x2d\x3c\x6a\x6c\xa9\x46\x97\x17\x35\xb6\xd7\x33\x07\x15\x3a\x6a\x70\x5d\x05\x72\x51\x91\x28\xc9\xc8\x92\x27\xdc\xec\x61\x25\x55\x5f\xa7\xd9\xe0\x20\xe1\xe2\xbe\x6f\xa2\x7f\xc6\x91\xff\xbc\xa1\xff\xc9\xc9\xc0\xe1\x79\xd4\x3d\x61\x9f\xbe\x32\x32\x44\xdd\xa1\x39\xa6\xaf\x41\x20\xe6\x7d\x73\x17\x85\xe9\x31\xa6\x4e\x73\x94\x46\x72\xcc\xc9\x9c\xb0\x72\x8e\xe8\x59\xb8\xe3\xae\x1e\x93\xee\x3c\xd5\xff\x87\x4c\x87\xc1\x61\xf0\xdf\x00\x00\x00\xff\xff\xb5\x68\x92\x3c\x76\x26\x00\x00"

func examplenftCdcBytes() ([]byte, error) {
	return bindataRead(
		_examplenftCdc,
		"ExampleNFT.cdc",
	)
}

func examplenftCdc() (*asset, error) {
	bytes, err := examplenftCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ExampleNFT.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x1f, 0x14, 0x30, 0xbb, 0x39, 0xb, 0x2a, 0xa, 0x29, 0x52, 0xc6, 0x9a, 0xfa, 0x92, 0x43, 0x52, 0xb7, 0x4c, 0x4b, 0xb9, 0xf8, 0x89, 0xa3, 0x5c, 0x22, 0xe2, 0x5d, 0x9e, 0x76, 0xb8, 0x56, 0x2e}}
	return a, nil
}

var _metadataviewsCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x7a\x5b\x6f\x1b\x39\x96\xf0\xbb\x7f\xc5\x81\x3f\x20\x63\xa7\x65\xc9\xe9\x99\x2f\xd8\x15\x5a\x3d\x9b\x8e\xe3\x1e\x2f\x92\xac\x61\x3b\xb3\x0f\x8d\x46\x4c\x55\x1d\x49\xdc\xb0\xc8\x0a\xc9\xb2\xa2\x09\xf2\xdf\x17\xe7\x90\xac\xbb\x64\xa7\x77\x26\x0f\x8e\xaa\x8a\x3c\xf7\x3b\x39\x7b\xfe\xfc\xe8\xe8\x6e\x23\x1d\x64\x46\x7b\x2b\x32\x0f\xb2\x28\x15\x16\xa8\xbd\x03\xbf\x41\x28\xd0\x8b\x5c\x78\x01\xce\x0b\x9d\x0b\x9b\x43\x69\x4d\x69\x1c\xe6\x47\x52\xc3\xe5\xdb\xab\xeb\xb3\xf3\x97\x7f\x7e\x39\x3d\x3a\xba\xc1\xd5\x1c\x36\xde\x97\x6e\x3e\x9b\xad\xa5\xdf\x54\xcb\x69\x66\x8a\x99\xd1\x2b\x65\xb6\x33\xfe\xb3\x54\x66\x39\x2b\x84\xf3\x68\x67\x2b\x25\x4b\x37\xfb\xf1\xfc\xc7\x17\xe7\xff\xfe\xe2\xe5\x99\x5e\xf9\xb3\x84\x6c\x5a\xe4\x47\x47\xb7\xde\x56\x99\x77\x20\x74\x0e\x16\x9d\xa9\x6c\x86\x0e\x32\xa1\x1b\x12\xc1\x68\x04\x63\xa1\x30\x16\x8f\x6a\x4a\xfd\xae\x44\x37\x81\x4c\x28\x85\x39\x3c\x48\xdc\xba\x29\xbc\x11\xd9\x86\x7f\xf3\x67\xb0\x58\x5a\x74\xc4\xe5\x91\x80\x5c\xae\x56\x68\x09\xde\x27\xa9\x73\x30\xab\x9a\xeb\x09\xb8\x2a\xdb\x80\x70\x20\x20\xb3\x28\xbc\xb1\xb0\x94\x66\x6d\x45\xb9\xd9\x1d\x19\x0b\x02\xfe\xf3\xfa\xcd\xaf\x20\x0b\xb1\x46\x58\x49\x85\xd3\xa3\xe7\xb3\xa3\x23\x59\x94\xc6\x7a\xb8\xac\xf4\x5a\x2e\x15\xde\x99\x4f\xa8\x61\x65\x4d\x01\xc7\xd3\x59\xe5\xa5\x92\x7e\x37\xeb\x7c\x9d\x66\x79\x76\x9c\xf6\xbd\x37\x7a\x7c\x6b\xff\x43\xd8\x75\x54\x56\xcb\x46\x81\xef\x22\xed\x7f\x27\xc6\xe1\xeb\xd1\x11\x00\xc0\x6c\x36\x83\x57\x70\x83\xce\xa8\x07\xb4\xa4\xc3\x07\x99\xa3\x03\x91\x65\xe8\x1c\x78\x03\x02\x1c\xfa\x36\xef\x51\x72\x69\x7b\x0b\x8c\x63\xcd\x90\xe0\x93\x5e\xe0\x04\xa7\xeb\x29\x08\x0d\xef\x2f\xef\x4e\x7b\x4a\xf2\x64\x5f\x52\x7b\xb4\x2b\x91\x61\x0d\xc7\x9b\x44\x46\x8b\x0a\x32\x39\xc6\x0b\x7e\x23\x3c\x48\x0f\xae\x2a\x49\x26\x3d\x42\x88\xe3\x1a\x79\x0d\xbb\x61\xf0\x2b\xaf\x4a\x2b\x57\x95\x86\x35\x7a\x96\xc8\xc9\xe9\x1c\x7e\xbb\xdb\x95\xf8\xfb\x60\x89\x0d\xbb\x69\xd9\xc9\x47\x26\x63\x0e\xb4\xf2\x74\x0e\xaf\xf4\x2e\xd8\xe3\x5f\x79\xd7\xb7\x31\xa9\xbe\x36\x4a\x61\xe6\xa5\xd1\x20\xc9\x60\xd6\xd6\x54\x25\x49\x94\xcd\x2e\x02\xb7\x24\x8a\x1c\xbf\xc0\x72\x07\x57\x17\xdf\xc5\x54\x0b\xfe\x90\xbd\xa5\xb1\xd6\x6c\x89\xf4\xb4\xfc\x44\xe6\x73\xf8\x70\xa5\xfd\xcb\xbf\x9c\xce\xe1\xd9\xd7\xf4\xfe\xdb\x98\x68\xae\x2e\x82\x60\xc2\xfa\xdf\xfb\x4c\x5e\x48\x57\x2a\xb1\x0b\x7c\x2d\x85\x93\x59\xf4\x25\x56\x92\xce\x54\x45\xc6\x44\xca\xd3\xa2\xc0\x09\xe4\xe8\x32\x2b\x4b\xa6\x55\xe8\xbc\xd1\xf9\xa6\x2a\x96\x5a\x48\x05\x2b\x72\x1e\x0d\x66\xf9\x3f\x98\xf9\x29\xbc\x33\xce\xc7\x07\x07\x6e\x63\x2a\x95\xf7\x2d\x88\x10\x0e\xe5\x15\x6d\x31\x11\x18\xcd\x3d\xe1\xbb\x8b\x14\x91\x16\x88\xba\x84\xae\xbd\xa8\xb7\x41\x3a\x58\x49\x54\x39\x6c\xa5\x52\xb0\x44\xc8\x03\x68\xcc\x41\x6a\x50\xd2\xc5\x90\xe4\x37\x68\x71\x65\x2c\x46\x72\x3b\x60\x96\xfc\xd6\x7a\x62\x31\x33\x3a\x93\x0e\xa7\xa3\x38\x89\x05\x85\x9e\x89\x9c\xc3\xad\xb7\x52\xaf\xbb\x2c\xbc\x82\xad\x95\xde\xa3\xee\x08\xf5\x9f\xc5\x8f\x80\x1c\xbd\x90\x29\x50\x76\xe1\x4e\x3a\xa0\x9c\x61\xbf\x5e\x22\x87\x5b\x78\x40\xbb\x34\xae\xf6\x7c\x28\x85\x15\x1c\x17\x41\x6a\xe7\x51\x70\x1c\x15\xe0\xa4\x5e\x2b\x04\x25\x35\x9e\x1e\x16\x41\x8b\xbd\x7d\x92\x70\x85\x50\xaa\x65\x44\x75\x14\x17\x23\x42\x79\x8a\x4c\xa2\xa5\x2d\x11\x04\x6c\x71\x79\xb6\xb2\x12\x75\xae\x76\x1c\xca\xe1\x44\x4e\x91\xe3\xfb\x04\xae\xdf\xff\x7a\xda\x01\xc2\x96\x1f\xe5\x31\xb4\x90\x09\x31\xfc\x09\x4a\x8b\x1c\xcc\x26\x80\x3e\x3b\xcc\x7d\xcd\x54\x2b\xd6\x7c\xbd\x94\x0a\xbf\x35\x42\x90\x5a\xfa\x93\xfa\x89\xfe\xb5\xcd\x66\xd2\xf9\x32\x22\xcd\xee\x82\x03\x08\xd3\x92\xd3\x56\x9c\xa1\x7f\x0e\xd5\x6a\xca\xee\xb4\x60\xcc\xc3\x8f\x6d\x13\x5d\xb4\x69\x18\x2e\x6d\xb4\xb8\x68\x68\xa9\x97\x7d\xeb\x47\x20\xa2\x2c\x86\x55\xd4\x68\x65\xd6\x0a\x90\xac\x8b\x26\xa3\x83\x08\xea\x73\xde\x58\xcc\x81\x0c\xc3\x82\x59\xad\x20\xdb\x08\xa9\x87\x09\x8d\x40\xbb\xa4\xcb\xca\x61\x4e\x89\xc8\x22\x97\x04\x54\x72\x70\x72\x77\x13\xa0\x54\x65\x82\xf3\x1b\xf2\x7e\x28\x30\x97\x62\x6f\x48\x6a\xe8\x63\xda\x87\x21\xbb\xb2\x92\x62\x6e\x34\xf5\x1e\xbf\x7f\xbb\xbb\xbb\x6e\x78\x66\x7e\x42\xb0\x4d\x39\x9b\x6a\x00\x10\x1c\x61\x68\x2d\x9c\x18\xcb\x3f\x6e\x4f\xe1\xc3\xcd\xdb\x18\x12\x46\xc8\x4a\x80\xe7\x63\x64\x91\x25\x56\x56\x0d\xfd\x8f\x4d\xaf\xf5\x65\xd4\x34\x2a\x4b\xca\xac\x6c\x5b\x8d\x87\xb9\xee\x41\xb1\xe8\x2b\xab\x6b\x60\xfb\xad\xe1\xea\xfa\xf2\x96\xc9\x0f\x3b\x48\x44\x8d\x3d\xc5\x62\xac\x9d\x60\xea\x8d\xd1\x26\xa8\xa0\xd3\xad\xaa\x8d\x1c\x97\x60\x0e\x8d\x83\xde\x46\x0b\x00\x61\xb1\xb1\x8b\x9c\x32\xb8\xdf\xa0\xb4\x5c\x7a\x51\x9a\x92\x39\x6a\x2f\x57\x12\x2d\x9c\xbc\xbe\xba\x38\xad\x81\x58\xc1\xf6\xe2\x37\x82\x23\xae\xb4\x98\x79\xf8\x70\x73\x35\x85\x57\x90\x29\x49\x7b\x45\x59\x2a\x99\x85\x38\x46\xa6\x58\x39\x0c\x69\xef\xf5\xd5\x45\xbb\x64\x5a\x51\x85\x4a\x26\xa8\x8c\xe0\x24\x14\xb9\x78\x90\x82\x58\x62\x72\xd7\xc2\xe3\x56\xec\xf6\x5a\x66\x92\x5e\x6d\x02\x9d\xc8\xf6\xfa\xea\x82\xac\x8c\x40\x8f\x30\x46\x62\x65\xba\x18\x53\xa8\x78\x5b\xbb\x3b\x90\x3a\x1d\x41\x6e\x32\x37\x95\xe5\xca\x4d\xa5\x99\x51\x4e\xc4\xd2\xbb\x59\xc4\x70\x26\xf2\xdc\x92\x51\xeb\xf5\xec\x60\x98\xcc\xa8\xa8\x19\x4b\x0e\xd7\xc2\x6f\xd8\x39\x34\x18\x8e\x38\x42\x41\x49\xef\x62\x51\xb9\x0a\xd6\x52\x17\x57\xb5\xb0\x82\x36\x8c\xdd\x3d\x29\x61\x48\x07\x46\xab\x1d\x68\xc4\x9c\xe2\xfd\xaa\x01\xce\x45\xae\xe3\x72\xf6\x29\x40\x9f\x20\x1c\x02\x7b\xe6\x76\xce\x63\xe1\x0e\x8b\x85\x38\x4d\x72\xf9\x6b\xcf\x6b\x5b\x22\x9b\x74\x17\x8e\x3a\x71\x26\x73\x58\x90\x9c\x87\x9f\x58\x9e\x0b\x86\x31\xe6\xe1\x8d\xa8\x2a\x1d\xca\xd4\xe4\x9d\x24\x23\x16\xb6\x16\x5e\x3e\x20\x05\xa8\xc6\x90\xfe\xa8\x0d\x6d\xcc\xf6\xcc\x9b\x59\xb4\x9c\x33\x7a\x7d\x66\xf4\xd9\x16\x97\xb3\xff\x17\xf0\x9c\x55\x56\xb9\xbd\x72\x7b\x2c\x18\xc9\x55\x2d\x5a\x58\xb4\x04\xd0\x5d\x05\x4d\xd8\x3a\x26\x12\xe6\xb3\xd9\xf1\x94\x34\x28\xfc\x49\x92\xe7\x69\x7a\x71\x3c\x3b\xae\x7f\x13\xac\xd3\x0e\xa8\x96\x28\x9f\x04\x75\x7f\x78\x7c\x95\x5a\x8e\x98\x12\x89\x39\x41\xdd\x16\xc5\xc2\xb3\x1c\x57\x52\x63\x0e\x0e\xad\x14\x0a\x74\x55\x2c\xa3\x63\x0b\x70\x25\x66\x72\x25\x33\xea\xe3\x6a\x70\xd7\x61\xa3\x83\x8d\x78\xc0\x56\xb7\xcc\x80\x24\x69\xda\xf1\xf6\x2d\x25\x28\xd1\x83\x5b\x97\x58\x35\xb8\x5b\x53\x20\x14\x62\x17\x63\x1c\x12\x2e\x07\x16\xd7\x95\x12\x16\xae\x2e\x38\xbc\xb9\xf6\xa2\x76\x8b\x9e\x29\xe1\x1c\x91\x18\x62\x65\x70\x8f\x23\x68\x15\xfc\x5d\xfc\xd2\x01\x7e\x29\x31\xf3\x21\xaf\x53\x8a\xd7\xf2\x73\x85\x20\x0a\xa3\xd7\x31\x93\x33\x05\x5b\xe9\x37\x52\x87\x34\x1b\x65\xb5\x2f\x82\xde\x06\x14\xc3\xe4\x19\x90\xa6\xbe\xab\xe7\x89\x1f\x7b\x9f\xc7\xeb\xab\x40\xf6\x22\xae\xdd\xa3\xe4\xe7\xfc\xdf\x73\x80\x1b\xb3\x13\xca\xef\x80\x7b\xdb\xf4\xf2\x82\x35\x9c\x62\x78\x51\x1a\x27\xa8\x5a\xb0\x71\x6d\x3d\xca\x61\x56\xd7\xf2\x01\x1d\x14\xc2\x7e\x42\x5f\x2a\x41\x15\x8f\x20\x19\xad\x24\x17\xb4\xed\xb6\xfd\x39\x90\x08\x63\x47\x4e\x42\x8b\x20\x25\xc6\xf6\xbc\x26\xeb\x5d\x1b\x1c\xe5\xb3\xcf\x15\xda\x5d\x70\xf8\xfb\x9b\xb4\xe9\x3e\xc9\x93\xe7\x1b\xac\x84\x04\x80\x6c\x80\xf2\x6d\x5b\x77\xa5\xd8\x35\x08\xa9\x0d\x0d\xd5\x9d\xdf\xa0\xc3\xda\x72\xd9\x2c\xba\xe4\x0c\xd4\x57\x13\xd0\xcf\x7d\xaf\xac\x15\xbb\x20\x16\x6f\x45\xf6\x29\x88\x50\xea\x5c\x3e\xc8\xbc\x12\xaa\x41\x5f\x6f\x0b\xd5\x18\x7b\xe5\x69\x48\x51\x95\xbf\xd2\x2b\xe3\xe6\xf0\x5b\x54\xce\xef\xdd\x2a\x28\xda\xc2\xc8\xba\xbe\x41\xcc\x66\xf0\x77\xa1\x64\x2e\x7c\xac\xfe\x5c\x55\x70\x5b\xa5\x14\x6d\x87\xa2\x52\x5e\x96\x4a\xa2\xad\x9b\x66\x6d\x3c\xd9\xf8\xda\xa2\xf0\xa9\xe4\x78\x31\x3d\xef\x80\x7d\x10\x16\xbc\xf1\x42\xbd\xae\x3c\x2c\xe0\xbc\xf7\x99\x5c\x39\x99\x8a\xd4\x35\x9d\x23\x81\xaf\x05\xa4\xfe\xf9\x43\xda\x3b\xcd\x2a\xdf\x8b\x6f\xed\x27\xe1\x1c\x5a\x7f\x52\xef\xfb\x69\x41\x74\x4e\xa0\x40\xe7\xc4\x1a\xe7\x70\x7c\x1b\x98\xad\xf1\x3f\x9d\xdb\xe3\xd3\xbe\x18\x5f\x39\x27\xd7\x3a\x38\x44\x84\x37\x92\xfa\x12\xa6\xc5\x70\x51\x2f\xcf\xdd\x84\xe0\xdc\x86\xc7\x9d\xdf\xd8\x6c\xa5\xb6\x36\x9e\xb0\x24\x5d\x1f\x28\x7d\x47\x90\x43\x37\xc0\x87\x76\x8d\x9d\x91\x0a\xda\xd8\xc4\xbb\x4e\xcb\x9d\x54\x48\x86\x12\x82\x3b\x79\xba\xae\x23\xfb\xc0\x1f\x06\xd3\x93\x5f\x63\xa7\xd5\x9d\x45\xde\x60\x86\xf2\xa1\x2e\x05\x11\x96\xa8\x71\x25\x33\x29\xec\x2e\xb5\xe0\x11\x77\xb7\xae\x14\x2c\x8d\x54\x58\x66\x16\xc9\xaa\x77\x65\x3d\x9c\xb1\x09\x30\x05\xe2\xfa\x69\xba\x46\x7f\xb7\x2b\xf1\xe4\xb4\xa7\x80\xcc\x14\x05\xea\x3c\xa4\x81\x33\xf8\xe0\x5a\x76\xc1\xb3\x5a\xca\x1b\x1a\xb7\xa1\x15\x0f\x12\xb8\x54\x66\x1b\xb8\xb0\x5d\x2e\xa4\x83\x8a\xe4\x06\xf7\xb5\xc2\x76\x89\xd1\xeb\x6a\xa9\x64\x46\x05\xe6\xc9\xe9\x7d\x77\x26\x42\x51\x8a\x6c\x30\x65\xb2\x1c\x57\xa2\x52\x7e\x04\xcf\x74\x58\x26\xf1\x40\x46\x28\x65\xb6\xb4\xdf\xf2\xfc\xb3\x2a\xa3\xb3\x23\x64\xa2\x14\x4b\x9e\x14\x83\x0c\x96\xb6\xaa\x7c\x65\x91\x97\x71\x52\xe4\x39\x4c\x6a\x87\x9b\xe5\x83\xa4\x94\x68\x98\xc3\xeb\x7a\xd1\x4f\xcf\x5e\xe9\xdd\x4d\xac\x87\xbf\x76\x87\xca\x89\xf1\x6f\x3f\x77\xed\xe1\x5d\xed\x80\x75\x9b\x9c\x09\x95\x55\x2a\x91\x2c\x0a\x53\x69\x1e\x22\x3b\xa1\x10\x1e\x84\xaa\x90\x02\xa9\x76\x2b\xb4\x36\x36\xd6\xd1\xd6\xc6\x05\xf3\xde\x78\x84\x33\xb8\xf2\xad\xd1\xcc\x12\xfd\x16\x51\x53\x9c\x62\x81\xbf\x98\x9e\x77\x06\x5e\xf0\xe6\x0b\x6d\x09\x46\xd4\x42\x2c\x1d\x7c\xe1\x0d\x4d\xe0\xa0\x77\xe7\xd3\xff\xff\x92\x96\xea\xb6\xa5\xc6\x2d\xdb\x84\x93\x17\x3d\x87\x2f\xfb\x0b\x53\x76\x0e\xa1\xd4\x0e\x4a\xb4\x19\x6a\x4f\x5d\xd8\x1a\x5b\x83\x88\x30\x0f\xf2\x68\x0b\x76\xcc\xa5\x70\xd2\x41\x69\xa4\xf6\x9d\xa2\x94\x16\x39\xa3\x64\x4e\x9a\x0e\x49\xcd\x15\xc2\xfa\x7a\xa2\xef\x60\xbb\xa1\x06\x23\x13\x39\x35\x9e\x60\xa8\x14\x72\x70\xff\xe1\x52\x7e\x79\xf9\x97\xfb\x90\x19\x84\xb2\x28\xf2\x5d\x3d\x2e\xef\x0d\xab\xb0\x83\x9e\xed\x27\x13\x8e\x64\x9b\x09\x7a\x90\xde\x81\x29\xd1\x86\xec\xd9\xb5\x71\xca\xc2\xda\x4b\x8b\x6a\x47\x81\x06\x6d\x21\xb5\x74\x3e\x8e\x60\xd6\x68\x5b\x3b\x43\xed\x16\x0b\x84\xaa\x24\x85\xff\x5b\x42\x6a\x56\x50\x5a\xcc\xa4\x93\x46\x4f\x87\x9d\x5d\xe5\xe7\x10\x58\xea\x5a\xdd\x7f\xa5\x76\xae\x33\xd2\x0a\x87\x56\x61\x66\x13\xbc\x85\xd8\x20\x14\x62\x47\x7e\xdc\xd2\xed\x64\x20\x0b\x8b\x2a\x90\xbb\x91\x65\x6d\x5e\xf4\xe1\x7e\x2b\x94\x42\x7f\x9f\x26\xbc\x14\x2c\x27\xc0\x93\x84\x1d\x15\x87\x6b\x40\xe5\x62\x2e\xe6\x51\xe3\x56\xa3\x85\x42\xae\x37\x1e\xb6\x42\x87\x88\xcc\x85\xc8\xd0\x0b\x0f\xce\x37\xb9\x26\x20\x97\x28\x25\x6a\xff\xfd\x8e\x3a\x69\xcb\x6f\x32\x86\xab\x5f\x5b\x94\x16\x47\x32\x3a\x25\x8b\x9f\xb9\x24\x80\x67\xcf\xf8\x29\xe4\x65\x98\xc3\x31\x65\xe9\xe0\x26\x8d\x6f\x4a\x4d\xaf\x64\x0e\x56\xe8\x35\x82\x9c\x22\xfc\x76\x3e\x79\xf1\xfb\xf1\x81\xcc\xcf\x39\xae\x8e\xbf\x0b\xa8\xd9\x1e\xcd\xc8\x21\x19\xff\x91\x51\xe3\x20\x6b\xfe\x1a\xb3\x4f\x98\x0b\x70\x3d\x55\x33\xc2\x01\x8d\x2b\x1f\x26\x8c\x54\xdd\xad\xf5\xea\xb0\xcd\x03\xb9\x06\x04\x47\x71\x7c\x40\xed\x2b\x8e\x06\x6d\x58\xcd\xb0\xd2\x6d\xa5\xcf\x36\x4b\x43\x55\x77\x62\x7d\x52\xc3\xdd\xb0\x5f\xa7\xe3\x13\x58\x56\x11\x2c\x8f\x1a\x3a\xc4\xd5\x85\x2b\x3d\x69\x13\x0f\x44\x06\xc5\xc6\x68\xee\x9a\x43\xf3\xd4\x52\x7d\xac\x3c\x66\x25\x7f\x9c\xc5\xa4\x7f\x79\x97\x40\xec\x69\x2e\x79\x46\x1a\x23\x1d\xbc\xc3\x5c\x8a\x49\x1a\x54\x72\xfe\xe6\x93\x0f\x6b\xd1\x95\x46\xe6\x24\x4e\x9e\x96\x52\x26\x9f\xf6\xcb\x0f\xde\xdd\xa2\xa8\xe3\xaf\x3c\xa2\x4a\xa5\x06\xc3\x18\x78\xd6\x8a\x67\x59\x7b\xc7\xe6\x04\x85\x37\x9e\x71\xb5\x91\x99\x02\x5d\xec\x1b\x08\x30\x17\x99\xf4\x65\xe6\xaa\x25\xaf\x10\x2e\xda\xd3\x12\x73\xd8\xa0\xc5\x66\x00\x81\x0f\xa8\x28\xda\x4d\x0b\xf3\x0f\xa9\x94\x98\x1a\xbb\x9e\xa1\x3e\xfb\x70\xcb\xc3\x89\xd9\x7f\xe3\x72\xf6\xb7\xbb\xbb\xeb\xd9\x2f\xc2\xc9\xcc\x7d\x34\xab\x8f\xfc\xf8\xee\xea\xdd\x9b\x8f\x7c\x30\x3d\xa0\xbe\x96\xcb\x9e\xa8\x30\xca\xdd\x64\xb8\xad\xeb\xe0\xec\x23\xb4\x75\x41\x7f\xfa\x1f\xea\xcd\x8b\xfa\xd7\xa1\x69\x82\x92\x19\x6a\xc7\xe7\xb4\xc6\xb2\x32\xbd\xa9\x65\xe2\xca\xfc\x0b\x8b\x21\xae\x72\xb3\xc1\x10\xf5\x2e\x9d\xdf\x75\xa6\xec\x71\x78\x96\x86\x8c\x54\xbb\x72\x75\x4a\x1e\x16\x61\xe5\x71\x8e\xdd\x32\x96\xb7\x91\x96\x61\xef\x4d\x84\x5c\xd5\x93\xca\x3d\xd2\xfc\xd8\x1a\x66\x1e\x1c\x66\x77\xa1\xc1\xa2\xb5\xef\xd1\xc1\x8b\x37\xd4\xb7\x1a\x2e\xd2\x3e\xdc\xbc\x0d\x33\x48\x0a\x1d\x1e\x0b\xe0\x23\x51\xc0\x2f\x1e\x2d\x65\x35\x27\x3d\x0e\xc7\xce\xed\xf4\xc6\xc2\x5a\xee\xda\x23\x62\x12\xd0\x27\x84\x69\x3d\x0d\xfe\x45\x99\x8c\xb0\x98\x34\x5d\xae\x2b\x4a\x4e\x53\x56\xae\x25\x21\x6b\x4a\x61\x96\xf4\xc0\x13\xdf\x44\xaa\x88\xe8\xef\x39\x19\xf8\x08\x4f\x38\x1b\x58\x1c\x18\xe9\x0f\x25\x17\x1a\x6f\xf2\xcf\x50\xe1\xc7\x89\x6b\xe8\x77\xc2\x9d\x10\x6f\x25\x3e\x60\xe4\x25\x02\x4a\xf0\x1e\x15\x20\x65\x6a\xf4\x55\x09\x82\x6d\x2e\x6b\x0e\xd7\x39\x7c\x95\x96\xdc\x9c\xd1\x51\x61\x47\x08\x43\x80\x6c\x0a\xed\x7a\xea\xd1\x12\xe0\xfb\xcb\xbb\xe6\x98\xfe\x42\xf8\x76\x58\x6b\xc6\xd4\xba\x86\xbb\xe5\xf0\xc2\xc6\x11\x2d\xdf\xa6\xc6\xa6\x9e\x57\x85\x33\x8b\x61\xc5\x14\x61\x5c\xc7\x91\x6e\xfd\xd0\x1b\x8c\x07\xaa\x39\x61\x6d\x37\x32\xdb\x40\x51\x39\xee\x9a\xc9\x18\x02\x92\x28\xf2\x11\x06\x43\x6f\x16\xa8\xeb\x15\xad\x99\xaa\x38\x14\xd4\xd3\x24\x66\x20\xcd\x8b\x42\x25\x98\xee\x92\x84\x2b\x1d\xcd\xc7\xe1\x00\xbb\xce\x4c\xed\x2c\xd5\xe3\xc4\xca\x07\xea\x34\x5a\xac\x34\xf9\x7b\xc0\x0c\x27\xfa\x70\xbf\xc4\x76\xc0\xb4\xfa\x2a\x6f\x58\xd9\xb9\x15\xdb\x30\x7d\xe2\x39\x54\x08\x4a\xb5\x39\x6c\x8c\x62\x3e\x69\xc1\x90\xee\x88\x21\x52\x1e\x28\xdc\xab\x84\x16\x54\x4e\x34\xe9\x44\xaf\x33\xe4\x8a\x77\x62\x5c\xb5\xa2\xa6\x9a\x22\x23\x55\xf6\x67\x5c\x0b\x34\x17\x65\x92\xd4\x3b\x68\xd2\xe0\xdd\xc1\x49\x8e\xa5\x71\xd2\xc3\x0f\xf1\x76\x07\xfc\x10\xaf\x88\xbc\xbf\xbc\x3b\x1d\x19\xd9\xa7\xd3\x0d\x0a\x0e\x4b\x91\x7d\xda\x0a\x9b\x3b\x1e\x1e\x0a\x2f\xa3\xb8\xd8\x31\x1a\x1e\xe2\x1d\x1d\x1e\x0a\xc7\x26\x38\x14\xcd\xa3\xb4\x0d\xae\x2e\x35\x7e\x12\xa5\xd3\x1c\x98\x6e\xa9\x3b\x73\xe8\x79\x70\x5d\x95\x6d\x9c\x53\xb8\xa4\xca\x07\xb7\x5d\x9d\x36\x0b\x26\xc1\x5e\x0b\xc1\x95\x93\x43\x1f\xbd\x08\x3f\x57\x42\xa5\x80\xc8\xd2\x8f\x13\xc3\xd0\xa6\xdd\x07\x0b\x7c\xcb\x66\x44\xf9\xf0\x7e\xe8\x70\x61\x49\x43\x77\xb8\x1d\xd4\x3b\x00\xa9\xf5\x3a\xb0\xcd\xd8\x33\x88\x95\xb1\x7c\xad\x45\x1a\x8d\x75\x54\x21\xa3\x9e\xd6\x05\xa6\xa6\xb0\x47\xd5\xa4\xe8\x00\xb7\xe8\xbc\x95\xc1\x52\x08\x0f\x2b\xa4\x10\x7a\xd7\x72\xad\x29\xf5\xd0\x62\xa9\x76\xa1\xa1\xa1\x28\xdf\x97\x74\x6f\x88\xc1\x6b\x52\xb5\x77\x3f\x61\xc7\xbd\xef\xdc\x22\x9b\x0e\xaf\x20\xdd\x77\x5c\x9d\x0f\x46\x3f\x57\x72\x34\x4e\xf5\x25\xfb\xcf\x11\x5b\x2b\x18\x0c\xe5\xd6\x6d\x60\xc7\xe5\xc6\x67\x15\xd4\xca\x16\x55\xd1\xc8\xea\x3a\x3a\xf4\x7d\x6f\xf4\x3d\xe6\xf4\x87\x59\xba\x4c\xa7\x60\xb1\x3f\x57\x66\xeb\xc2\x60\x2a\xde\x55\xa1\x2a\xa0\x28\xfd\xae\x9f\x7f\x52\x54\x20\x02\x52\x1a\xe0\x1c\xd0\xeb\x63\x43\x54\x1e\xe9\xa4\x79\xf8\xf5\x86\x40\xb7\x6d\xf5\x84\x3a\x80\xff\x38\xe0\x86\xa7\x87\x6e\x9a\xec\x4b\x36\xdd\x4b\x25\xe3\x61\xbc\xb7\x66\x5f\xc8\x1c\x03\xd5\x77\xb6\xb1\x35\x7d\x35\x8c\xa3\x3b\xbc\x6a\x54\x66\x49\x83\x4f\x92\x5d\x82\xf4\xb4\x3e\xbb\x4f\xf9\x54\xba\xdb\xd0\x7d\x9c\x98\x55\x20\xf0\xa7\x67\x5f\x1f\x8d\x99\x93\x61\x58\x4d\x8e\x3c\x81\xc7\x5c\xf8\xdb\xcf\x27\xa7\xa7\x73\x38\x8e\xe1\x97\x3d\x83\x6b\x83\x78\xa1\xef\xf1\x90\x7d\x10\x3d\x85\x91\xc7\x48\x68\xc7\xad\xe3\xa1\x90\x06\xaa\x7b\xa2\x98\x92\x13\x8f\xd0\x37\x64\xe1\xc9\x62\x8a\x40\x9f\x22\xa8\xef\x22\xe0\xfb\x04\x35\x7d\x74\xb4\xd2\x72\xd5\x45\xeb\xf7\x70\x61\xe3\xad\x8b\xe6\xe7\xc8\xb2\x96\xc3\xc2\xa2\xe3\xbf\xfb\x60\x36\x84\x2f\xfa\x2f\xf6\x6d\x69\x94\xbc\xe8\xbf\xd8\x4f\x52\xb3\xa6\x45\xd8\xa1\x8d\xa3\x7e\xbe\x38\xe8\xfd\xff\xe7\x96\x85\xc2\xf7\xc6\x6c\x79\xde\x9a\xa2\xf6\x9f\x5c\x2b\xe2\xff\x81\xd6\x65\x2d\x43\xe3\x63\x1e\xd0\x32\x15\x64\x44\x7c\xfd\x52\x66\x2e\x1d\xa8\x74\xf3\x4a\x02\x5f\x37\x1b\x4b\x54\x46\xaf\x09\xdc\x23\x6d\x4c\x7d\xb7\x36\x49\x82\xca\x39\x51\x0c\x12\x36\x13\xcb\xb5\x5b\xbc\x11\x19\x06\xb1\x11\x5d\x43\xc9\x30\x65\xed\xbb\xfe\x0a\x17\xad\x29\xdf\x18\xb6\x31\x51\xa4\x96\xe5\x10\xc2\x47\x2e\x9b\xd6\x8d\x70\xe8\x98\xf9\x7a\x7c\x6c\xe4\x19\x05\x9f\xbc\xb4\x55\x2d\x96\xa6\xf2\x8f\xa3\xc5\xa6\xbf\x9e\xb7\x9b\xed\x0e\xee\xdb\xcf\x95\xb0\x78\xe6\xe4\x3f\xa8\x34\xe5\xdb\x5d\x9d\x61\xdb\xa3\x58\x1c\x03\xb8\x2a\xf8\x18\x95\x87\x6b\x1d\xf8\xbf\x08\xad\xd1\x76\xe0\xd7\x87\x60\x0d\xd8\x49\xbf\x13\xe5\x3a\x5f\x00\x6d\x03\x8d\xc2\xc2\x8b\x1f\xcf\xcf\xbf\xbc\xfc\xf3\xf9\x90\x80\x25\x63\xd8\x4b\xc0\xad\xc9\x64\x14\xad\x0b\xac\x89\x6c\xd3\xc7\xff\x27\x07\x2e\xac\xdb\x98\x02\x4b\xb1\x4e\xdd\x76\x04\x72\x6d\xe2\x1d\xc8\x4f\xb8\xab\xcb\xfd\x63\xa9\x9d\x17\x6b\x2b\x8a\xe3\x09\x1c\xfb\xad\xf4\x1e\x2d\xfd\xcc\xa5\xcb\x8c\xcd\x8f\x7b\x37\x71\x6b\x89\x31\x26\x37\x87\xaf\xc1\x16\x3a\xca\xf9\x57\xdd\xc0\xdd\x67\x0c\xdd\x55\x43\x65\x76\xbf\x0f\x65\xdd\xdb\x7f\x98\xb5\xb4\xec\x5f\x7a\xd7\xb7\xc5\x29\x2c\xda\x7c\x8f\x24\xaf\x86\x5d\x58\xb4\x99\x1f\x2e\x6d\x71\x0e\x8b\xb6\x1c\x46\xa0\x06\x21\x10\xc4\xf0\x6b\x10\xd4\xbf\x1d\xfd\x6f\x00\x00\x00\xff\xff\x61\x84\x67\x75\x0c\x35\x00\x00"

func metadataviewsCdcBytes() ([]byte, error) {
	return bindataRead(
		_metadataviewsCdc,
		"MetadataViews.cdc",
	)
}

func metadataviewsCdc() (*asset, error) {
	bytes, err := metadataviewsCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "MetadataViews.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x79, 0xb8, 0x62, 0xc0, 0x29, 0xb0, 0x76, 0x57, 0x88, 0xd6, 0x90, 0x49, 0x4, 0x8b, 0x6c, 0xf4, 0xbc, 0xed, 0xe2, 0x65, 0xa2, 0x3e, 0x19, 0xcb, 0xc0, 0x8f, 0x5f, 0xbf, 0xdd, 0xd4, 0x14, 0x57}}
	return a, nil
}

var _nonfungibletokenCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x57\x41\x8f\xdb\xba\x11\xbe\xeb\x57\xcc\xcb\x03\x9a\xdd\xc0\x6b\xf7\x50\xf4\x60\x20\x68\xda\xb7\x6f\x01\x5f\xb6\x0f\x5b\x17\x3d\x04\x01\x4c\x8b\x23\x9b\x08\x45\x2a\x24\x65\xc7\x0d\xf6\xbf\x17\x33\x24\x25\xca\xf6\x26\x9b\x5b\x73\x89\x57\x22\xbf\x99\xf9\xe6\x9b\x8f\xd4\xe2\xdd\xbb\xaa\xfa\xf5\x57\x58\xef\x11\x1e\xb4\x3d\xc2\xa3\x35\x77\x0f\xbd\xd9\xa9\xad\x46\x58\xdb\xcf\x68\xc0\x07\x61\xa4\x70\x92\x17\x6e\x1e\xad\xc9\xef\xf9\xf5\x06\x6a\x6b\x82\x13\x75\x00\x65\x02\xba\x46\xd4\x58\x55\x84\x37\xfc\x09\x61\x2f\x02\x08\xad\xc1\x58\x73\xd7\x64\xf4\xc0\xe8\x79\xb7\x87\xda\xf6\x5a\xd2\xdf\x8d\x75\x2d\x04\x3b\xaf\x56\x0d\x08\xe8\x3d\x3a\x38\x0a\x13\x3c\x04\x0b\x12\x3b\x6d\x4f\x20\xc0\xe0\x11\x4c\x13\x86\xfd\x33\x08\x7b\x54\x6e\xcc\xe6\xc8\x70\x06\x51\x56\xc1\x82\x6a\x3b\x8d\x2d\x9a\x40\xcb\xe0\xbc\x88\x31\xd7\x39\xe7\x7e\x89\xb3\x17\x07\xca\x18\x1a\xab\x89\x26\x2a\x86\x80\x5c\xaf\xd1\x83\x30\x12\x8c\x68\x95\xd9\x55\x5c\x6a\x98\x54\xef\x3b\xac\x55\xa3\xd0\xcf\x13\x83\x0f\xeb\x0d\x38\xf4\xb6\x77\x99\xaa\xda\x3a\x1c\x1e\x41\x38\x75\x89\x33\x87\x9d\x43\x8f\x54\xbb\x30\xf0\xf8\xb0\x06\x65\x18\xdd\xb7\xc2\x8d\xb5\x27\xe0\xdf\xac\xd6\x58\x07\x65\xcd\x06\x9e\x26\xf8\x23\x34\xa1\xfa\x60\x1d\x65\xcd\xd4\xbe\xf5\x8c\x5b\x0f\x7b\xe7\xd5\x8a\x5a\x59\xeb\x5e\xf2\xa2\x06\x8f\xd0\xf4\x86\xdf\x71\x0b\x04\x33\x40\x59\xd8\xa3\x41\x47\x8f\x50\x78\xa5\x4f\x55\x6b\x0f\xa9\xad\x9e\x12\x25\x5a\x6c\x1f\xc0\x36\xbc\xba\x0c\xc1\xf9\xfe\xe1\xec\x41\x49\x74\x1b\x5e\xb9\x79\xc2\x1a\xd5\x81\xfe\x1c\xd2\x1d\x48\xf4\x5c\x87\x2f\x9f\x80\xc4\x5a\x0b\x87\x45\x72\x47\x15\xf6\xe0\x6d\x8b\xd0\x39\x64\xd0\xce\x7a\xa6\x49\x2a\x5e\x51\x25\x56\xbf\xf4\xca\x21\x27\x35\x72\x56\x74\xb7\x46\x17\x84\x32\xa9\xa7\x0c\xb4\xc5\xbd\x38\x28\xeb\x86\x69\xf0\x51\x29\x27\xa0\x14\x3c\x76\xc2\x89\x80\xb0\xc5\x5a\xf4\x94\x66\x80\x9d\x3a\xa0\xe7\x18\xac\x60\xfa\x21\xb6\x4a\xab\x70\xa2\x48\x7e\x4f\xfb\x04\x38\x6c\xd0\xa1\xa9\x91\x44\x1a\x15\x5c\xa6\x44\xe9\x5a\xa3\x4f\x80\x5f\x3b\xeb\x13\x5e\xa3\x50\xcb\xa8\xba\xb1\x76\x65\xc0\x1a\x04\xeb\xa0\xb5\x0e\xab\xc4\xf9\x48\xd7\x1c\x56\x34\x83\xde\xa6\xc4\x28\x29\x7f\x9e\x55\x2b\x3e\x23\xd4\xbd\x0f\xb6\x1d\x9a\x90\x48\x9b\x0c\xd0\xb4\x11\x34\x96\x16\x0e\xc2\x29\xdb\x13\xa4\x32\xbb\xd4\x0b\x82\x8f\x7a\x98\x57\xd5\x3f\x4e\xd0\x7b\xe2\x73\x40\xe6\x12\x46\xa0\x59\x4a\xca\x36\x2c\xc9\xa9\xc6\x3d\xd4\xc2\x80\x47\x23\x2b\xda\xe5\xa2\x58\xb2\xda\x3a\x44\x77\x17\xec\x1d\xfd\x3f\xe3\xd8\x24\x3c\x6a\x99\xd9\x51\x7e\x1c\x84\xa7\x99\xd2\x12\x50\x23\xa1\x6a\xd0\x28\x77\xe8\xaa\x8b\x71\x5a\x5b\x0e\x95\xa7\x8e\x54\x6f\x6c\xd8\xa3\xe3\x14\x67\x83\x2d\xb1\x37\x78\xe2\xe6\xc4\xd0\xd2\x89\x38\x1a\x8f\x0f\xeb\xaa\x71\xb6\xbd\xe8\x29\xfb\x94\x81\x3a\x3b\x88\xc4\xce\x7a\x15\x86\x4e\x82\x35\x93\x58\x6f\x7d\x35\xd5\x68\x6d\xa9\x13\x21\xca\x37\x38\x61\x7c\x83\x6e\x5e\x55\xef\x16\x55\xb5\x58\xb0\x93\xb7\x24\xde\x38\xd5\xe7\xd6\x3c\x87\x7f\x32\x74\xf9\x96\x9a\xa5\x35\x6d\x56\x6d\x67\x5d\x88\x6d\x29\xfa\xad\x7c\xe1\xed\x8b\x45\xd5\xf5\xdb\x2b\xd0\x97\xae\xfa\xad\xaa\x00\x00\x52\x56\xc1\x06\xa1\xc1\xf4\xed\x16\x1d\x7b\x42\x6c\x1d\x2b\x55\xf9\xe8\x7a\xca\x00\x7e\x55\x3e\xf0\x44\xd0\x5e\x0a\x75\x10\x2e\x6e\xfe\x57\xdf\x75\xfa\xb4\x84\x7f\xaf\x4c\xf8\xeb\x5f\x06\xf0\xdf\x0f\x31\x4d\x11\x00\x5b\x15\x02\x4a\x38\x12\xc7\xa9\x0f\x45\xaa\x54\x87\x0a\x4a\x68\xf5\x5f\x94\x69\xfb\x10\x06\x19\xe6\xb7\xb4\x78\x35\x2e\xbc\xb9\xbd\x16\x4a\xf9\x69\x34\x91\x0e\x34\xe5\x07\x25\x98\x59\xde\xa7\x8c\x54\xb5\x08\xac\xc6\xc1\x38\x2f\x7c\x31\x01\x07\x38\x8a\x02\x04\x48\x47\xf3\x32\xdb\xc5\x02\x56\x17\x7b\x95\x07\x63\x43\xf4\x5d\x10\x75\x6d\x7b\x13\xde\x7a\x36\x7b\xb1\xc3\x19\x6c\x08\x66\xc3\xad\x86\x2d\xc2\xc6\x28\xbd\x99\x5f\xe7\xe0\x3f\x29\xf4\x8d\x92\x99\xec\x19\x67\xb1\x84\xbf\x4b\xe9\xd0\xfb\xbf\x5d\xa5\xe4\x25\x3e\x92\xc6\x51\xf2\x20\x4d\x0e\x82\xb3\xaa\x42\x66\x2a\x59\xdd\x6b\x88\x2a\xd1\x5f\x28\xe8\x3e\x2e\x99\xd4\x13\xec\xb5\x6a\x56\xd3\x4b\x4b\x92\x90\x1f\xce\xff\xf1\x7a\x72\x1e\xe9\xf2\xd0\x82\x15\xa9\xef\x1b\xaf\x28\xe6\xa0\x37\xea\x4b\x8f\xb0\xba\x4f\xa4\x89\x7a\xcf\x32\xdd\x0b\x3f\x2c\x25\x40\x8d\x01\xc6\x84\xf9\xd5\xf3\x90\xe7\x53\x3c\xc3\xda\x81\x7b\xf2\x93\x94\x1c\xa9\xec\x9a\x81\x52\x0d\x79\x3f\x5f\xa5\x1a\x65\xe2\x19\x94\x32\x27\x53\x42\x19\x1d\x8f\x30\x13\x1e\x3b\x3c\xd5\x72\x59\xeb\xe3\xc3\x7a\x79\x5e\xe6\x0f\x73\x2f\x38\xb6\xd0\xa2\x54\x74\x72\x66\xb9\x7b\xc8\xb6\x59\x98\xe6\x2b\xb8\xce\x97\x89\x29\xdf\x83\x27\x3b\xa4\xcb\xc9\x70\x8d\x1a\x62\x14\x9a\x22\xd7\x8b\x8b\x54\x80\x78\x1a\x47\x46\xdc\xa4\xb4\xa6\x37\x03\xec\x4d\xfe\xb1\xba\xcf\xb5\xde\x2e\xe1\xc3\x94\x0f\xde\x48\xf7\x90\xe9\x23\xfa\xe7\xd0\xf7\x3a\xcc\x95\x84\xf7\xef\xa1\xc4\x7a\x43\x42\x59\xdd\x67\xe5\x8f\x5e\x10\x67\xaa\xed\x7d\xa0\x21\xe6\xab\xa0\x68\x11\x44\x1c\x17\xba\xd9\xa0\xa7\x51\x58\xdd\xbf\x99\x44\x7b\xae\xa6\xbf\x7e\xd0\x8d\x34\x53\x3e\xf3\xf0\x53\xad\xc8\x17\xb9\xec\xff\x29\x50\x3e\xe9\x82\xf8\x3c\x36\x42\xf0\x2f\xe1\x76\x3d\x4b\x99\x7a\x20\xa4\x2c\x5b\x70\x16\xba\x08\x5f\x76\x24\x81\xdf\x30\x3f\xb1\x05\xb7\x2f\x17\xca\x03\x33\xb8\x64\x3a\xc6\x6b\xdb\xb6\x7c\xd7\xca\x1b\xba\x7e\xab\x95\xdf\x43\x63\xdd\xf0\x71\x31\xc9\xe5\x85\xfa\xc7\x8c\xff\x20\x84\xfa\x6c\x36\xbe\x9b\x6e\xb9\x68\x87\x61\x75\xef\x6f\x6e\x97\xf0\x31\x6a\xeb\xd3\xc5\x92\xad\x75\xce\x1e\x1f\x1f\xd6\x85\xb5\xdd\x2e\xe1\x4f\x79\x58\xaf\x1b\x46\x2a\x28\x0d\x80\xa9\x1d\x5d\x27\x26\x9f\x1f\x85\x4d\x6c\x31\xdf\xb4\x65\xfe\xfa\x18\xee\x06\xe4\x34\xd9\x5f\x5e\x14\xc6\x48\xc7\x72\x98\xd2\xd9\x20\x92\xd9\x35\xba\x4a\xd9\xdc\x2b\x7e\x27\x1c\xdf\x50\xf7\x56\xcb\xd1\x95\x53\x3e\x57\x24\x92\xef\x0d\x74\x80\x48\x5a\xbb\x84\x0f\xdf\x22\x3f\x4b\xda\xfb\x5c\xfd\x5f\xd8\xc4\xf7\x06\x24\xce\xc7\xe5\x40\x8c\xb9\x78\x90\x03\x39\x25\xd0\xb0\x29\x44\x17\x49\x1b\x95\x04\xe1\x9c\x38\xbd\x4e\x8d\x25\x60\x54\x22\x38\x0c\xbd\x33\x69\x62\x9d\x38\x65\x7b\xa2\x77\x71\xa6\x1c\xe6\x9e\xd4\xd7\x7b\xf2\x82\xae\xcb\x60\x4f\x39\x4a\x52\x37\xca\xf1\x2b\x29\xde\xc4\xcb\x2f\xe1\x2b\x71\x16\x0b\xf0\x76\x3c\xbf\x63\x73\xf8\xf3\xc1\xa1\x90\x20\x45\x10\x4c\x11\xdf\xc1\x5b\x0c\x7b\x2b\xd3\xa9\xa3\xc2\xcf\x4c\xd8\xb9\xc7\x3b\xbc\x62\xf1\x1e\x75\x33\x1f\x54\xf8\x51\xc9\x4f\xf0\xcb\x7b\x30\x4a\x2f\xe1\x0d\x61\x48\x8b\xf1\xe2\xc6\xf7\xde\xcb\xaa\x7e\x79\xad\x8f\xd7\x0e\x45\xc0\xdf\xdb\x2e\x9c\x8a\x0f\x86\xf8\x94\x5b\x86\xf4\xea\xd2\xc9\x21\x7e\x4e\x45\xce\xcf\x25\x5d\x12\x79\x62\x0a\xed\x91\xe9\xf7\x55\x49\xd2\xd5\xd8\xd4\xe0\x0f\x45\x2a\x85\x0b\x5e\x9e\x86\xe9\x24\xcc\xd2\x98\x6b\x34\xbb\xb0\xa7\x63\xf1\xcf\xe9\x34\x8c\x31\x64\x39\x8a\xf9\x18\xe4\xca\x0a\xa2\x32\x35\xcf\xd5\xff\x02\x00\x00\xff\xff\x33\x4d\x81\x27\xe0\x12\x00\x00"

func nonfungibletokenCdcBytes() ([]byte, error) {
	return bindataRead(
		_nonfungibletokenCdc,
		"NonFungibleToken.cdc",
	)
}

func nonfungibletokenCdc() (*asset, error) {
	bytes, err := nonfungibletokenCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NonFungibleToken.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xdb, 0x61, 0xca, 0x9d, 0xaa, 0x66, 0x36, 0xdf, 0xbc, 0x51, 0xdb, 0x7b, 0x51, 0xd8, 0x3d, 0x6f, 0x4e, 0x9c, 0x8e, 0x50, 0x28, 0x7c, 0x18, 0x1d, 0x2, 0xb2, 0xc2, 0x2b, 0x26, 0xa1, 0xfe, 0x2d}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"ExampleNFT.cdc":       examplenftCdc,
	"MetadataViews.cdc":    metadataviewsCdc,
	"NonFungibleToken.cdc": nonfungibletokenCdc,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"ExampleNFT.cdc": {examplenftCdc, map[string]*bintree{}},
	"MetadataViews.cdc": {metadataviewsCdc, map[string]*bintree{}},
	"NonFungibleToken.cdc": {nonfungibletokenCdc, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
