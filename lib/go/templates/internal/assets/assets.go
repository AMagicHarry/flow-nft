// Code generated by go-bindata. DO NOT EDIT.
// sources:
// ../../../scripts/borrow_nft.cdc (504B)
// ../../../scripts/get_collection_ids.cdc (476B)
// ../../../scripts/get_collection_length.cdc (383B)
// ../../../scripts/get_contract_storage_path.cdc (473B)
// ../../../scripts/get_nft_metadata.cdc (5.628kB)
// ../../../scripts/get_nft_view.cdc (4.408kB)
// ../../../scripts/get_total_supply.cdc (82B)
// ../../../transactions/NFTForwarding/change_forwarder_recipient.cdc (1.365kB)
// ../../../transactions/NFTForwarding/create_forwarder.cdc (2.575kB)
// ../../../transactions/NFTForwarding/transfer_nft_to_receiver.cdc (1.577kB)
// ../../../transactions/NFTForwarding/unlink_forwarder_link_collection.cdc (1.111kB)
// ../../../transactions/destroy_nft.cdc (880B)
// ../../../transactions/mint_nft.cdc (3.024kB)
// ../../../transactions/setup_account.cdc (915B)
// ../../../transactions/setup_account_from_nft_reference.cdc (1.407kB)
// ../../../transactions/setup_account_to_receive_royalty.cdc (1.413kB)
// ../../../transactions/transfer_nft.cdc (1.567kB)
// ../../../transactions/unlink_collection.cdc (545B)

package assets

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	clErr := gz.Close()
	if clErr != nil {
		return nil, clErr
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _scriptsBorrow_nftCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x91\xc1\x4b\xc3\x30\x14\xc6\xef\xf9\x2b\x3e\x7a\x90\x16\x64\xbd\x88\x87\xe1\x1c\x73\x58\xf0\x52\x86\xd4\xb3\xa4\xe9\xeb\xf6\x30\x4d\x42\x9a\xa2\x32\xf6\xbf\xcb\xda\xb5\x9d\x9a\x53\xc2\xcb\x0f\xbe\xef\xf7\xd2\x14\xc5\x81\x5b\xb4\xca\xb3\x0b\x28\xad\xf7\xf6\xb3\x85\x34\xc8\xb3\x02\xb5\xb7\x0d\x24\x94\xd5\x9a\x54\x60\x6b\x84\xe0\xc6\x59\x1f\x10\xe5\xd6\x64\x9d\xd9\x73\xa9\xa9\xb0\x1f\x64\xa2\x69\xf2\xfc\x25\x1b\xa7\x29\xcf\x8a\x48\x08\xd7\x95\xa8\x3b\x83\x46\xb2\x89\x65\x55\x79\x6a\xdb\x25\x36\xc3\xe5\x16\x5c\x2d\xf1\xf6\x62\xc2\xfd\x5d\x82\xa3\x00\x00\x4d\x01\x52\x29\xdb\x99\x80\x15\xf6\x14\x36\xc3\x63\x84\x13\x31\x7d\x9b\x63\xbd\x52\x8d\xd5\x88\xf5\xf3\xf3\x59\xec\x29\x6c\xa5\x93\x25\x6b\x0e\xdf\xf1\x9c\x6b\xb1\x9d\xc8\x5d\x57\x6a\x56\x3b\x19\x0e\xc9\xcc\x0d\x16\x1e\x6e\x8e\x7f\x4b\xfe\x03\x4f\x8f\xf1\xcc\xad\xd7\x70\xd2\xb0\x8a\xa3\xad\xed\x74\x05\x63\x47\xa1\x50\x53\x8c\xc1\xa9\xeb\xe9\xab\x06\xd1\xa5\x57\x9a\xe2\x69\x40\x24\x3c\xd5\xe4\xc9\x28\x42\xb0\x90\x68\x1d\x29\xae\x59\xf5\x9b\x61\x83\x70\xa0\xeb\xcd\x8c\x56\xde\xb1\xfa\x6d\xe6\x52\x27\xcf\x8a\xf8\xac\x9b\xab\x44\x9c\xc4\x4f\x00\x00\x00\xff\xff\xf8\x9d\x3c\x10\xf8\x01\x00\x00"

func scriptsBorrow_nftCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsBorrow_nftCdc,
		"scripts/borrow_nft.cdc",
	)
}

func scriptsBorrow_nftCdc() (*asset, error) {
	bytes, err := scriptsBorrow_nftCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/borrow_nft.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb, 0x53, 0x48, 0x45, 0xf2, 0x69, 0x3a, 0x26, 0x19, 0xa4, 0x40, 0xf, 0x19, 0xc4, 0x82, 0x5e, 0xc9, 0x80, 0x1e, 0x63, 0xda, 0x16, 0xa6, 0x9e, 0x6f, 0x42, 0x2c, 0x49, 0xe4, 0xe, 0xf9, 0x49}}
	return a, nil
}

var _scriptsGet_collection_idsCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\x41\x6b\x3a\x31\x10\xc5\xef\xf9\x14\x8f\x3d\xfc\xff\xbb\x50\xf4\x52\x7a\x90\x5a\x11\xad\xe0\x45\xa4\xb5\xa7\xd2\x43\x36\x9b\xd5\xd0\xec\x4c\xc8\x4e\x68\x8b\xf8\xdd\x8b\x5a\x5d\x2b\xcd\x69\xc2\xbc\xf7\xe6\xfd\xfa\xfd\x3e\x9e\x4d\x74\x41\x20\x8c\xb5\x15\x2c\x66\x2b\xcc\xa7\x2d\x1c\x41\x13\xb4\x31\x9c\x48\xfe\xb7\x30\xec\xbd\x35\xe2\x98\x94\x72\x4d\xe0\x28\xc8\x16\x4c\xb3\x44\x6b\x57\x7a\xbb\xe2\x77\x4b\xd9\x79\xf3\xf8\xa9\x9b\xe0\xed\x62\xb6\xca\x94\x0a\xa9\x44\x9d\x08\x8d\x76\x94\xeb\xaa\x8a\xb6\x6d\x07\x18\x1f\x87\x9b\x8b\xe4\x65\x2a\xbd\x33\x4b\x2d\x9b\x01\xba\xb9\x18\xe0\xf5\x65\x4e\x72\x77\xfb\x86\xad\x02\x00\x6f\xe5\xd4\x0c\xc3\x7d\xeb\xf1\xf1\x73\x0a\x2f\xd4\x59\xd6\x85\x3f\xd9\x1a\xc3\x93\xed\xb0\xdf\xbf\xde\xda\xca\x44\x07\x5d\x3a\xef\xe4\x2b\xff\xab\x4b\xd1\x89\x4b\x8e\x91\x3f\xee\xff\x6d\xaf\xc9\x7b\x93\x2b\xe3\xee\x21\xef\x7c\xa3\x11\x82\x26\x67\xf2\x6c\xc2\xc9\x57\x20\x16\x1c\xa3\x60\xce\xb7\x51\x47\x6e\x10\x0e\xee\x8b\xda\xd0\x82\x36\x58\xe3\x6a\x67\x2b\x04\x2d\x9b\xec\x07\x2f\x5a\x49\x91\x7e\x13\xee\x71\xe6\xd3\x36\x2f\xd4\x4e\x7d\x07\x00\x00\xff\xff\x7a\x0b\x3d\x7b\xdc\x01\x00\x00"

func scriptsGet_collection_idsCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_collection_idsCdc,
		"scripts/get_collection_ids.cdc",
	)
}

func scriptsGet_collection_idsCdc() (*asset, error) {
	bytes, err := scriptsGet_collection_idsCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_collection_ids.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd6, 0xd, 0x34, 0xed, 0xbf, 0x90, 0x7a, 0xb2, 0xf5, 0x12, 0x9c, 0x86, 0xb0, 0x8a, 0x3d, 0x77, 0x0, 0x50, 0xfd, 0x6c, 0xe7, 0x2a, 0x13, 0x2, 0x4e, 0xdb, 0x84, 0x9f, 0xcc, 0xd7, 0x9f, 0x88}}
	return a, nil
}

var _scriptsGet_collection_lengthCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8f\x4d\x6a\xc3\x30\x10\x85\xf7\x3a\xc5\xe0\x45\x91\x37\x3e\x40\x68\x1a\x82\xdb\x40\x36\x21\x94\x5c\x40\x92\xc7\x8e\xa8\x3c\x23\xe4\x11\x6d\x09\xb9\x7b\x49\x5c\xdb\xfd\xd1\x4a\xc3\x9b\x6f\x78\x9f\xef\x23\x27\x81\xe2\xc0\xb4\xcb\xd4\x79\x1b\xf0\xc4\x6f\x48\x85\x9a\x92\x97\x0f\xd3\xc7\x80\x87\xdd\xa9\x50\x2a\x66\x0b\x6d\x26\xe8\x8d\x27\x6d\x9a\x26\xe1\x30\xac\x60\x3b\x7e\xca\x15\xec\x49\xe0\xa2\x00\x00\x02\x0a\x18\xe7\x38\x93\xc0\x1a\x3a\x94\xed\x38\x4c\x54\xa9\xe6\x35\xc7\x21\xa0\x13\xcf\xf4\x8a\x2d\xac\x27\xec\x9e\xdf\x5e\xd5\xa1\xd4\x26\x1a\xeb\x83\x97\x4f\xbd\x14\xaa\xea\x99\x3c\x66\x1b\xbc\x3b\x1a\x39\x97\x0b\x67\x39\x25\x7e\x7f\x7c\xb8\xfc\xb5\xfb\x07\x5e\x9f\xf4\xc2\x6d\x36\x10\x0d\x79\xa7\x8b\x9a\x73\x68\x80\x58\x60\x3c\x05\x6e\xae\x01\x6d\xe2\x1e\xe2\x9d\xfe\x61\x50\x7c\x7b\x25\x94\x9c\xe8\xb7\xda\xcd\x63\xff\x3c\xe8\xb2\x0a\x48\x9d\x9c\xd5\x55\x7d\x05\x00\x00\xff\xff\xda\x39\x57\xb4\x7f\x01\x00\x00"

func scriptsGet_collection_lengthCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_collection_lengthCdc,
		"scripts/get_collection_length.cdc",
	)
}

func scriptsGet_collection_lengthCdc() (*asset, error) {
	bytes, err := scriptsGet_collection_lengthCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_collection_length.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x1c, 0x52, 0x77, 0xd, 0xad, 0xca, 0xf5, 0xc4, 0xa6, 0xfb, 0xb9, 0xa, 0xdf, 0x35, 0xdf, 0x86, 0x1d, 0x30, 0x49, 0xe4, 0x16, 0xde, 0x67, 0x65, 0x88, 0xcb, 0x33, 0xaf, 0xa6, 0xc1, 0x8e, 0xc9}}
	return a, nil
}

var _scriptsGet_contract_storage_pathCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x50\x4d\x6a\xf3\x30\x10\xdd\xeb\x14\x13\x2f\x3e\x6c\xf8\xf0\x01\x42\x9c\x10\x52\xba\x6b\x29\x6d\xe8\x7e\x2c\x4d\x5c\x81\x2c\x99\xd1\x38\xa6\x94\xdc\xbd\xc8\x76\x9c\x94\x2e\x3a\x0b\x21\x3d\xcd\xfb\xe1\xd9\xb6\x0b\x2c\x90\x3d\x91\xa0\x41\xc1\x77\x4b\x43\xcc\xd4\x15\x4e\xcf\x57\x8a\xc1\x9d\x89\x33\xa5\xba\xbe\x86\x53\xef\xa1\x45\xeb\x73\x34\x86\xd7\xb0\x37\x86\x29\xc6\xff\xe0\xb1\xa5\x35\xbc\x09\x5b\xdf\x14\xe9\x12\x18\x1b\x7a\x41\xf9\xd8\xc1\x97\x02\x00\x70\x24\x20\x50\xc1\xf1\xb3\xa3\xcd\x0f\xc3\xf2\xf9\xf1\x78\x08\xce\x91\x16\x1b\xfc\x03\x0a\x6e\xf3\x62\xe1\xd4\x81\x39\x0c\x64\x0e\xc1\x0b\xa3\x4e\x12\x0d\xc9\x5e\xeb\xd0\x7b\x19\x63\x14\xa5\x9e\xff\x62\x39\x6d\x6f\xfe\xdd\x47\xdf\xe6\x53\xba\x74\x4e\xba\x69\x76\x3b\xe8\xd0\x5b\x9d\x67\x57\x36\xe8\xd0\x3b\x03\x3e\x08\xd4\xb4\xf8\x66\x85\x5a\xb2\x9c\x2d\x0d\x50\xfd\x8a\x54\xf2\xe4\x94\x4c\x73\x99\x2c\xec\x69\xde\xae\xc0\x5b\x37\x77\x90\x86\x49\x7a\xf6\x09\x1c\xa1\xcb\x4d\x5d\x1b\xa8\x46\xd2\x0a\x30\xae\xe0\x8f\x8e\xd4\x9d\x98\x36\x65\xbc\x35\xae\x2e\xea\x3b\x00\x00\xff\xff\xef\x1d\x1f\x9f\xd9\x01\x00\x00"

func scriptsGet_contract_storage_pathCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_contract_storage_pathCdc,
		"scripts/get_contract_storage_path.cdc",
	)
}

func scriptsGet_contract_storage_pathCdc() (*asset, error) {
	bytes, err := scriptsGet_contract_storage_pathCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_contract_storage_path.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x9e, 0x91, 0x6d, 0x87, 0xd8, 0xce, 0xe8, 0x29, 0x90, 0xc8, 0x4, 0x3d, 0x2f, 0x54, 0xaf, 0x1, 0x86, 0x2e, 0x29, 0x49, 0xd1, 0x6f, 0x4e, 0x22, 0x6d, 0x99, 0x3f, 0x23, 0xcd, 0x74, 0x8b, 0x32}}
	return a, nil
}

var _scriptsGet_nft_metadataCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x58\xc1\x6e\xe3\x36\x10\xbd\xeb\x2b\x26\x39\x14\x36\xd0\x2a\x3d\x14\x3d\x18\x55\x83\x6d\x92\x2d\x16\xc8\x1a\x8b\xc4\xdb\x4b\x90\x03\x2d\x8d\x1c\x22\x32\xa5\x92\x54\xb2\x46\x90\x7f\x2f\x48\x4a\x22\x29\x92\x76\x9a\x8b\xa5\x99\x37\x33\xa4\x38\x8f\xe4\xcb\xc5\xc5\x05\x6c\x9e\xa8\x00\x51\x72\xda\x49\xd8\xa1\x14\x40\x9a\x06\xe4\x13\xc2\x0b\xc5\xd7\x5f\xb6\x44\x60\x05\x7b\x94\xa4\x22\x92\x00\x11\xa2\x2d\x29\x91\x58\xc1\x2b\x95\x4f\x1a\x27\x3a\x2c\x69\x4d\xb1\x82\xf5\xe7\x4d\xa6\x52\x12\x56\x01\x47\xd9\x73\x26\x80\x4a\x20\x02\x08\x08\xca\x76\x0d\x82\x90\xbc\x2f\x65\x96\xd1\x7d\xd7\x72\x09\xe7\x37\x3f\xc8\xbe\x6b\x70\xfd\x79\x73\x3e\xd9\xbe\x0e\xd5\xfe\xa1\xf8\x2a\xce\xb3\xac\xeb\xb7\x43\x9c\xaa\x00\x6f\x19\x00\x80\x32\x36\x28\x81\x91\x3d\xae\xe0\x5e\x72\xca\x76\x9e\xa3\x42\x33\x29\xda\xb2\xa8\x5f\x3e\xf5\xfb\x2d\x23\xb4\x89\x7a\xdb\x57\x86\x7c\x05\x9f\xaa\x8a\xa3\x10\x7e\xe0\xa1\x8b\x57\xe4\xed\x81\x34\x92\xa2\x58\xc1\x83\x37\x87\xfc\x4e\x7b\x0e\x8f\x1e\x1c\x7f\x48\xe4\x8c\x34\xdf\xef\x6e\xa3\xe9\x04\x72\x4a\x9a\x75\xbf\xdf\xaa\x91\x7c\xff\xc2\xe4\xef\xbf\x79\x80\xb2\x6d\x1a\x2c\xd5\x04\xbf\xf5\xdb\x86\x96\xdf\x88\x7c\x5a\x81\x7d\x4e\x80\xef\x65\xcb\xc9\x0e\x0d\xda\x79\x49\xe5\xe6\xed\x0b\xad\x90\x0f\xd9\x39\x7d\x21\xf2\x28\x5e\xd7\x8f\xce\x68\x0e\xba\xa5\xec\x19\xab\x4d\xea\x7b\x86\x63\xf8\x70\xc0\x3a\xd5\x15\x16\x72\x7d\xa2\x3f\x2c\xf2\xe6\xc4\x42\x39\x9f\xf6\xdf\x9e\x70\xfc\xb2\x27\xbb\x53\xd5\xff\x22\x8c\x21\xff\x08\xf2\x5e\x11\xae\x11\x2b\x78\x33\xb0\x11\xfe\xee\x37\x53\x45\xcd\x4c\xfc\xc6\xbb\x31\x66\xbf\x7f\x39\xa1\x52\xcc\x91\x1b\x6d\xf5\x80\x7b\xac\x28\x09\x80\x5f\xb5\xf5\xd2\x43\x36\xb4\x44\x26\x70\x0e\xbd\x35\xe6\xcb\x4c\x83\x29\xa3\x72\xa1\x9f\xd4\x9f\xcb\xdb\x9f\x27\x6b\x84\xb4\xd6\x19\x30\xd6\xba\x7c\xba\x5a\x3b\xab\xa5\xdb\x2d\xd6\x71\x9a\xab\x16\x1b\x21\xaa\x75\xc6\x58\x6a\xbd\xa7\x28\x1a\x43\xa6\xf8\x19\xcd\x9a\x22\x67\x7a\x08\xe1\x14\x4e\xd3\xf2\x58\xe9\x8f\xa1\xd7\xd1\xe5\x3e\xca\xc6\x18\x2c\x42\xc5\xe8\x27\x0c\x79\x18\x83\x45\x48\x18\xcd\x96\x62\xa0\xd3\x22\x47\xe9\xe7\xb4\xf0\x11\xee\x59\xd4\x40\xbc\x28\xef\x2c\x6a\x24\x5d\x82\x73\x0a\xb2\x1c\x0e\x4b\xd3\xa8\x4d\x9d\x2b\xd6\x41\xa1\xc9\xe7\x3b\x1c\xe2\x41\xe1\xd2\xd0\x87\x4d\x14\x84\xc2\xd2\xd1\x87\x68\x2a\x42\x61\x28\x39\x8b\x3e\x74\xba\xba\x21\xa5\xef\x9b\x08\x09\x85\x25\xa7\x0f\x71\x78\x08\x85\xcb\x4a\x1f\xe6\x32\x12\x0a\x8f\xa0\x3e\x30\x46\x4e\x28\xa2\x9c\x4d\x05\x3a\xf4\xf4\x22\xe7\xc7\x6a\xac\xa6\x43\x5d\xbf\xaa\xe3\x38\x3e\xe0\xc8\x60\x8f\x07\x58\xae\x46\x42\xad\xf3\xd4\x90\x53\x69\x02\x77\x2a\xd1\xda\xb4\xa1\x6f\x48\x81\xaf\xbd\xd6\x8c\xda\x53\xa1\x37\x5e\xc7\x44\xed\xc9\x95\xb5\x5b\x88\xbf\xb2\xd6\x9e\x0a\x75\xb6\x15\x2f\xd4\xb1\x27\xab\x9a\xad\xc6\xaf\x68\x6c\x33\x2e\x98\x9d\x45\xf1\xc0\x39\xe2\x2d\xd3\xf4\x8e\xa2\x48\x6a\x8f\xf5\xc9\x69\xb6\x97\xc2\xfc\xf8\xae\x61\x4f\x29\x86\x5f\xed\x7c\xcf\xde\xcd\x1d\xbc\xee\x19\xec\x09\x65\x0b\x62\x8e\x59\x7b\xde\x02\xad\xc6\xb3\x6f\xb9\x72\x2e\xe9\xea\x6e\x40\xca\xb2\xed\x99\x84\x42\xa9\x8b\x4f\xe6\x65\xcc\xb0\xcc\x26\x98\x9d\x2f\x14\x63\xcc\x34\xb6\x7c\x87\xf2\x8a\x74\x64\x4b\x1b\x2a\x0f\x0b\x2b\x1a\xf2\xab\x08\x59\x97\x36\x6e\xdb\x72\xde\xbe\xfe\xf1\xd3\x9b\x13\x62\x1f\xe7\xc1\xef\x7f\x2e\x6c\xec\xe5\x25\x74\x84\xd1\x72\x71\x7e\xd5\xf6\x4d\x05\xac\x95\x60\xd2\x01\x01\x8e\x35\x72\x64\x25\x82\x6c\xb5\x08\xb2\xc3\x3f\x77\x26\xc5\x6a\xe9\x2d\xe5\x30\x1e\x3b\x82\x85\xfa\x70\xb4\x5a\x9e\x99\x98\x8b\x0b\xf8\x5b\x4b\x13\x84\x2d\x11\xb4\x84\x8a\x8a\xae\x21\x07\xa0\xac\x6e\xf9\x9e\xe8\xcf\x53\xb7\x1c\xa4\x12\x6d\x4a\x6e\x8d\x95\x46\x60\x31\x3b\x5a\x76\x28\xaf\x8d\x6b\xc1\x6a\x19\xa9\x63\xf6\xda\x58\x05\x84\x1d\x7d\x41\xe6\x95\x19\xd0\x2a\x77\xac\xd4\xdd\xb8\x71\xbb\xc5\x66\x5a\x27\x16\xe7\xf0\x71\x1e\xe9\xf0\x3d\x3d\x45\x6f\x2d\xfd\xf9\x3a\x4b\x61\x21\xa9\xf1\xfb\x79\x88\x24\xf3\xd1\xb0\x5a\x0e\x67\x7a\x2a\xc5\xe0\x16\xb3\xf2\xee\x29\x94\x0a\xbd\xd7\x98\x79\x49\xff\x6a\x6b\x8e\x4f\x73\xc8\x9e\xe5\x03\x8d\xbc\x59\x6e\xa6\x43\x56\xe5\x54\x6f\x8b\x28\xcd\x92\xb7\x1a\x28\xe0\xcd\x88\x0b\xd5\x07\xcf\xa8\x7a\x23\x5c\x86\x5c\x98\xf8\xfc\x19\x0f\xc2\xb9\x66\x04\x05\x1e\x9e\xf1\xf0\xe8\x6f\xdc\x7e\x06\x0d\x38\xcb\x7b\xde\x0c\xdb\xcd\x34\xd8\x69\x17\x0b\x3e\x95\xb9\x31\xcd\x3f\xd5\xb0\xb1\x05\x68\x73\x75\xd2\xe8\x09\x3b\xee\x74\x01\x78\xb8\x40\x19\xb4\x86\x9b\x7f\x65\x28\x1e\xcc\xe5\xcb\xc0\x3a\x7d\xad\x4a\x88\x98\x11\xe2\x18\xa3\x8a\x66\xc4\x4d\xa6\xbc\xe7\x74\xb1\x0c\x24\x8e\xfe\x89\x08\x9c\xe1\x21\xa7\x15\x32\x49\x6b\xea\x82\x1c\xb1\xe3\x10\xd8\x27\xec\x32\xa1\x77\x9c\x17\xb5\x44\x29\xe1\x33\xef\xef\x9c\xe9\xc7\x53\x4a\x28\x60\x65\xde\x7d\x5c\x1b\x85\xc1\xe2\xff\xa8\xa5\x48\x6d\xc7\x7f\x4c\x40\xa5\x46\x6d\x8d\xd1\x65\x38\xa6\xb3\x52\x29\x2d\xe6\x54\xca\x88\x1c\x4b\xcf\xf0\xc3\x69\x8d\x6e\x0b\xb9\xeb\x77\x7c\x42\xc7\x85\x61\x51\x16\x24\xe4\x5d\x18\x9d\xec\xc5\x84\xf2\x8b\x6c\x39\xd6\x9d\xd7\xb4\xc1\x39\xc9\x12\xda\x30\x4c\xb4\xb5\xee\x13\x89\xa6\x7d\x36\x30\x45\xe4\xa3\x7f\xbe\xe4\xea\x50\xbe\xa5\x42\x3e\xfc\xfa\x18\x6a\x48\x19\x57\x8d\xe6\x27\x94\x89\xee\x95\x6e\x99\xbd\x67\xff\x05\x00\x00\xff\xff\x6d\xed\x16\xf5\xfc\x15\x00\x00"

func scriptsGet_nft_metadataCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_nft_metadataCdc,
		"scripts/get_nft_metadata.cdc",
	)
}

func scriptsGet_nft_metadataCdc() (*asset, error) {
	bytes, err := scriptsGet_nft_metadataCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_nft_metadata.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x70, 0xab, 0xd7, 0xb8, 0xc4, 0x33, 0x3f, 0xd0, 0xd3, 0xb, 0x82, 0x6e, 0x1b, 0x70, 0x66, 0x11, 0x53, 0xd4, 0x19, 0x57, 0x6c, 0xe2, 0x79, 0xfe, 0x56, 0x5e, 0x41, 0x40, 0x72, 0x4, 0xd4, 0x9c}}
	return a, nil
}

var _scriptsGet_nft_viewCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x56\x4d\x8f\xa3\x38\x10\xbd\xf3\x2b\x2a\x39\xac\x12\xa9\xc5\x69\xb5\x07\xb4\xec\x68\xb6\xa7\x47\x1a\x69\x36\x1a\x75\xf7\xcc\x65\x34\x07\x07\x2a\xe9\x52\x3b\x86\x35\x26\xdd\x28\xca\x7f\x5f\x01\x01\xdb\x60\x03\x9b\x53\x5c\xf5\xea\x03\xfb\x95\xfd\xe8\x94\x67\x52\xc1\xfa\xe1\x9d\x9d\x72\x8e\xbb\xcf\xcf\xeb\xa0\xb3\xfd\x83\x8a\xa5\x4c\xb1\x1f\x84\x6f\xc5\x3a\x08\xf2\x72\x0f\x85\x92\x65\xa2\x60\xf7\xf9\xb9\xb6\xc2\x25\x00\x00\xa8\x1d\x1c\x15\x50\x1a\xc1\xf7\x2f\x42\xfd\xf1\xbb\x65\x2e\x4b\x8f\x43\xb0\x13\x46\xf0\xa4\x24\x89\xa3\xe5\x48\xb1\x48\x24\xe5\x8a\x32\xe1\xf4\xab\x97\xf2\xb4\x17\x8c\xb8\xd3\x2b\xb3\x8a\x71\x45\x58\x44\xf0\xd3\xfa\x86\xf0\xb1\xf1\x54\xbf\x2c\x38\xbe\x2b\x94\x82\xf1\xef\x8f\x5f\x9d\xe9\x92\x8c\x73\x4c\xea\x5e\xbe\x95\x7b\x4e\xc9\x37\xa6\x5e\x22\xd0\xff\x3d\xe0\x27\x95\x49\x76\xc4\x16\x6d\x2c\x7c\xb9\x65\x76\xa6\x14\xe5\x2d\xbb\xa4\x33\x53\x93\xf8\xa6\xfe\xa2\x86\xbf\x92\x78\xc5\xf4\xb9\xca\xdd\x9b\x3d\xee\x61\x71\xc0\xce\x77\x80\x1a\xf2\x69\xe6\x28\x35\xf2\x61\xf1\x39\x3c\xfd\x5b\x32\x89\x5f\x4e\xec\x38\x57\xfd\x6f\x26\x04\xca\x25\xc8\xa7\x2c\x21\xc6\x8b\x08\x2e\x2d\xac\x83\x5f\x6d\xe2\x49\x46\xaa\x88\xc0\xa6\xd5\x73\x63\x0d\x1a\x24\x09\x52\x9b\xe6\x5f\xb3\xea\x89\x7f\xd7\xdb\xcc\x71\xd0\x56\x73\x16\xb4\xd5\x31\x08\xda\x39\x9a\x02\xed\x9a\x1f\x01\x8d\x75\xf0\x5f\x3b\xe7\xc8\xef\x42\xfa\x98\xef\xcc\xea\xa3\xbd\xbf\x85\xf9\x26\xc7\xfc\x9d\x2a\xbd\x0c\xbd\x73\x9e\xcf\x24\xcf\x5d\x30\x07\xc9\x9d\x5b\x38\x66\xb8\x0b\xe6\xa0\xb7\x33\x9b\x8f\xdb\x06\x97\xa6\x88\x5d\x03\xb6\xb7\xbb\xbe\xfe\x15\xc8\x0f\x21\xa5\x10\x03\xa5\xb6\xb1\xe6\x36\xc4\x0d\xc5\x6d\x47\x4d\x6f\x88\x1b\x96\xdb\x0e\x83\xe1\x10\x9b\x7c\xb7\x61\x3d\xd7\x21\xd6\xbc\xb7\x21\x3d\xe7\x21\xd6\xfc\xb7\x21\x06\xd5\x21\x36\x89\x6f\xc3\x5c\xa4\x87\xd8\x39\x0b\xbe\x40\x83\xf6\x56\xe4\xf0\x21\x70\xd5\x34\x46\xc2\xae\x6a\x38\xa6\x1b\x76\x34\x3b\x1d\xa0\x67\xc0\x11\xaa\x9d\x73\x2d\xfb\xd2\x8c\xdc\xbe\x44\xbb\x96\x26\xb6\xc1\x07\xfe\x64\x51\xc7\x69\xf7\x85\x3e\x58\x44\x70\xda\xbd\x27\xab\x47\xd3\x3e\x59\x6d\xf7\x85\x1a\xe3\x6a\x85\x1a\x76\x6f\xd5\x76\x84\xed\x8a\xad\x6d\x30\x28\xcd\xc8\xd6\x53\xa2\x67\xf7\x1a\x5c\x5b\xf5\x76\x28\x05\x9c\x18\x89\x0d\x4b\x53\x89\x45\x11\xc1\xc7\xf6\xcf\x9d\xf1\x52\x6d\xa3\x81\xbc\xab\x1f\x3e\x96\x24\x59\x29\x14\xc4\x70\x44\xf5\xb1\x5d\x74\x59\xb6\x41\x0f\xd3\xcd\x41\xdc\xc5\xf4\xfd\x85\x47\x54\xf7\x2c\x67\x7b\xe2\xa4\xaa\x8d\x96\x9c\xe1\xbd\x63\xb2\xb6\x3a\x6e\x9f\x49\x99\xbd\xfd\xf9\xdb\x65\xf0\x94\x61\x91\xf1\x33\x4a\x1d\x7d\xfd\x6b\xa3\xc3\x3e\x7c\x80\x9c\x09\x4a\x36\xeb\xfb\xac\xe4\x29\x88\x4c\x41\x9b\x09\x18\x48\x3c\xa0\x44\x91\x20\xa8\x0c\xd4\x0b\x1a\x9d\xaf\x8d\xef\x39\x13\xbe\x75\x65\xac\xbd\xbf\xf5\xf4\xc3\xf0\x6f\xea\x2d\xa4\x74\xbb\xd2\xe1\xe2\xa0\x9a\x7d\x8c\x07\xf7\xea\x11\xd5\x6d\x8b\x6f\x41\x77\x76\xa5\xc8\x5a\x3a\xf7\xd7\x7b\xa7\x43\x0c\x97\x56\xb4\x1c\x32\x09\xaf\x58\x01\x89\xae\x11\x73\x78\xa8\xc8\x39\xab\x56\x61\xd1\x26\x0a\x5f\xb1\x2a\x8c\x3b\x7e\x54\xe9\xe7\x2b\x56\xbf\xea\x2b\x7c\x36\x55\x83\x5c\x85\xa5\xe4\x37\xf6\xb5\xfd\x4b\x54\xa5\x14\x1d\xb7\x6c\x8d\xd4\x25\xa5\x74\xa8\x93\x3a\x4f\xbd\x1a\xaa\xa5\xce\x97\x76\x0d\xd4\x66\x8f\x78\x1a\x61\x0d\xaf\x53\x52\x8d\x02\x7a\x5f\x58\x4a\xda\x6c\x9d\x62\xab\x0b\xea\x4d\xab\xfa\xac\x1f\xbb\x95\x19\x65\xc9\xae\x2e\xce\x30\x36\x1b\x38\x27\xc4\x1c\x87\xc1\x14\x5b\x85\xf9\x72\x81\xe6\x4b\x51\xfc\x1f\xe1\xe6\xed\xc3\x40\x4d\x29\xba\xe9\xef\xd0\x03\x1e\x52\x8a\x42\xd1\x81\x50\x2e\x93\x7f\xd3\x89\x35\x72\x2e\xb1\x43\x2b\xce\x7d\xf3\xe2\xe4\x3b\x8b\xcc\x8e\xb9\xb2\x69\xed\xd1\x9c\x13\xf1\x4e\xaa\x7b\x34\xe9\x44\x1a\x83\x9c\x3e\x6e\x5a\xba\x75\xea\xa6\xd0\xb8\xf0\x40\x1c\x87\x23\xe5\x91\xb8\x13\x19\xf7\x1a\x37\x93\xb1\xbf\x39\x47\xa6\xb1\x1c\xee\x0a\xb6\xeb\x55\x0b\xd8\x06\xd7\xe0\xbf\x00\x00\x00\xff\xff\xea\x8b\x58\x02\x38\x11\x00\x00"

func scriptsGet_nft_viewCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_nft_viewCdc,
		"scripts/get_nft_view.cdc",
	)
}

func scriptsGet_nft_viewCdc() (*asset, error) {
	bytes, err := scriptsGet_nft_viewCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_nft_view.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xec, 0x7d, 0x1a, 0xcf, 0x20, 0x2f, 0x7f, 0x72, 0xf6, 0x79, 0xd5, 0xc8, 0x48, 0x8, 0xa0, 0xbd, 0xfa, 0xe0, 0x6f, 0x2a, 0xdd, 0x85, 0xbd, 0xaf, 0xee, 0xfa, 0xc4, 0xe, 0x20, 0x32, 0xcb, 0xec}}
	return a, nil
}

var _scriptsGet_total_supplyCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\xcc\x2d\xc8\x2f\x2a\x51\x50\x72\xad\x48\xcc\x2d\xc8\x49\xf5\x73\x0b\x51\xe2\xe2\x2a\x28\x4d\x52\x48\x2b\xcd\x53\xc8\x4d\xcc\xcc\xd3\xd0\xb4\x52\x08\xf5\xcc\x2b\x31\x33\x51\xa8\xe6\x52\x50\x50\x50\x28\x4a\x2d\x29\x2d\xca\x53\x40\x68\xd0\x2b\xc9\x2f\x49\xcc\x09\x2e\x2d\x28\xc8\xa9\xe4\xaa\xe5\x02\x04\x00\x00\xff\xff\xfa\x63\x9a\x5b\x52\x00\x00\x00"

func scriptsGet_total_supplyCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_total_supplyCdc,
		"scripts/get_total_supply.cdc",
	)
}

func scriptsGet_total_supplyCdc() (*asset, error) {
	bytes, err := scriptsGet_total_supplyCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_total_supply.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x31, 0x3, 0x72, 0x86, 0x9, 0xe, 0x24, 0x19, 0x7a, 0xa4, 0x3e, 0x8d, 0x3, 0xad, 0xd9, 0x2e, 0xf, 0x59, 0x2e, 0xdd, 0xa9, 0xb7, 0x25, 0xa0, 0x36, 0x82, 0x1a, 0x39, 0x27, 0xc4, 0x40, 0x8}}
	return a, nil
}

var _transactionsNftforwardingChange_forwarder_recipientCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\xcb\x6e\xa3\x3c\x14\xde\xf3\x14\x5f\x59\x54\x64\x43\xf6\xa8\x17\xf5\x8f\xfe\xcc\x6a\xa2\x2a\xcd\x0b\x18\x73\x00\x2b\x8e\x8d\x8c\x29\x1d\x55\x79\xf7\x91\xb9\x1a\x26\xca\x68\xbc\x48\x22\xe7\x70\xce\x77\x3b\x6c\xb7\x5b\x9c\x4a\x51\xc3\x1a\xa6\x6a\xc6\xad\xd0\x0a\xa2\x46\x5b\x32\x0b\xa6\xc0\x38\xd7\x8d\xb2\x68\x75\x23\x33\x98\x46\x05\xee\x09\xab\xc1\x4b\xa6\x0a\x82\x2d\x09\x87\xfd\x69\xaf\x4d\xcb\x4c\x46\x06\x86\xb8\xa8\x04\x29\x1b\x04\xe2\x52\x69\x63\x71\xd0\x6a\xdf\xa8\x42\xa4\x92\x4e\xfa\x4c\x0a\xb9\xd1\x17\x84\xeb\xeb\x70\xac\xff\xff\x8b\x5d\x2a\x49\x87\xfd\x69\xa8\x9c\x2f\xa6\x9a\x79\xa4\x50\xc5\xd8\xd0\xbf\x0b\x83\xc0\x63\x14\x29\x6a\x8f\x23\xb0\xb7\x2c\x33\x54\xd7\x09\x86\x1f\x1b\x7c\x07\x01\x00\x38\x66\x47\xca\xc9\x90\xe2\xe4\x38\x4e\xe4\x06\x6e\x47\xaa\x75\x63\x38\x75\xd5\x92\x2c\xf2\x91\xf6\x91\xf2\x04\x8f\x0b\x04\xb1\x2f\xcb\xd4\x7f\xa7\xa5\xa4\x5e\xe5\x96\xd0\x0a\x29\x91\x51\x2d\x0a\xc5\x2c\x81\xd5\x63\x47\xc7\x6a\x56\x72\x1c\xe7\xb3\x98\x1b\x25\xd8\xb1\x8a\xa5\x42\x0a\xfb\xeb\xe9\xf1\x7b\xad\x6b\x3c\x57\xbe\x37\xa9\x14\xfc\xfa\xd2\xd3\xad\x0c\x55\xcc\x50\xe4\xa6\x93\x49\xf0\xd6\xd8\xf2\xad\xb7\xdb\x49\x82\xe1\x6c\xb7\xf8\x4f\x1b\xa3\x5b\x18\x5f\x9b\x95\xe9\x9e\x30\xee\xd4\x24\xf3\xd8\x57\x07\xcf\xe8\xe7\x4c\x25\xee\xc4\x69\xd7\xf9\xe9\x8e\x72\x2f\x91\x73\x37\x59\x3a\x1e\x7f\x58\x6d\x58\x41\xef\xcc\x96\x9b\x45\xc7\xd7\x57\x54\x4c\x09\x1e\x85\xbb\x2e\xb1\x4a\x5b\xa4\x7f\x81\x1f\x6e\x02\x9f\xed\x0f\xb2\x38\x12\x27\xf1\x49\xc6\x93\xb6\x4f\x99\x8b\x84\x59\x25\x69\x5c\x92\x25\xfb\xdb\x66\xe1\x19\x05\xd9\x41\xe6\x5b\xb1\x5c\xd2\x89\x0b\xb2\xff\xea\x6e\x34\xef\xcb\x1f\xff\xf6\x82\xf9\x6c\x7f\xb2\x33\xa1\x6e\x4c\xbf\xca\xeb\x7a\xf0\x99\xbf\xa8\xf1\xc9\xa4\xc8\x90\x52\xae\x0d\xe1\x22\x94\x75\x39\x1d\xb6\x64\x6a\x2a\x72\x3c\xdc\x51\x20\xe6\x25\xf1\x73\xe4\x47\xac\x4b\xe3\xe8\xda\x5d\x00\xce\xce\x0e\xc4\x43\x38\x0b\x75\x0d\xfa\xcf\xee\x8b\xbe\x88\x37\x96\x96\x01\xfe\xe8\x97\x67\xb5\x52\x37\x83\x1a\xf7\x2f\xb6\x09\xf8\xc2\xa3\xe4\x9e\xb5\x9b\x01\xc6\x35\xf8\x1d\x00\x00\xff\xff\x1c\x10\xd4\x05\x55\x05\x00\x00"

func transactionsNftforwardingChange_forwarder_recipientCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsNftforwardingChange_forwarder_recipientCdc,
		"transactions/NFTForwarding/change_forwarder_recipient.cdc",
	)
}

func transactionsNftforwardingChange_forwarder_recipientCdc() (*asset, error) {
	bytes, err := transactionsNftforwardingChange_forwarder_recipientCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/NFTForwarding/change_forwarder_recipient.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa4, 0x40, 0xb3, 0xf3, 0x54, 0x96, 0x3a, 0xa1, 0xac, 0x7b, 0x77, 0xaa, 0xee, 0xf4, 0xa5, 0x2, 0xb4, 0xf8, 0x81, 0x97, 0x38, 0x8c, 0xd5, 0x57, 0x7f, 0xf5, 0x79, 0x83, 0x20, 0xdc, 0x22, 0x65}}
	return a, nil
}

var _transactionsNftforwardingCreate_forwarderCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x96\xcd\x6e\xea\x3a\x10\xc7\xf7\x79\x8a\x81\x45\x6f\x90\xce\x49\xf6\x88\x22\x55\xe8\x72\x57\x07\x55\x14\xdd\xfd\xe0\x4c\x12\x8b\x60\x47\xb6\x43\x5a\x55\xbc\xfb\x91\xf3\xed\x84\x96\x56\xaa\x57\xd4\x9d\xb1\x67\xfe\xf3\x9b\x71\xc2\x30\x84\x43\xca\x35\x18\x85\x42\x23\x33\x5c\x0a\xe0\x1a\xca\x14\x0d\xa0\x00\x64\x4c\x16\xc2\x40\x29\x8b\x2c\x02\x55\x08\xcf\x7a\x18\x09\x9a\x0c\x70\xa3\x29\x8b\xa1\xc8\xed\x46\x2c\x55\x89\x2a\x82\xdd\xf6\xa0\xed\xdf\x08\x11\x69\x9e\x08\x34\x14\x55\x4e\x8a\x18\xcf\x39\x09\xf3\x8f\x06\x26\xb3\x8c\xaa\xcb\x3c\x8f\x9f\x73\xa9\x0c\xec\xa4\xd8\x16\x22\xe1\xc7\x8c\x0e\xf2\x44\x02\x62\x25\xcf\x30\x1f\x6f\xcf\x5b\xfb\x3f\x64\x30\x42\x83\xff\x73\x2a\x75\x63\xec\xec\x75\x96\xff\xbe\xe2\x39\xcf\x68\xb7\x3d\x34\x66\xfd\x46\x67\xb3\xdb\x1e\xb6\x75\x02\x5c\x24\xed\xd5\xc3\xbd\xb9\xe7\x0d\x24\xf2\xbb\x64\x9e\xa2\x48\x91\xd6\x4b\x68\x7e\x2c\xe0\xdd\xf3\x00\x00\x72\x45\x39\x2a\xf2\xad\x06\xa4\x96\xf0\x54\x98\xf4\xa9\x56\xd3\xda\x40\xb3\xc2\x10\x36\x29\x8a\x84\x7a\x7d\x00\x45\x04\x8a\x4c\xa1\x04\xf0\x18\x4c\x4a\x5d\x19\x30\x53\x84\xd1\x1b\xa4\xa8\x6d\x75\xfa\x08\x49\x75\x27\xf2\x18\xea\x3b\x83\xa3\x54\x4a\x96\xab\x07\x27\x91\x60\xe8\xb4\xf6\x6d\xaa\x4b\x37\xfd\xe0\xc5\x48\x85\x09\x3d\xa3\x49\x17\x30\x7b\x04\xc1\xb3\x36\xab\x76\x65\x64\xda\x8a\x93\xda\x53\x0c\x8f\x3f\x79\xe9\x6c\x72\x97\xa0\x72\xdf\xea\xb3\xe9\xe0\x81\x47\x48\xc8\x34\xaa\x4e\x6a\xb2\x70\x4e\xb1\x2b\x48\xc8\x6c\x30\xc7\x23\xcf\xb8\x79\x5b\x3d\xbc\x8f\xe9\x0a\xfa\xb3\x9f\x8b\x63\xc6\xd9\x75\xed\xf7\xb4\x4c\xfe\x5b\x05\xeb\x0a\x13\x86\xf0\x07\x4f\x04\xba\x50\x54\x95\x6e\xec\x03\xac\x0b\xc0\x36\xda\x05\x33\x1e\xc1\x91\x62\xa9\x08\xce\x5c\x18\xcb\x9f\xf5\xdb\x6d\x0f\xce\xc1\x3c\x86\xd9\x6d\x15\x02\x96\x12\x3b\xf9\x43\xaa\xda\x95\xa3\xe0\xcc\x9f\xef\x07\xad\x77\x27\x1e\x21\x4d\x1d\xd3\x6c\xee\xea\x77\x9d\xe4\xf9\x52\xd7\xa5\x07\xd7\x31\x18\xd2\x11\xb0\x0a\xf1\x2e\x0c\x7f\x98\xc8\xf2\x83\xe2\xba\xd7\xd7\xfd\xe0\xdd\x88\x26\x0c\xe1\x3f\x32\xb0\x27\x46\xfc\x42\x0a\xfa\x02\xd7\x7d\x6c\xc5\x1c\xa3\xd1\x36\x94\x37\x64\x4c\x4d\x63\xd8\x60\xfe\x1d\xc6\x46\x7c\x4d\xca\xf1\x15\xe0\x1c\xa7\xb5\x3f\x39\xe3\x0e\x8e\x8e\xfd\xc2\x51\xe9\xe7\xb9\xb4\x4c\xde\x56\xad\x67\xb2\x65\xf0\x1b\xdc\x8d\xaa\xbb\x51\x84\x86\x00\x2b\xd8\x86\x83\x04\x14\x69\x59\x28\x46\x4e\x19\x3b\xf0\x60\xf5\x7b\x34\x63\x58\x75\xd2\x8e\xca\xe1\x29\x7d\x4d\x97\x1f\x20\xe0\xca\xa8\xf1\x42\xc0\x8d\x7d\xe3\x06\xa3\xb9\xb3\x68\xc6\xa0\xb5\xf2\x57\xbf\xbb\x60\x7e\x81\x91\x9f\x8d\x3c\xe7\x8a\x42\x64\x5c\x9c\x80\x5e\xb9\xae\x74\x1f\x4c\xbc\x4e\x35\x4e\xcd\xab\x77\xa3\xf6\xfd\x13\xe0\x00\x79\x7f\x94\x39\x30\x57\x25\x5c\x3d\x4c\xa7\xca\x5d\x88\x7f\x7d\x46\x6d\xff\xf3\xbe\x9b\xf3\xa0\x07\x7b\xd2\x32\xbb\x90\xea\xfd\xdc\x09\xb5\x9e\xcc\xc0\x46\x85\x5a\xcf\xaf\xa7\xef\xf2\xc7\x5a\xfe\xf2\x09\xb8\xb1\x54\x15\x04\x3d\x73\x65\x4a\x4d\x83\xf5\xdf\x38\xcd\xd7\xd3\x91\xc6\x90\xd8\xa8\x6e\xbd\x42\xed\x2c\xbb\x8e\xfa\xff\x4e\x02\xae\x7e\x06\x55\x42\xe6\x13\xe6\x3a\xeb\x3a\xf1\xab\x77\xf5\xfe\x06\x00\x00\xff\xff\x56\x6e\xb3\x11\x0f\x0a\x00\x00"

func transactionsNftforwardingCreate_forwarderCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsNftforwardingCreate_forwarderCdc,
		"transactions/NFTForwarding/create_forwarder.cdc",
	)
}

func transactionsNftforwardingCreate_forwarderCdc() (*asset, error) {
	bytes, err := transactionsNftforwardingCreate_forwarderCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/NFTForwarding/create_forwarder.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xae, 0xe3, 0x58, 0xae, 0x9, 0x18, 0xba, 0x7c, 0x55, 0x15, 0x1e, 0x2a, 0x5d, 0x2e, 0x4d, 0x88, 0xa8, 0x45, 0xd7, 0x4b, 0x51, 0x17, 0x10, 0xbb, 0xc4, 0x79, 0xf5, 0xfe, 0x88, 0xe0, 0x45, 0xa5}}
	return a, nil
}

var _transactionsNftforwardingTransfer_nft_to_receiverCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x54\xc9\x6e\xdb\x3c\x10\xbe\xeb\x29\xbe\x5f\x87\x3f\x32\xd0\xd8\x97\xa2\x07\x23\x0b\x82\xa4\x01\x72\x49\x03\x37\x7d\x00\x9a\x1a\x49\x6c\x65\x8e\x40\x8e\xe2\x04\x41\xde\xbd\xa0\x16\xda\xb2\x9d\xea\x44\x93\xb3\x7d\xcb\x78\xb1\x58\xe0\xb9\x32\x1e\xe2\x94\xf5\x4a\x8b\x61\x0b\xe3\x51\xb0\xeb\xaf\x0a\x72\xce\xd8\x12\xca\xe2\xf1\xfe\x19\x85\xe3\x4d\x12\x92\xd8\x12\x94\xd6\xdc\x5a\x81\x30\x94\x65\xa9\xc8\xa1\xf5\x21\x58\x2a\x82\x23\x6d\x1a\x43\x56\xce\x3c\x56\xa4\xc9\xbc\x90\x83\x23\xcf\xad\xd3\xd4\x95\xd8\x56\x46\x57\xa1\xd9\x86\x1d\xa1\x36\x1b\x23\x94\x43\x2a\x65\xa1\x70\xcb\x75\x4d\xdd\x38\x4f\xed\xba\x36\x1a\xab\x31\x35\x31\x9b\x86\x9d\xe0\x91\xed\x7d\x6b\x4b\xb3\xae\xe9\x99\xff\x90\xed\x66\x43\x7a\x78\x9d\x8e\xf1\xdf\x5f\xd5\xa6\xa9\x69\x44\x81\x74\x77\x91\x26\xc9\x1e\xfe\x2c\x8e\xbe\xc4\x4d\x9e\x3b\xf2\xfe\x0b\xb6\x46\xaa\xdc\xa9\xed\xc3\xdd\x12\xbf\x1e\xac\x7c\xfb\x3a\xc3\x7b\x92\x00\x40\xc0\xb2\xa2\x82\x1c\x59\x4d\x81\x8c\x00\x7f\x8c\x27\x77\xe6\xa1\x23\x98\x2e\xa1\x26\x89\xef\x2b\x2a\x96\xf8\x7f\x37\xca\x7c\x07\xfc\x54\x75\x2e\xba\xea\x91\x50\x61\xe4\xd4\xb0\x37\xd2\xdd\x07\x70\xc2\xb1\xc9\xf0\xd4\xf7\x78\x3f\x64\x66\x3e\x56\xf9\xe8\x3b\x35\x8e\x1a\xe5\x28\xf3\xa6\xb4\xe4\x96\xb8\x69\xa5\xba\xe9\x25\x0e\x58\x31\x7c\x8b\x05\xd6\xec\x1c\x6f\xa1\xe0\x0e\x61\xf7\xb9\x67\xbe\x9b\xe4\x00\x76\xf8\x3c\xd5\xc5\x7c\x0f\x3b\x2e\x87\x94\x18\x11\xbe\x79\xdf\xe0\xe2\x34\x2f\x57\x59\xd0\x6f\x89\x93\x8f\x3f\x85\x9d\x2a\xe9\x49\x49\x35\x9b\xd4\xbc\xbe\x46\xa3\xac\xd1\x59\x3a\x60\x42\xce\xe4\x61\x59\xe0\x25\x18\x50\x59\xf0\xfa\x37\x69\x81\xea\xc9\xf4\x0d\x69\x53\x18\xca\xd1\x28\xa9\xd2\x59\xb2\x4f\x41\x49\x32\xb5\xb9\x47\xd3\x1b\x75\xdc\x8a\xbe\x58\xcc\x09\x7a\xc4\x60\x5c\x86\x02\xc3\x20\x3b\xbf\x4d\x5b\x44\x96\x87\xc2\x47\x64\x9f\x5a\xb1\x29\xd3\x3b\x03\xe0\x72\x17\x3e\xe5\xba\x24\xb9\x55\x8d\x5a\x9b\xda\xc8\x5b\x76\x92\xd4\x7e\x05\x8f\x39\x8d\x3a\xfd\xc3\x5b\x57\xd9\x67\x3a\xdc\x72\x5b\xe7\x9d\x00\x9f\xfb\xe9\x14\xc4\xb4\x2f\x38\xb8\x96\x5e\x49\xb7\x42\xe3\x32\x0e\xdc\x8d\x16\x8b\x5b\xd1\xad\x7c\xf8\xc1\x5b\x7b\x6a\x27\x47\x89\x6c\x21\xb8\x38\x3f\xf2\x69\x3c\x67\xfb\x7f\x04\xbb\xf3\x54\xb9\xbb\x83\x95\x34\x76\x0a\xe6\x33\x91\xc6\x63\x26\x81\xc3\x25\x2e\xce\x6d\x21\x13\xb4\x0d\x7b\xd9\xdb\xc5\xff\x8e\xe6\x2c\x49\x1e\xee\x7c\x36\x9b\x6b\xb6\xa2\x8c\xf5\x7b\x03\xcf\x96\x48\x7f\x38\x53\x1a\xab\xea\x9e\x07\xf8\x2a\x8a\x50\xa9\x17\x8a\x13\x2b\xfb\x16\xfe\x95\xd3\xa1\xf7\x47\xf2\x37\x00\x00\xff\xff\xf5\xdb\x8a\x90\x29\x06\x00\x00"

func transactionsNftforwardingTransfer_nft_to_receiverCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsNftforwardingTransfer_nft_to_receiverCdc,
		"transactions/NFTForwarding/transfer_nft_to_receiver.cdc",
	)
}

func transactionsNftforwardingTransfer_nft_to_receiverCdc() (*asset, error) {
	bytes, err := transactionsNftforwardingTransfer_nft_to_receiverCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/NFTForwarding/transfer_nft_to_receiver.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x14, 0x28, 0x3c, 0x1, 0x82, 0xf1, 0x2d, 0x15, 0xf4, 0x59, 0x6c, 0x88, 0xad, 0xc8, 0x31, 0xc7, 0x51, 0xaf, 0xbd, 0xa7, 0x9a, 0xf5, 0x54, 0x1, 0x75, 0xa, 0x52, 0x28, 0xc8, 0xec, 0x76, 0xba}}
	return a, nil
}

var _transactionsNftforwardingUnlink_forwarder_link_collectionCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x93\x4f\x6b\xdb\x40\x10\xc5\xef\xfb\x29\x06\x1d\x8a\x0c\x46\xba\x87\x12\x08\xa1\xbe\xd5\x84\xd4\xed\x7d\xbc\x1a\x49\x8b\xd7\xbb\x62\x34\x6b\x37\x18\x7d\xf7\xa2\x3f\xd1\x3f\x1c\xd2\x43\x74\x12\xc3\xef\x31\xf3\xde\xcc\xa6\x69\x0a\x87\xd2\xd4\x20\x8c\xae\x46\x2d\xc6\x3b\x30\x35\x5c\x4b\x14\x40\x07\xa8\xb5\x0f\x4e\xe0\xea\x83\xcd\x80\x83\x53\xad\x42\x3c\x58\xe3\x4e\x80\xa0\xbd\xb5\xd4\xab\xc4\x83\x91\x1a\xaa\x70\xb4\x46\x43\x2d\x9e\xb1\xa0\x0e\xc7\x5c\x88\xa1\xc4\x8b\x71\x05\x68\xef\x72\x53\x04\xa6\xac\xc3\xf7\xbb\xc3\xce\xf3\x15\x39\x23\x56\xca\x9c\x2b\xcf\x02\x7b\xef\x76\xc1\x15\xe6\x68\xe9\xe0\x4f\xe4\x20\x67\x7f\x86\x68\x5d\x8e\xde\xf9\x9f\x24\x98\xa1\xe0\x1f\x43\xd7\x7a\x80\x17\xb5\x91\xfc\xf1\x17\xcf\x95\xa5\xfd\xee\x30\x60\x53\x61\x64\xa6\x91\xda\x79\x87\xd6\xf3\x5a\xa4\xd4\x3c\xae\x9b\x52\x00\x00\x15\x53\x85\x4c\x71\x6d\x0a\x47\xfc\x00\x4f\x41\xca\xa7\x3e\xbe\x0d\xdc\x3a\xa4\xfd\x4c\x0e\x3d\x91\x14\x24\xcf\x58\xe1\xd1\x58\x23\x6f\xf1\x34\x48\xf2\x3c\x86\xfa\xd2\x85\xf9\x82\x52\x6e\x12\x5d\x92\x3e\x7d\xff\x76\x9b\x81\xd3\xef\x5a\xd2\x3c\xc6\xf3\xa6\xed\x67\x7d\x11\x47\x13\x07\x68\x99\x30\x7b\x9b\x2f\x24\xf7\x0c\x53\xcb\x68\xb3\xd0\x33\x49\x60\x37\x96\x1a\xf5\x75\x96\xd6\x8b\x4d\x5e\x49\x93\xb9\x10\x7f\x64\xe3\xb7\x6b\xef\xaf\x5d\xcf\xfc\x7e\xfa\x5d\x7d\x68\x60\x98\x31\x74\xda\x4f\x87\xbb\x67\x34\x4d\x41\x33\xa1\x10\xe0\xfb\x9d\xeb\xd1\x6e\x97\x9e\x94\x34\x7b\x13\x6a\xd5\xba\x6d\x7c\xcf\xee\x7a\x80\x2d\xfc\xd7\x92\xb7\xcb\xc3\x4f\x5e\xa9\xf6\xf6\x42\x3c\x71\xcd\x63\xbc\x88\xe0\x13\xd3\xdb\x05\x2c\xc8\x05\xc9\xc3\x7d\xd1\xaf\xfe\x7d\xb7\xaa\x51\xd4\x67\xd6\xa8\x46\xfd\x0b\x00\x00\xff\xff\xb7\x06\xc9\x5e\x57\x04\x00\x00"

func transactionsNftforwardingUnlink_forwarder_link_collectionCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsNftforwardingUnlink_forwarder_link_collectionCdc,
		"transactions/NFTForwarding/unlink_forwarder_link_collection.cdc",
	)
}

func transactionsNftforwardingUnlink_forwarder_link_collectionCdc() (*asset, error) {
	bytes, err := transactionsNftforwardingUnlink_forwarder_link_collectionCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/NFTForwarding/unlink_forwarder_link_collection.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xec, 0x57, 0x2e, 0x60, 0x85, 0x4, 0x8d, 0x51, 0x88, 0xaa, 0x42, 0xdf, 0x1c, 0x8a, 0x67, 0x7c, 0x3c, 0x71, 0x30, 0x5a, 0x2f, 0xcf, 0x4e, 0xe3, 0xb1, 0xb7, 0x63, 0x85, 0x19, 0x85, 0xe2, 0x8a}}
	return a, nil
}

var _transactionsDestroy_nftCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x92\x41\x6f\x9b\x40\x10\x85\xef\xfc\x8a\x57\x0e\x2d\x1c\x8a\x2f\x55\x0f\x28\x6d\x14\xd5\x8d\xe4\x4b\x54\xa5\xee\x0f\x58\x76\x07\xef\xb6\xeb\x1d\xb4\x3b\x94\x54\x51\xfe\x7b\x85\xc1\xc6\xb1\xac\xec\x05\x34\xcc\xce\xfb\xe6\xf1\x56\xab\x15\xb6\xd6\x25\x48\x54\x21\x29\x2d\x8e\x03\x06\x27\xd6\x44\x35\x24\xa8\x80\x87\xfb\x2d\xda\xc8\x7b\x88\x25\x24\xb7\x0b\x14\x13\x34\x7b\x4f\x53\xb3\x0a\x06\x86\x92\x44\xfe\x97\xe0\x24\xcb\xdc\xbe\xe3\x28\x78\xe0\x70\xdf\x87\x9d\x6b\x3c\x6d\xf9\x0f\x85\x69\x48\x7e\x59\xce\x8f\xfd\xdf\x9f\xd4\xbe\xf3\x74\x92\xcb\x97\x42\x9e\x65\x67\x78\x85\x33\x35\x7e\x6d\x82\x7c\xfe\x54\xe2\x39\xcb\x00\x60\x5c\xe3\x91\x5a\x8a\x14\x34\x41\xac\x12\x0c\xce\x7b\x34\x84\x3e\x91\x41\xcb\xf1\xc0\xcf\x43\xa0\xf8\xe1\x9c\xff\x70\xdd\x93\x9c\x95\x1e\xa9\xad\xf1\x7e\x91\xaf\xbe\x2d\xdd\x87\xf6\x2e\x52\xa7\x22\x15\x93\x1b\x35\xee\x7a\xb1\x77\x5a\x73\x1f\xe4\x44\x34\x51\xa1\xe1\x18\x79\x80\x42\x5c\xe8\xf8\x2d\x94\xf1\x24\xf2\x6d\xf5\x8a\x07\x5f\x66\xeb\xab\x69\xe0\xcd\x75\xbc\xaf\xc5\x68\x5d\x8d\xab\x1f\x7f\x0a\x47\xb5\xa3\x1f\x4a\x6c\x79\x92\x1a\xcf\xed\x2d\x3a\x15\x9c\x2e\xf2\x79\x09\x18\xa6\x84\xc0\x82\x24\x1c\x69\x4c\x01\x37\xbf\x49\x0b\x94\x4c\x31\xe8\x48\xbb\xd6\x91\x41\xa7\xc4\xe6\xe5\xb4\xf2\xcb\xf4\xa0\x27\xd2\xbd\xd0\x85\x11\xc7\x4c\x1d\xee\xbf\xca\xd4\x1b\x46\x8c\xff\x25\xb4\x82\x9b\x8f\x57\x3c\xa9\x8e\x23\x8b\xe3\xcb\x66\x5d\xc3\x99\x72\xd1\x9d\x73\x39\xce\x38\x27\xec\x38\x09\x9e\x4f\x5d\xef\xae\xcc\xde\x91\x6c\xd6\xa9\x28\x2b\xcd\x41\x94\x0b\xa9\x70\xa6\xac\x91\x6f\x67\xfa\x51\xf2\xc2\x8a\xcd\x1a\xc9\x72\xef\x0d\xac\xfa\x4b\x68\x88\x02\x0c\x79\x12\x32\xf9\xac\xfe\x92\xfd\x0f\x00\x00\xff\xff\x64\x5f\xc7\xe4\x70\x03\x00\x00"

func transactionsDestroy_nftCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsDestroy_nftCdc,
		"transactions/destroy_nft.cdc",
	)
}

func transactionsDestroy_nftCdc() (*asset, error) {
	bytes, err := transactionsDestroy_nftCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/destroy_nft.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x49, 0xc9, 0xd, 0x93, 0x4, 0xd6, 0x22, 0xe4, 0xa2, 0xdd, 0x4f, 0x11, 0xbd, 0xd4, 0xaf, 0xd8, 0x18, 0xe1, 0x62, 0xe0, 0x6c, 0x53, 0x76, 0xf6, 0x12, 0x3d, 0x4e, 0xbc, 0x96, 0x2d, 0x5b, 0x1e}}
	return a, nil
}

var _transactionsMint_nftCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x56\x5d\x4f\xe3\x3a\x13\xbe\xcf\xaf\x98\xed\x05\x9b\x6a\x51\xfb\x22\xad\xf6\x22\xda\xb2\xe2\xe3\x45\xe2\x02\x84\xa0\x7b\x6e\x10\x17\x8e\x33\x4d\x7c\x70\xed\x1c\x7b\x52\xa8\x10\xff\xfd\xc8\xb1\xf3\xe1\x92\x45\xc7\x17\x90\xda\x33\x8f\x3d\xcf\x3c\x33\xf6\x72\xb9\x84\x75\x25\x2c\x58\x6e\x44\x4d\xd0\x58\xb4\x40\x15\xc2\xed\xd5\xfa\x46\x28\x42\x03\x06\xad\x6e\x0c\x47\x20\x0d\x5b\xa1\x08\x18\x28\x7c\x71\x06\x89\xf3\xbe\x26\xd8\x36\x96\x20\x47\x30\x8d\x82\x17\x41\x55\x0b\xc0\x38\xd7\x8d\x22\xa0\x8a\x11\x54\xcc\xa3\x6e\x63\xc8\x16\xc0\x92\x36\x58\x80\x50\xb0\x74\x9f\xac\xc4\x65\xbf\x79\x92\x88\x6d\xad\x0d\xc1\xec\x56\xab\xab\x46\x95\x22\x97\xb8\xd6\xcf\xa8\x66\xfd\xca\xff\x5f\xd9\xb6\x96\x78\x7b\xb5\x1e\xe6\x6e\x90\x58\xc1\x88\xfd\x25\xf0\xc5\x0e\xd3\x07\x08\x09\x19\xa6\x2c\xe3\x24\xb4\x4a\x13\x00\x00\x83\x5c\xd4\x02\x15\x65\x70\x56\x14\x06\xad\x3d\x6e\xe7\x15\xdb\x62\x06\x0f\x64\x84\x2a\xfd\x4c\x81\x9e\x31\xa1\x55\xbc\x40\x55\xb3\xcd\x15\x13\x32\x9e\xe6\x0d\xd9\x0c\x1e\x7f\x5f\x89\xd7\x1f\xdf\x9f\xfc\x9c\xd1\x7b\x26\x69\x7f\x39\x40\x39\x13\xef\x15\x9b\x9c\xa3\xc2\x8d\xe0\x82\x19\x81\xce\x26\x1c\xee\x29\x99\xc3\x5b\xd2\x1a\x3a\x26\xa5\xe6\x4c\xc2\x8e\x19\xc1\x72\x89\xb0\xd1\xa6\x25\x57\xa8\x32\x26\x7f\x83\x06\x15\xc7\xd6\x4f\x22\x85\x85\x0c\x8e\x06\x2a\x17\xa3\x14\x74\xf0\xf7\x9d\xa3\x53\x82\x03\x34\xc8\x51\xec\xd0\x7c\xb5\xc0\xb5\x94\xd8\x12\xd9\xa3\xf6\x5c\x5e\xf4\x6b\xf7\xb8\xc9\xe0\xe8\xed\x30\x97\x8b\xc1\xe2\xae\xc9\xa5\xe0\xef\xc3\xa6\x77\x06\x77\x42\x37\xd6\xe9\x0d\xae\x2f\x21\xc7\x8d\x36\xd8\x6e\x3f\xca\x1e\xe0\x2b\xf2\x86\xd0\x46\x31\x09\x55\x5e\x5f\x9e\xb7\x0e\x19\xfc\xbe\x56\xf4\xe3\xbb\x07\xae\x0d\xd6\xcc\x60\x6a\x45\xa9\x5c\xe0\x67\x0d\x55\x67\x5e\xaf\x8e\x50\x08\xc3\xa2\xdc\x2c\x0e\x80\x60\x05\x23\x96\x48\x13\x93\x0f\x4d\x5d\xcb\x7d\xd2\xbb\x2d\x97\x90\x6b\x63\xf4\x0b\xb0\x81\xec\x8e\xb3\x89\xba\x12\x0a\x82\xf0\x3f\xee\x8c\x06\x56\xe0\x8f\xb9\xf0\xa0\x3f\x27\xb3\x74\x9a\x6e\x8c\xde\x66\xe3\xb3\xf9\x85\x07\x8f\x7c\xc7\xa8\x9a\xf7\xf0\x6e\xfc\xfa\x05\x35\x53\x82\xa7\xb3\x10\x39\x14\x1a\x2d\x28\x4d\xbe\x22\x81\x29\xd0\xf9\xdf\xc8\x09\x18\xb5\x47\xb7\x35\x72\xb1\x11\x58\x40\xcd\xa8\x9a\xcd\xa3\x88\xcf\x7d\xc4\x41\x16\x3e\xf1\x5f\x2d\xd4\x6d\x3e\xdb\xe4\x0d\x12\x39\x90\x60\x1f\xf0\xb4\x62\x60\x05\x25\x52\x38\x64\xda\xdb\xc4\xd1\x2c\x4a\xa4\x0b\x56\xb3\x5c\x48\x41\xfb\x74\x44\xc3\xa1\xb6\x3e\x32\xd1\x13\xfb\x1f\x84\x79\x9a\xfe\x89\xc5\x0b\xdd\xc8\xa2\xa5\xaf\xf4\xe2\x6f\x4b\x63\x52\x00\x30\xc0\xce\x3c\xdc\x7b\xaf\xcb\x91\xfc\x5c\xcb\x58\x48\x54\x25\x55\xb0\x5a\x4d\x75\x8b\x6e\xf5\xe8\xe8\x0f\xc6\x51\xdf\x08\xcb\x19\xcc\xce\x8c\x61\x7b\x08\xd6\xb6\x6a\x4f\x9e\x23\xe0\x3f\x0d\x93\x6d\xdb\x08\xee\x60\x50\x32\xc2\x02\x0a\x24\x26\xa4\x9d\x8d\x0f\x1b\x4a\xae\x6b\x40\x41\x07\x17\x06\x19\xf9\xfa\xec\x40\x82\x73\x6f\xb5\x63\x06\xbc\xe2\x56\xf0\xbf\x68\xd6\x7b\xf8\x16\x17\xb5\xf0\xc5\xbd\xc7\x7a\x82\x15\x3c\x3e\xf5\x3e\x2f\x95\x90\xf8\x59\xac\x70\x1a\x76\x7a\x8b\xb2\xe6\x1a\x44\xde\x9b\xef\x61\x9a\xaf\xc7\xd6\xf5\xe9\x33\xcf\x41\x72\xb1\x4a\x47\x26\x9f\xe9\xf4\xe7\xd1\x5b\xac\xb7\xfb\x20\x9b\xf7\xd3\x34\x8e\xbf\x44\x0a\x14\x74\x26\x83\x9a\xd3\xf9\xa8\x14\x43\x1a\x6e\xd8\x33\x82\x6d\x4c\x9c\x09\x3e\x1c\x57\x58\xd8\x31\x29\x8a\xae\xa1\x86\x36\xd7\x49\x34\xc2\x13\x1b\xf8\x32\x19\xf4\x82\x57\xc8\x9f\xd3\x39\xbc\x75\x55\x70\x3e\x62\x35\xde\xcd\x55\x46\xbb\xe3\x97\xd9\xbc\x93\x50\x37\xfa\xbc\x2f\x58\x5d\xa3\x2a\xd2\x68\xd5\x8d\x49\x35\x7c\x34\x03\x7f\x87\xb7\x04\x65\xd3\x89\x3a\x9e\x74\xe2\x0d\x65\x6d\x0d\x85\xa4\x4f\x5b\x45\x97\xfe\x44\x3d\x4e\x29\xc6\x8d\x58\x03\xf1\xaf\xae\x12\xfc\xff\x6f\x70\xd2\xaf\xbe\x27\x49\x54\x5a\xae\xa1\xf7\x2d\x84\x29\x57\x95\xb5\xb6\x82\x40\xd0\xe8\x46\xee\x5b\xef\xc1\x95\x0c\xf1\xb5\xd2\xfe\xbb\xbd\x5a\xc7\x1c\x8e\xde\x3f\x9f\x74\xe4\x98\x1c\xff\x36\x72\x7f\xe3\xf9\x88\xac\xd1\x8f\xd8\x6a\xf4\x5c\xea\x3f\x8f\xa7\xc5\x91\x0d\x9f\x49\xcc\x65\xd7\x3e\xb5\xa5\xc3\xeb\x7b\x3a\x02\x57\x4f\xd7\x97\x36\x9d\x2f\xb8\x56\xc4\x84\xb2\xe9\xd4\x65\x3f\xcf\x60\xb6\xae\x10\x14\xbe\x52\xf7\x00\x09\xed\xb2\x62\x3b\x84\x1c\x51\xf9\xd7\x53\x11\x12\x22\x9d\xf2\xb0\x98\xf5\x87\x98\x7e\x2c\xb8\x16\x3d\xf9\xba\xf8\x06\x27\x61\xcf\xd6\x1a\xac\x37\xff\xb0\xa9\x50\xdc\x20\xb3\x58\x40\xbe\x87\x93\xae\x2f\xbf\x27\xff\x06\x00\x00\xff\xff\xe5\xfa\xca\xf9\xd0\x0b\x00\x00"

func transactionsMint_nftCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsMint_nftCdc,
		"transactions/mint_nft.cdc",
	)
}

func transactionsMint_nftCdc() (*asset, error) {
	bytes, err := transactionsMint_nftCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/mint_nft.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd0, 0x55, 0x94, 0xc1, 0x2b, 0x71, 0x34, 0x83, 0x77, 0xba, 0x5c, 0x3d, 0x88, 0x6d, 0x36, 0xe9, 0x93, 0x85, 0xd7, 0xb9, 0x33, 0x75, 0x8c, 0x7d, 0x1c, 0xf2, 0xde, 0xf8, 0x64, 0xbb, 0xb1, 0x86}}
	return a, nil
}

var _transactionsSetup_accountCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\x4f\x6b\xdb\x40\x10\xc5\xef\xfb\x29\x5e\x73\x08\x32\x38\xd6\x3d\xb8\x81\x10\xe2\x5b\x4d\x48\x4d\xef\xe3\xf5\xc8\x5a\xb2\xde\x15\xb3\x23\xab\xc6\xf8\xbb\x17\xc9\xa9\xfe\xb4\x86\x56\x27\x31\xfb\x66\xdf\xef\xcd\x4e\x9e\xe7\xd8\x94\x2e\x41\x85\x42\x22\xab\x2e\x06\xb8\x84\xa6\x24\x05\x05\x90\xb5\xb1\x0e\x8a\x26\xd6\x7e\x07\xa9\x83\x69\x3b\x34\x22\xb1\xc2\x69\x62\x5f\xa0\xae\xda\x82\xb0\x65\x77\x64\xac\x57\x9b\x64\x8c\x3b\x54\x51\x14\x77\xeb\x18\x56\x75\xd8\xbb\xad\xe7\x4d\xfc\xe0\x70\xd7\x9f\xbc\xfe\xa4\x43\xe5\x79\xbd\xda\x0c\xb5\x6f\xac\xb4\x23\xa5\x1f\x8e\x9b\x74\x67\xcc\x18\xea\x6c\x0c\x00\x54\xc2\x15\x09\x67\xc9\xed\x03\xcb\x23\x9e\x6b\x2d\x9f\xaf\x90\x33\x9c\x3b\x49\xfb\xe5\x39\xde\x59\x6b\x09\x60\x12\x7f\x82\x2b\xa0\x25\xf7\x71\xc8\x0b\xd3\xee\x84\x92\x12\x08\x36\x7a\xcf\x9d\x4b\xdf\xef\x0a\x5c\x1d\x16\xdb\x28\x12\x9b\xe5\xfd\xc0\xbb\x78\xe9\xf5\x4f\x59\x21\xf1\xf0\x88\x9b\x87\xdf\x35\x0a\xed\xf9\x8d\xb4\x9c\xe1\xcb\x57\x04\xe7\x47\x84\xed\x27\x1d\x62\x5f\xba\x98\x31\xff\x8b\x30\x29\x83\x10\xb8\x01\x1f\x2a\x3d\xdd\x02\xf5\xac\xa3\x32\x96\x0f\x63\x16\xdb\x5d\xf1\xda\xf6\x0e\x58\xd9\x6c\x62\x93\xe8\xc8\x70\xda\x3e\xe1\x68\x42\xbd\xe2\x73\x0a\xad\x2a\x5b\x3e\x0c\x4e\x73\x68\xfc\x8f\xdc\x13\x2b\xfb\x3b\x51\x55\x6f\xbd\xb3\xb0\x54\xd1\xd6\x79\xa7\x27\x14\x51\x3a\xfb\x1b\x09\x3f\x09\xbc\x0b\x1f\xcb\xfb\xf3\x9f\x0b\x35\xf2\x7d\xeb\x6e\x9d\x8f\xa1\x86\xdf\xbf\x65\x93\x65\x5b\xbc\x73\x8a\xfe\xc8\x32\xe8\x2e\x4f\xd9\xe4\xb1\x6e\x66\xbd\x5e\xd6\x46\x9d\x4f\xc4\x4a\xb2\x67\xfd\xf7\x80\xfa\xa6\x99\xb9\x6e\xc0\xc5\xfc\x0a\x00\x00\xff\xff\x15\x9f\x75\xe0\x93\x03\x00\x00"

func transactionsSetup_accountCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsSetup_accountCdc,
		"transactions/setup_account.cdc",
	)
}

func transactionsSetup_accountCdc() (*asset, error) {
	bytes, err := transactionsSetup_accountCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/setup_account.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe, 0x55, 0xa0, 0x10, 0x54, 0x16, 0x84, 0x73, 0xc5, 0xc3, 0xa, 0x8d, 0x14, 0xd4, 0xd, 0x84, 0x93, 0xaa, 0xe9, 0x36, 0x8c, 0x25, 0x52, 0xf7, 0x32, 0x9a, 0x59, 0x26, 0x89, 0x84, 0x9, 0x48}}
	return a, nil
}

var _transactionsSetup_account_from_nft_referenceCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x93\x4f\x6b\xdb\x40\x10\xc5\xef\xfa\x14\x2f\x3e\x14\x09\x1c\xf9\x52\x7a\x30\x4e\x42\x70\x63\xe8\xa1\x26\x14\xb7\xf7\xb1\x34\xb6\x97\xc8\xbb\x62\x77\x64\x35\x84\x7c\xf7\x22\xad\x2c\x79\xe5\x42\x4a\x75\x5a\xc6\xbf\xf9\xf3\xc6\x6f\x66\xb3\x19\x36\x07\xe5\x20\x96\xb4\xa3\x4c\x94\xd1\x50\x0e\xf5\x81\x04\xa4\x41\x59\x66\x2a\x2d\xa8\x4d\x55\xe4\xb0\x95\x8e\x9a\x0c\x31\x70\x2c\x50\xe2\xb8\xd8\xa1\x2a\x9b\x80\xe5\x8c\xd5\x89\xb1\x5e\x6d\x5c\xea\x6b\xee\x2a\xdd\x16\x6c\x73\x2a\xc7\x0e\x27\xc5\xb5\x6b\xe8\x17\x6d\x6a\xd4\x07\xb6\x7c\x2e\xd6\x54\x39\x30\x32\x53\x14\x3c\x64\x29\x0d\x27\xc6\xd2\x9e\x41\x3a\x6f\xd8\xcc\x32\x09\xb7\x2c\x1f\x4b\x79\xbd\xc8\x48\xa3\x48\x1d\x4b\x63\x05\x6b\xa3\x57\x95\xde\xab\x6d\xc1\x1b\xf3\xc2\x1a\x3b\x6b\x8e\x98\x8c\xc3\x93\x33\xff\x9d\x85\x72\x12\xfa\xd5\xce\xe7\xe1\x20\xd6\x93\x4f\xbf\xe9\x58\x16\xbc\x5e\x6d\x3a\x6c\x08\x4c\xa2\xe8\x62\x8b\x31\xe5\xb9\x65\xe7\xe6\x78\xf4\x8f\x29\xca\x6a\x5b\xa8\xec\x99\xe4\x30\xc7\x73\xff\x9e\x42\xe5\x73\xfc\xfc\xa6\xe5\xcb\xe7\x04\x6f\x51\x04\x00\xa5\xe5\x92\x2c\xc7\x4e\xed\x35\xdb\x39\x1e\x2b\x39\x3c\xfa\xff\xa2\x61\xd0\x7d\x05\xcb\x85\x7e\xdc\x61\xcf\xd2\x61\xe7\xfe\x49\x0f\x37\x5f\xba\x67\x59\x52\x49\x5b\x55\x28\x79\x8d\x87\x89\x46\xd8\xd6\x58\x6b\xea\xc5\xa7\xb7\xf1\xca\xd2\x65\xdf\xce\x4b\x98\x86\xcb\x4b\x7f\xb0\x33\xc5\x89\xed\xc0\xbd\xdf\xc7\x61\xf5\x87\x07\x94\xa4\x55\x16\x4f\x96\xad\xad\xb4\x11\xf8\x86\x20\x58\xde\xb1\x65\x9d\xb5\xc6\x08\x1d\x31\x49\xa2\x40\xb9\xed\x5a\xe1\xee\xd2\x04\xbe\x52\x33\xcc\x79\x94\xb8\x59\xb0\xca\x93\x9b\x20\x5b\xef\x64\x98\xb1\xc1\x71\xd7\x57\x4c\xbb\x47\x13\x8e\x37\xaf\x25\x2f\x42\x91\xeb\xd5\x66\xc8\xfd\x4a\x42\xf7\x71\x92\xdc\x80\xdc\x0d\x3e\x00\x07\x05\xb3\x19\x96\xde\xcb\x04\xcd\xf5\x95\x9b\x5d\x30\x6d\xfb\xeb\x50\x0a\x8b\xdb\x6b\x01\xa9\xbf\x8d\xa7\x10\x8d\x93\xa0\xa7\xa3\x13\x43\xc9\x79\xbb\xdd\x81\xf7\x84\x37\x5c\xda\x50\xf1\xe2\x76\xd4\x75\x0a\x31\xf3\xbf\xf4\xed\x4e\xd4\xfb\xe8\xb2\x59\x76\x16\xe8\x8d\x86\xac\xb7\x1e\x76\xc6\x8e\x0f\x7e\x34\x43\xa1\xf4\xcb\xbf\x39\x70\xb8\xc1\x74\x78\xfe\x97\x51\x03\x9f\x5e\x0b\x1d\xee\x65\x1a\x90\x42\x76\xcf\xf2\xc1\x6a\xfa\x0c\x7f\x0d\xef\xd1\x7b\xf4\x27\x00\x00\xff\xff\x9c\xdf\x9a\xfd\x7f\x05\x00\x00"

func transactionsSetup_account_from_nft_referenceCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsSetup_account_from_nft_referenceCdc,
		"transactions/setup_account_from_nft_reference.cdc",
	)
}

func transactionsSetup_account_from_nft_referenceCdc() (*asset, error) {
	bytes, err := transactionsSetup_account_from_nft_referenceCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/setup_account_from_nft_reference.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x46, 0x7b, 0x97, 0x7d, 0x5, 0xad, 0xa7, 0x5a, 0xb9, 0x92, 0xbb, 0xa4, 0x1a, 0x55, 0x80, 0xc2, 0x31, 0x3b, 0x6c, 0xa1, 0xb7, 0xbe, 0xe3, 0xe7, 0x16, 0x17, 0x8a, 0x5f, 0x37, 0xff, 0x80, 0xda}}
	return a, nil
}

var _transactionsSetup_account_to_receive_royaltyCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x53\x51\x6f\xe2\x3c\x10\x7c\xcf\xaf\xd8\xf2\xd0\x82\x84\xe0\xbd\x6a\x2b\xb5\xfd\x54\xe9\x93\xae\xba\xaa\xed\xf5\x5e\x59\x9c\x4d\xb2\xc2\xd8\xd1\x7a\x03\x8d\x10\xff\xfd\x64\x07\x42\x72\x3a\xde\x88\xc7\xb3\xb3\x33\xe3\xe5\x72\x09\x9f\x15\x07\x50\x41\x17\xd0\x28\x7b\x07\x1c\x00\x41\x69\x5b\x5b\x54\x82\xc2\x4b\xfc\x7b\x39\xcf\xe2\x25\xf5\x60\x84\xe2\x39\x82\xa3\x3d\x58\x76\x1b\x60\x07\x5a\x11\x0b\xa0\x31\xbe\x71\x1a\x51\x6b\x82\x26\x50\x9e\x68\x84\x0c\xf1\x8e\x5d\x09\xe2\x5b\xb4\xca\x14\xb2\x7f\x2a\x30\xe8\x46\x17\xd1\xb5\x50\x34\xae\xe4\xb5\x25\x50\xbf\x21\x37\x87\x7d\xc5\xa6\x8a\x5a\x43\x4d\x86\x0b\xa6\x1c\xd6\x6d\x9c\x0f\xab\x1d\x36\x56\xdf\x50\xab\x15\xa0\x94\xcd\x96\x9c\xc6\x39\x69\xd6\xff\x45\xc2\x9c\x15\xee\xd1\x69\x88\x3a\x3b\x6d\x74\x51\x16\xb7\x79\xf9\xf1\xf3\xf7\x3c\xe2\xdb\x1b\x6b\xa3\x1c\x58\x2d\x83\x7a\xc1\x92\x96\x85\xf5\xfb\xcf\x28\xe5\x2b\x4e\x5b\x0d\xc8\xdb\xc4\x3a\x24\x65\x8d\x6c\xbf\x3e\xfe\x7b\x9e\x9f\x00\xbe\xb1\x79\x22\x7c\x61\xd4\x44\xb3\x48\x3c\x1f\x1d\x7b\x14\x9f\x18\xd1\xe5\x10\x3c\x78\xb7\x38\x39\x45\x50\xa3\x56\x17\x6b\xe2\x32\x75\xb3\xb6\x6c\x4e\x19\x84\x53\x22\x09\xa6\x15\xea\x29\x16\x28\x1a\x6d\x84\xe6\x11\x41\xdf\x35\x19\xa5\x7c\xa0\xb1\x9f\x56\x92\x23\x61\x33\xb6\xd9\x24\xbd\xeb\xd4\x86\x3d\x4a\xde\x5d\x4d\x46\xd6\xb5\xf8\x5a\x38\x56\x21\xf9\x9e\x65\xbc\xad\xbd\x28\x4c\x5e\x4e\x89\xa5\xf5\x26\xfd\xe7\x57\x52\xcc\x51\xf1\x8b\x69\x1f\x26\x59\x36\x08\x7e\xda\x27\x77\x0b\x03\x27\x66\x70\xc8\x32\x00\x80\x5a\xa8\x46\xa1\x69\xe0\xd2\x91\xdc\xc2\x63\xa3\xd5\x63\x97\x64\x8f\x89\xbf\xe5\x12\xde\x49\x1b\x71\x40\x28\xb6\x05\x1e\x87\x9e\x7b\x0a\xee\x46\xa1\xc2\x5d\xec\xef\x48\x27\xa4\x18\x7a\x26\x2e\xa0\x1b\xb6\x58\x7b\x11\xbf\xbf\xbb\x1e\xa1\xbb\xd0\x1e\xa6\x85\xf8\xed\x2d\xf4\xea\x67\x70\x7f\x0f\x8e\x2d\x1c\x7a\xa2\x24\x1f\x1d\x9b\xe9\xe4\xb1\x03\xf6\xf1\x5d\x0a\x3c\xee\x78\x17\x61\x14\x0b\xce\x2b\xd0\x37\x07\x9d\xcc\x7a\xc6\xe3\x68\xdf\xe7\xf3\x6b\x3c\x95\xc1\x60\x8d\x6b\xb6\xac\xed\x39\xa9\x24\xb5\x6b\x84\x77\xb6\x8d\x25\xf0\x81\xc2\x90\x24\xc2\x72\xaa\x7d\x60\x8d\x5a\xba\xc7\xa8\x95\xf8\xa6\xac\xd2\xe1\x7b\x57\x16\x01\x76\x4a\x52\xa0\xa1\xfe\xba\x25\x1d\x0e\xbd\x3f\xfb\x16\x5b\x79\x77\x7d\x18\xdb\x76\xe6\x99\x8f\xcd\x5f\x3c\xa1\x45\x67\xe8\xf8\x30\x1d\x19\x37\xaa\xcc\xa2\x24\x7d\x4f\xaf\xb4\x3d\xd3\xbc\xa5\x9d\xa3\xf3\xd3\xd9\x7c\x74\x53\x51\x4a\xd2\x41\x34\xfd\xe9\xec\x6a\xe4\xdf\x2b\x6e\x08\x42\x23\x94\xf6\x1c\x2c\xc2\x01\x76\x68\x39\x1f\x56\xe2\xea\x72\xbe\x30\x15\x99\xcd\x74\x06\x87\x73\xbc\x4f\xe4\xa8\x60\xc3\x28\xed\x5f\x3c\x31\xc5\xc4\x75\x35\x99\xc1\x31\xeb\x42\x3c\x66\x7f\x02\x00\x00\xff\xff\xcf\xed\xb1\x7e\x85\x05\x00\x00"

func transactionsSetup_account_to_receive_royaltyCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsSetup_account_to_receive_royaltyCdc,
		"transactions/setup_account_to_receive_royalty.cdc",
	)
}

func transactionsSetup_account_to_receive_royaltyCdc() (*asset, error) {
	bytes, err := transactionsSetup_account_to_receive_royaltyCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/setup_account_to_receive_royalty.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x82, 0x5d, 0x0, 0xb6, 0x71, 0xaf, 0x5e, 0x9c, 0x72, 0xba, 0xa3, 0xee, 0x1d, 0x2c, 0xa5, 0xb4, 0x3e, 0x5a, 0x56, 0x43, 0x64, 0x74, 0xcc, 0xf5, 0xab, 0xf4, 0x8, 0xba, 0xec, 0x61, 0xac, 0x18}}
	return a, nil
}

var _transactionsTransfer_nftCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x94\xcd\x6e\xdb\x30\x0c\xc7\xef\x7e\x0a\xce\x87\xd5\x01\xd6\xe4\x32\xec\x60\xf4\x03\x45\xbb\x02\xbd\x74\x45\x97\x3d\x80\x22\xd3\xb6\x36\x87\x14\x24\xa6\x69\x51\xf4\xdd\x07\xf9\x43\x76\xbe\xb0\xe9\xa4\x44\x12\xff\xe4\x8f\x7f\x7a\xb1\x58\xc0\xb2\x36\x1e\xc4\x29\xf2\x4a\x8b\x61\x02\xe3\xa1\x64\xd7\xfd\x55\xa2\x73\x86\x2a\x50\x54\xc0\xe3\xfd\x12\x4a\xc7\xeb\x24\xbc\x62\x42\x50\x5a\xf3\x86\x04\x84\x41\x11\x4b\x8d\x2e\x49\xcc\xda\xb2\x13\x48\x1f\x99\xee\x37\x54\x99\x55\x83\x4b\xfe\x83\x94\xc6\x93\xef\xaf\x6a\x6d\x1b\x7c\xbc\x5f\xa6\x49\x32\xd1\xcd\x1c\x6a\x63\x0d\x92\xe4\x70\x53\x14\x0e\xbd\xff\x02\x5b\x23\x75\xe1\xd4\xf6\xe1\x2e\x87\x5f\x0f\x24\xdf\xbe\xce\xe0\x3d\x49\x00\x00\x42\x16\xcf\x58\xa2\x43\xd2\x18\x72\x90\x1a\xe3\x7d\x74\x67\x1e\x34\x37\x0d\xb6\xb1\xdb\x07\x0d\x4a\x3c\x7f\xc6\x32\x87\xcf\x63\x2a\xf3\xdb\xf1\xee\x91\xe8\x5c\xb6\xd1\xc7\x80\x41\xaf\x40\xcb\xde\x48\x7b\x12\xd8\x08\x47\x99\xfe\xa8\x53\x79\xdf\x67\x31\x11\x7b\xda\xac\x1a\xa3\x3f\x3a\x4d\xeb\xd0\x2a\x87\x99\x37\x15\xa1\xcb\xe1\x66\x23\xf5\x4d\xc7\x38\x54\x0d\xfd\x5a\x2c\x60\xc5\xce\xf1\x16\x14\xb8\x7d\x00\xdd\xdb\x33\xdf\x66\xb4\x07\x20\x2c\x8f\x4d\x39\x9f\x50\x80\xcb\xfe\x49\xbc\x11\xd6\xbc\x13\xb8\x38\x4e\xe8\x2a\x0b\x36\xc8\xe1\xe8\xe1\x4f\x61\xa7\x2a\x7c\x52\x52\xcf\x76\x62\x5e\x5f\x83\x55\x64\x74\x96\xf6\x35\x41\xc1\xe8\x81\x58\xc0\x0b\x3b\x04\x45\xc0\xab\xdf\xa8\x05\x54\x07\xd5\x5b\xd4\xa6\x34\x58\x80\x55\x52\xa7\xb3\x64\x8a\xa0\xc2\xee\x52\x74\x8d\x07\xdb\xc2\x8c\xb6\xec\x82\xc5\x37\xa1\x2f\xf1\x32\x5c\x86\x00\x7d\x22\xa3\xf3\x76\x25\x22\xe5\x3e\xf0\x01\x6c\x87\x1a\xcd\x0b\xba\x03\xab\x45\xd2\xa3\x11\xe0\x72\x54\xdf\x65\x5d\xa1\xdc\x2a\xab\x56\xa6\x31\xf2\x96\x1d\x85\xda\xd9\xe4\x90\x69\xec\xd3\x7f\x78\xec\x2a\x3b\xd5\x8f\x5b\xde\x34\x45\xdb\x88\xd3\xbe\x1a\x4a\xdd\x19\xab\xa1\x25\xbd\x7f\xf1\x15\xf5\x46\x70\x18\xd0\x9e\xe2\x60\xb6\x38\x27\xc1\x3c\xed\x0f\xde\xd2\xb1\x39\x1d\x9a\x45\xa5\xc0\xc5\xf9\x81\x63\xe3\x3e\x9b\x7e\x1c\xc6\xfd\x6e\x0f\xef\xf6\x86\xd4\xd0\xae\x6b\x8e\xcb\xef\xf5\x6e\xd8\x66\x12\xd0\xe6\x70\x71\x4e\xa5\xcc\xa6\xa5\x5b\xf6\x32\x19\xd1\x4f\x07\x49\x57\x28\x0f\x77\x3e\x9b\xcd\x35\x93\x28\x43\x7e\x92\xfd\x2c\x87\xf4\x87\x33\x95\x21\xd5\x74\x50\xc0\xd7\xb1\x27\xb5\x7a\xc1\x98\xbe\xa2\xb7\x35\x3b\x4c\x4f\x66\xfa\x2f\x9d\x65\x5f\x3c\xbe\x4c\x55\xb6\x41\x76\x10\x49\xfb\xc2\x3e\x92\xbf\x01\x00\x00\xff\xff\xf7\xae\x98\x0c\x1f\x06\x00\x00"

func transactionsTransfer_nftCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsTransfer_nftCdc,
		"transactions/transfer_nft.cdc",
	)
}

func transactionsTransfer_nftCdc() (*asset, error) {
	bytes, err := transactionsTransfer_nftCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/transfer_nft.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd1, 0xe0, 0xb3, 0xd9, 0x47, 0x72, 0xcb, 0x53, 0xb5, 0xf6, 0x0, 0x80, 0x9f, 0xa5, 0xe5, 0x6b, 0xef, 0x59, 0x5a, 0xba, 0xf8, 0x2c, 0x84, 0x96, 0x55, 0x31, 0x6, 0xc6, 0xc5, 0x94, 0xed, 0xab}}
	return a, nil
}

var _transactionsUnlink_collectionCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\xc1\x6a\xc3\x30\x0c\x86\xef\x7e\x0a\x91\xc3\x48\x2f\xed\x7d\x8c\x41\x29\xcb\xb1\xf4\x90\x3d\x80\xea\xba\x8e\xa8\x6b\x19\x5b\xa6\x1b\x25\xef\x3e\x52\xb7\x49\x56\x18\xd3\xc9\x88\xef\x97\xfe\x5f\x5e\xad\x56\xd0\x76\x94\x40\x22\xfa\x84\x5a\x88\x3d\x50\x82\x4b\x87\x02\xe8\x01\xb5\xe6\xec\x05\x2e\x9c\xdd\x01\x62\xf6\x6a\x50\x08\x43\xf6\x8e\xfc\x09\x48\x12\x68\x76\xce\x14\xe5\x31\xf2\x19\x42\xde\x3b\xd2\x90\x84\x23\x5a\xa3\x14\x9d\x03\x47\x81\x2d\xfb\x26\x7b\x4b\x7b\x67\x5a\x3e\x99\x3b\x5c\x3d\xb7\xab\x07\xff\xf1\x85\xe7\xe0\xcc\xb6\x69\xef\xe4\xd4\x18\x99\x6d\xd3\x36\x1c\x2f\x18\x0f\xe4\xed\x63\xe0\xbc\x57\x29\x35\x4f\x76\x55\x0a\x00\x20\x44\x13\x30\x9a\x3a\x91\xf5\x26\xbe\xc2\x3a\x4b\xb7\x2e\x49\x17\x0f\x66\x28\x3a\x42\x41\x96\xd6\xc8\x06\x03\xee\xc9\x91\x7c\xd7\x93\x93\xe5\x66\x0c\xbf\xbb\xc5\xde\xa1\x74\x8b\xa5\xee\x8c\x3e\xbd\xbd\x5c\x67\xe0\xf4\x7c\x96\xf4\xef\xf5\xb0\x15\x66\xe5\xd8\xd6\xd5\xe7\xed\xc4\x43\xb0\xbf\xb5\x25\xf3\xb4\xba\x5a\xfc\x9a\x73\x77\x5f\x3e\xeb\x5f\xdb\xa3\xb4\x2f\x27\xe8\x55\xaf\x7e\x02\x00\x00\xff\xff\xbf\xef\x09\x3c\x21\x02\x00\x00"

func transactionsUnlink_collectionCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsUnlink_collectionCdc,
		"transactions/unlink_collection.cdc",
	)
}

func transactionsUnlink_collectionCdc() (*asset, error) {
	bytes, err := transactionsUnlink_collectionCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/unlink_collection.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x10, 0x40, 0xc4, 0x53, 0x49, 0x17, 0x9b, 0xf1, 0xe1, 0xe9, 0x1, 0xf1, 0x28, 0xf5, 0xe2, 0x9a, 0x5, 0x86, 0xf1, 0xf8, 0x2d, 0x5, 0xfd, 0xd3, 0xec, 0x95, 0x63, 0xe0, 0x9, 0xb7, 0x9e, 0xda}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"scripts/borrow_nft.cdc":                                          scriptsBorrow_nftCdc,
	"scripts/get_collection_ids.cdc":                                  scriptsGet_collection_idsCdc,
	"scripts/get_collection_length.cdc":                               scriptsGet_collection_lengthCdc,
	"scripts/get_contract_storage_path.cdc":                           scriptsGet_contract_storage_pathCdc,
	"scripts/get_nft_metadata.cdc":                                    scriptsGet_nft_metadataCdc,
	"scripts/get_nft_view.cdc":                                        scriptsGet_nft_viewCdc,
	"scripts/get_total_supply.cdc":                                    scriptsGet_total_supplyCdc,
	"transactions/NFTForwarding/change_forwarder_recipient.cdc":       transactionsNftforwardingChange_forwarder_recipientCdc,
	"transactions/NFTForwarding/create_forwarder.cdc":                 transactionsNftforwardingCreate_forwarderCdc,
	"transactions/NFTForwarding/transfer_nft_to_receiver.cdc":         transactionsNftforwardingTransfer_nft_to_receiverCdc,
	"transactions/NFTForwarding/unlink_forwarder_link_collection.cdc": transactionsNftforwardingUnlink_forwarder_link_collectionCdc,
	"transactions/destroy_nft.cdc":                                    transactionsDestroy_nftCdc,
	"transactions/mint_nft.cdc":                                       transactionsMint_nftCdc,
	"transactions/setup_account.cdc":                                  transactionsSetup_accountCdc,
	"transactions/setup_account_from_nft_reference.cdc":               transactionsSetup_account_from_nft_referenceCdc,
	"transactions/setup_account_to_receive_royalty.cdc":               transactionsSetup_account_to_receive_royaltyCdc,
	"transactions/transfer_nft.cdc":                                   transactionsTransfer_nftCdc,
	"transactions/unlink_collection.cdc":                              transactionsUnlink_collectionCdc,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"scripts": {nil, map[string]*bintree{
		"borrow_nft.cdc": {scriptsBorrow_nftCdc, map[string]*bintree{}},
		"get_collection_ids.cdc": {scriptsGet_collection_idsCdc, map[string]*bintree{}},
		"get_collection_length.cdc": {scriptsGet_collection_lengthCdc, map[string]*bintree{}},
		"get_contract_storage_path.cdc": {scriptsGet_contract_storage_pathCdc, map[string]*bintree{}},
		"get_nft_metadata.cdc": {scriptsGet_nft_metadataCdc, map[string]*bintree{}},
		"get_nft_view.cdc": {scriptsGet_nft_viewCdc, map[string]*bintree{}},
		"get_total_supply.cdc": {scriptsGet_total_supplyCdc, map[string]*bintree{}},
	}},
	"transactions": {nil, map[string]*bintree{
		"NFTForwarding": {nil, map[string]*bintree{
			"change_forwarder_recipient.cdc": {transactionsNftforwardingChange_forwarder_recipientCdc, map[string]*bintree{}},
			"create_forwarder.cdc": {transactionsNftforwardingCreate_forwarderCdc, map[string]*bintree{}},
			"transfer_nft_to_receiver.cdc": {transactionsNftforwardingTransfer_nft_to_receiverCdc, map[string]*bintree{}},
			"unlink_forwarder_link_collection.cdc": {transactionsNftforwardingUnlink_forwarder_link_collectionCdc, map[string]*bintree{}},
		}},
		"destroy_nft.cdc": {transactionsDestroy_nftCdc, map[string]*bintree{}},
		"mint_nft.cdc": {transactionsMint_nftCdc, map[string]*bintree{}},
		"setup_account.cdc": {transactionsSetup_accountCdc, map[string]*bintree{}},
		"setup_account_from_nft_reference.cdc": {transactionsSetup_account_from_nft_referenceCdc, map[string]*bintree{}},
		"setup_account_to_receive_royalty.cdc": {transactionsSetup_account_to_receive_royaltyCdc, map[string]*bintree{}},
		"transfer_nft.cdc": {transactionsTransfer_nftCdc, map[string]*bintree{}},
		"unlink_collection.cdc": {transactionsUnlink_collectionCdc, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
